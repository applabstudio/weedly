/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS FLEXBOX CROSSBROWSER               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS BUTTON STYLE                       */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  REUSABLE SASS MIXINS ON-EVENT                                   */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN WHEN-INSIDE                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  CONTAINER                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS POSITION                              */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN SIZE                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXIN SET-FONT                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXINS REM UNITS             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                REUSABLE SASS MIXIN BORDER                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS PADDING                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                              REUSABLE SASS MIXINS BOX-SHADOW                             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                            HIDING/SHOWING FADE TRANSITION                  */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 LIST RESET                                 */
/* -------------------------------------------------------------------------- */
/*
    Grid class name
*/
/*
    Cell class name
*/
/*
    Gutter size
*/
/*
    Optionally include max-width to fix IE issues
*/
/*
    Grid
*/
.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
    Grid cell
*/
.grid-cell,
.grid--auto > * {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4;
}

/*
    Grid cell modifiers
 */
.grid-cell--auto-size {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
}

.grid-cell--light {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.grid-cell--heavy {
  -webkit-box-flex: 8;
      -ms-flex-positive: 8;
          flex-grow: 8;
}

/*
    Grid gutters
*/
.grid--gutters {
  margin: -30px 0 0 -30px;
}

.grid--gutters > .grid-cell,
.grid--auto.grid--gutters > * {
  padding: 30px 0 0 30px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*
    Alignment per row
*/
.grid--top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.grid--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.grid--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/*
    Flexible cells
*/
.grid--flex-grid-cell > .grid-cell,
.grid--flex > .grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/*
    Justify
*/
.grid--justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/*
    Alignment per cell
*/
.grid-cell--top {
  -ms-flex-item-align: start;
      align-self: flex-start;
}

.grid-cell--bottom {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.grid-cell--center {
  -ms-flex-item-align: center;
      align-self: center;
}

/*
    Generate grid classes
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::selection {
  background: #28C660;
}

body {
  background: #28C660;
}

figure {
  margin: 0;
}

img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  text-decoration: none;
}

a:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

address {
  font-style: normal;
}

h1, h2, h3, h4, h5, h6,
ul, ol, p {
  margin: 0;
}

.js-allclick, .js-toggle {
  cursor: pointer;
}

html, body {
  font-size: 10px;
}

body {
  color: black;
  font-family: "Sarabun", sans-serif;
  line-height: 1.6;
}

.tinytext {
  line-height: 1.6;
  font-size: 1rem;
}

.tinytext--small {
  font-size: 0.88889rem;
}

.tinytext > * {
  margin-bottom: 1rem;
}

.tinytext > *:first-child {
  margin-top: 0;
}

.tinytext > *:last-child {
  margin-bottom: 0;
}

.tinytext h1, .tinytext h2, .tinytext h3, .tinytext h4 {
  margin: 1.25rem 0 0.5rem;
}

.tinytext ul li {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.2rem;
}

.tinytext a[href^="mailto"] {
  font-weight: 500;
  position: relative;
  padding-left: 1.75rem;
  background: url("../images/svg/envelope.svg") center left no-repeat;
}

.tinytext strong {
  font-weight: 800;
}

.tinytext em {
  font-style: italic;
}

.tinytext ul, .tinytext ol {
  margin-left: 0;
  padding-left: 1.25rem;
}

.tinytext ul li, .tinytext ol li {
  margin: 0;
}

@media (min-width: 768px) {
  .tinytext .embedded-entity {
    max-width: 40%;
    float: left;
    margin: 1rem 1rem 1rem 0;
  }
}

.tinytext--small {
  font-size: 0.88889rem;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.content-left > * {
  margin-left: 0;
}

.content-center > * {
  margin-left: auto;
  margin-right: auto;
}

.content-right > * {
  margin-right: 0;
}

.btn {
  font-family: "Poppins", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 500;
  font-size: 1.60181rem;
  width: 100%;
  height: auto;
  padding: 1rem 2.5rem;
  line-height: 1.6;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  -webkit-box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
  border: none;
  border-radius: 6px;
}

.btn svg {
  width: 2rem;
  height: 2rem;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.btn--primary {
  color: white;
  background: #28C660;
  border-color: #28C660;
}

.btn--primary svg {
  fill: white;
}

.btn--primary:hover, .btn--primary:active, .btn--primary:focus {
  color: #28C660;
  background: white;
}

.btn--primary:hover svg, .btn--primary:active svg, .btn--primary:focus svg {
  fill: #28C660;
}

.btn--primary:active {
  background: #28C660;
  color: white;
}

.btn--dark {
  color: white;
  background: black;
  border-color: black;
}

.btn--dark svg {
  fill: white;
}

.btn--dark:hover, .btn--dark:active, .btn--dark:focus {
  color: black;
  background: white;
  border-color: black;
}

.btn--dark:hover svg, .btn--dark:active svg, .btn--dark:focus svg {
  fill: black;
}

.btn--dark:active {
  background: white;
  color: black;
}

.btn--google {
  color: white;
  background: #DB3236;
  border-color: #DB3236;
  width: 324px;
}

.btn--google svg {
  fill: white;
}

.btn--google:hover, .btn--google:active, .btn--google:focus {
  color: #DB3236;
  background: white;
  border-color: #DB3236;
}

.btn--google:hover svg, .btn--google:active svg, .btn--google:focus svg {
  fill: #DB3236;
}

.btn--google:active {
  background: #DB3236;
  color: white;
}

.btn--facebook {
  color: white;
  background: #3B5998;
  border-color: #3B5998;
  width: 60px;
  font-size: 1.6rem;
  border-radius: 6px;
  cursor: pointer;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
}

.btn--facebook svg {
  fill: white;
}

.btn--facebook:hover, .btn--facebook:active, .btn--facebook:focus {
  color: #3B5998;
  background: white;
  border-color: #3B5998;
}

.btn--facebook:hover svg, .btn--facebook:active svg, .btn--facebook:focus svg {
  fill: #3B5998;
}

.btn--facebook:active {
  background: #3B5998;
  color: white;
}

.btn--yellow {
  color: white;
}

.btn--yellow svg {
  fill: white;
}

.btn--yellow:hover, .btn--yellow:active, .btn--yellow:focus {
  background: white;
}

.btn--yellow:active {
  color: white;
}

.btn--grey {
  color: white;
}

.btn--grey svg {
  fill: white;
}

.btn--grey:hover, .btn--grey:active, .btn--grey:focus {
  background: white;
}

.btn--grey:active {
  color: white;
}

.btn--beige:hover, .btn--beige:active, .btn--beige:focus {
  background: #28C660;
}

.btn-simple {
  margin: 2rem 1rem 0 0;
  font-size: 1.6rem;
}

.btn-simple--muted {
  color: #F3F3F4;
}

.btn-simple--primary {
  font-weight: 500;
}

.btn-lang {
  border: none;
  color: white;
  padding: 0;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.btn-lang:hover {
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
  color: #c3c3c3;
}

.btn-gold {
  background: rgba(195, 160, 0, 0.5);
}

.btn-gold span {
  margin-right: 14px;
  margin-bottom: 10px;
}

.btn-gray {
  background: rgba(226, 224, 219, 0.5);
}

.btn-gray span {
  margin-right: 14px;
  margin-bottom: 10px;
}

.btn-primary {
  font-family: "Poppins", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 500;
  font-size: 1.6rem;
  width: 35.6rem;
  height: 4.3rem;
  background: #28C660;
  -webkit-box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
  border: none;
  margin: 0 auto;
  line-height: 3.6rem;
  text-align: center;
  color: white;
  cursor: pointer;
}

.btn-primary:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  background: #d9b968;
}

/* -------------------------------------------------------------------------- */
/*                               COMPONENT toTOP                              */
/* -------------------------------------------------------------------------- */
.toTop {
  width: auto;
  height: 3.72rem;
  top: 86%;
  right: 2rem;
  position: fixed;
  z-index: 99999;
  background: #4b463e;
  border-radius: 50%;
  padding: 1.2rem 1rem;
  opacity: 0.6;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
}

.toTop:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  opacity: 1;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
  color: white;
}

.input-normal {
  background: #F3F3F4;
  height: 4rem;
  border-radius: 4px;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.uk-input:focus, .uk-select:focus, .uk-textarea:focus {
  border-color: #28C660;
}

.link-text {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  text-decoration: none;
  color: #28C660;
}

.link-text:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  color: #13a747;
}

.left-panel {
  background: #28C660;
  width: 480px;
  height: 100vh;
}

@media (max-width: 992px) {
  .left-panel {
    width: 100%;
    height: 100vh;
  }
}

.left-panel__wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.left-panel__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__body p {
  color: white;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

@media (max-width: 992px) {
  .left-panel__body p {
    text-align: center;
  }
}

.left-panel__body button, .left-panel__body input {
  margin-top: 3.2rem;
  width: 15rem;
  padding: 1rem 2rem;
}

@media (max-width: 992px) {
  .left-panel__body button, .left-panel__body input {
    width: 100%;
  }
}

.left-panel__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-flow: column;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .left-panel__header {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.left-panel__header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  padding-bottom: 16rem;
}

@media (max-width: 1200px) {
  .left-panel__header__wrapper {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
    padding-bottom: 2rem;
  }
}

@media (max-width: 1200px) {
  .left-panel__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.right-panel {
  width: 47%;
  margin: 0 auto;
}

@media (max-width: 992px) {
  .right-panel {
    width: 100%;
  }
}

.right-panel__login {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

.right-panel__login__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100%;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .right-panel__login__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.right-panel__login__wrapper__header {
  width: 400px;
  padding: 1.4rem 0;
}

@media (max-width: 992px) {
  .right-panel__login__wrapper__header {
    padding: unset;
  }
}

.right-panel__login__wrapper__header h1 {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: center;
}

.right-panel__login__wrapper__header .social-signin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  padding: 4rem 0 0 0;
}

.right-panel__login__wrapper__header .uk-divider-icon {
  margin-bottom: 0;
}

.right-panel__login__wrapper .login-form {
  width: 400px;
}

.right-panel__login__wrapper .login-form label {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 1.6rem;
  display: inline-block;
  margin: 1rem 0;
}

.right-panel__login__wrapper .login-form__password {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.right-panel__login__wrapper .login-form button {
  width: 16rem;
}

@media (max-width: 992px) {
  .right-panel__login__wrapper .login-form button {
    width: 100%;
  }
}

.page {
  background: white;
  margin: 0 auto;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2ZsZXguc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2J1dHRvbi1zdHlsZS5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fb24tZXZlbnQuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3doZW4taW5zaWRlLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19jb250YWluZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zaXplLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zZXQtZm9udC5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fcmVtLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19ib3JkZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3BhZGRpbmcuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2JveC1zaGFkb3cuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3RyYW5zaXRpb24uc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2xpc3RyZXNldC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEtZ3JpZC9faW5jbHVkZS1tZWRpYS1ncmlkLnNjc3MiLCJtYWluLmNzcyIsInBhcnRzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwicGFydHMvYmFzZS9fYmFzZS5zY3NzIiwicGFydHMvYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJzY2FsZS1zYXNzL3N0eWxlc2hlZXRzL21vZHVsYXJzY2FsZS9fZnVuY3Rpb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlbS9fcmVtLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvaW5jbHVkZS1tZWRpYS9kaXN0L19pbmNsdWRlLW1lZGlhLnNjc3MiLCJwYXJ0cy9iYXNlL19oZWxwZXJzLnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAxLWF0b21zL19idXR0b24uc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX3RvVG9wLnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAxLWF0b21zL19pbnB1dC5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMS1hdG9tcy9fYW5jaG9yLnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAzLW9yZ2FuaXNtcy9fbG9naW4uc2NzcyIsInBhcnRzL3BhZ2VzL19wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSxxR0FBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSxtR0FBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSw2RkFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSw2RkFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSw2RkFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDRkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FDQUE7O0NDMENDO0FEckNEOztDQ3dDQztBRG5DRDs7Q0NzQ0M7QURqQ0Q7O0NDb0NDO0FEL0JEOztDQ2tDQztBRC9CRDtFQUNJLG9CQUFhO0VBQWIsb0JBQWE7RUFBYixhQUFhO0VBQ2IsbUJBQWU7TUFBZixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxVQUFVO0FDaUNkOztBRDlCQTs7Q0NrQ0M7QUQvQkQ7O0VBRUksbUJBQU87TUFBUCxXQUFPO1VBQVAsT0FBTztFQUNQLG1CQUFZO01BQVosb0JBQVk7VUFBWixZQUFZO0FDaUNoQjs7QUQ5QkE7O0VDa0NFO0FEL0JGO0VBQ0ksbUJBQVU7TUFBVixjQUFVO1VBQVYsVUFBVTtBQ2lDZDs7QUQ5QkE7RUFDSSxtQkFBWTtNQUFaLG9CQUFZO1VBQVosWUFBWTtBQ2lDaEI7O0FEOUJBO0VBQ0ksbUJBQVk7TUFBWixvQkFBWTtVQUFaLFlBQVk7QUNpQ2hCOztBRDlCQTs7Q0NrQ0M7QUQvQkQ7RUFDSSx1QkV3QnNCO0FEUzFCOztBRC9CQTs7RUFFSSxzQkVvQnNCO0VGbkJ0Qiw4QkFBc0I7VUFBdEIsc0JBQXNCO0FDa0MxQjs7QUQvQkE7O0NDbUNDO0FEaENEO0VBQ0ksd0JBQXVCO01BQXZCLHFCQUF1QjtVQUF2Qix1QkFBdUI7QUNrQzNCOztBRGhDQTtFQUNJLHNCQUFxQjtNQUFyQixtQkFBcUI7VUFBckIscUJBQXFCO0FDbUN6Qjs7QURqQ0E7RUFDSSx5QkFBbUI7TUFBbkIsc0JBQW1CO1VBQW5CLG1CQUFtQjtBQ29DdkI7O0FEakNBOztDQ3FDQztBRGxDRDs7RUFFSSxvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtBQ29DakI7O0FEakNBOztDQ3FDQztBRGxDRDtFQUNJLHdCQUF1QjtNQUF2QixxQkFBdUI7VUFBdkIsdUJBQXVCO0FDb0MzQjs7QURqQ0E7O0NDcUNDO0FEbENEO0VBQ0ksMEJBQXNCO01BQXRCLHNCQUFzQjtBQ29DMUI7O0FEbENBO0VBQ0ksd0JBQW9CO01BQXBCLG9CQUFvQjtBQ3FDeEI7O0FEbkNBO0VBQ0ksMkJBQWtCO01BQWxCLGtCQUFrQjtBQ3NDdEI7O0FEbkNBOztDQ3VDQztBRXJKRCwyRUFBQTtBQUVBOytFRnNKK0U7QUVuSi9FOzs7RUZ1SkU7QUVsSkY7RUFDRSxpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLDhCQUE4QjtFQUFFLE1BQUE7QUZzSmxDOztBRW5KQTsrRUZzSitFO0FFbkovRTs7RUZzSkU7QUVsSkY7RUFDRSxTQUFTO0FGb0pYOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUZrSmxCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7O0VGbUpFO0FFOUlGO0VBQ0UsK0JBQXVCO1VBQXZCLHVCQUF1QjtFQUFFLE1BQUE7RUFDekIsU0FBUztFQUFFLE1BQUE7RUFDWCxpQkFBaUI7RUFBRSxNQUFBO0FGbUpyQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTsrRUZvSitFO0FFakovRTs7RUZvSkU7QUVoSkY7RUFDRSw2QkFBNkI7QUZrSi9COztBRS9JQTs7O0VGb0pFO0FFL0lGO0VBQ0UsbUJBQW1CO0VBQUUsTUFBQTtFQUNyQiwwQkFBMEI7RUFBRSxNQUFBO0VBQzVCLHlDQUFpQztVQUFqQyxpQ0FBaUM7RUFBRSxNQUFBO0FGb0pyQzs7QUVqSkE7O0VGcUpFO0FFakpGOztFQUVFLG1CQUFtQjtBRm1KckI7O0FFaEpBOzs7RUZxSkU7QUVoSkY7OztFQUdFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUZrSjFCOztBRS9JQTtFQUNFLGVBQWU7QUZrSmpCOztBRS9JQTtFQUNFLFdBQVc7QUZrSmI7O0FFL0lBOytFRmtKK0U7QUUvSS9FOztFRmtKRTtBRTlJRjtFQUNFLGtCQUFrQjtBRmdKcEI7O0FFN0lBOytFRmdKK0U7QUU3SS9FOzs7RUZpSkU7QUU1SUY7Ozs7O0VBS0Usb0JBQW9CO0VBQUUsTUFBQTtFQUN0QixlQUFlO0VBQUUsTUFBQTtFQUNqQixpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLFNBQVM7RUFBRSxNQUFBO0FGa0piOztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNRLE1BQUE7RUFDTixpQkFBaUI7QUZrSm5COztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNTLE1BQUE7RUFDUCxvQkFBb0I7QUZrSnRCOztBRS9JQTs7RUZtSkU7QUUvSUY7Ozs7RUFJRSwwQkFBMEI7QUZpSjVCOztBRTlJQTs7RUZrSkU7QUU5SUY7Ozs7RUFJRSxrQkFBa0I7RUFDbEIsVUFBVTtBRmdKWjs7QUU3SUE7O0VGaUpFO0FFN0lGOzs7O0VBSUUsOEJBQThCO0FGK0loQzs7QUU1SUE7O0VGZ0pFO0FFNUlGO0VBQ0UsOEJBQThCO0FGOEloQzs7QUUzSUE7Ozs7O0VGa0pFO0FFM0lGO0VBQ0UsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsZUFBZTtFQUFFLE1BQUE7RUFDakIsVUFBVTtFQUFFLE1BQUE7RUFDWixtQkFBbUI7RUFBRSxNQUFBO0FGbUp2Qjs7QUVoSkE7O0VGb0pFO0FFaEpGO0VBQ0Usd0JBQXdCO0FGa0oxQjs7QUUvSUE7O0VGbUpFO0FFL0lGO0VBQ0UsY0FBYztBRmlKaEI7O0FFOUlBOzs7RUZtSkU7QUFDRjs7RUU3SUUsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsVUFBVTtFQUFFLE1BQUE7QUZrSmQ7O0FFL0lBOztFRm1KRTtBQUNGOztFRTlJRSxZQUFZO0FGaUpkOztBRTlJQTs7O0VGbUpFO0FBQ0Y7RUU5SUUsNkJBQTZCO0VBQUUsTUFBQTtFQUMvQixvQkFBb0I7RUFBRSxNQUFBO0FGa0p4Qjs7QUUvSUE7O0VGbUpFO0FBQ0Y7RUUvSUUsd0JBQXdCO0FGaUoxQjs7QUU5SUE7OztFRm1KRTtBRTlJRjtFQUNFLDBCQUEwQjtFQUFFLE1BQUE7RUFDNUIsYUFBYTtFQUFFLE1BQUE7QUZrSmpCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7RUZrSkU7QUU5SUY7RUFDRSxjQUFjO0FGZ0poQjs7QUU3SUE7O0VGaUpFO0FFN0lGO0VBQ0Usa0JBQWtCO0FGK0lwQjs7QUU1SUE7K0VGK0krRTtBRTVJL0U7O0VGK0lFO0FFM0lGO0VBQ0UsYUFBYTtBRjZJZjs7QUUxSUE7O0VGOElFO0FBQ0Y7RUUxSUUsYUFBYTtBRjRJZjs7QUd2ZUE7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0FIMGV4Qjs7QUd2ZUE7RUFDRSxtQkZ5Rlk7QURpWmQ7O0FHdmVBO0VBQ0UsbUJGeUZZO0FEaVpkOztBR3ZlQTtFQUNFLFNBQVM7QUgwZVg7O0FHdmVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixjQUFjO0FIMGVoQjs7QUd2ZUE7RUFDRSxxQkFBcUI7QUgwZXZCOztBRzNlQTtFQUlJLDRCRndGSztFRXhGTCx1QkZ3Rks7RUV4Rkwsb0JGd0ZLO0FEbVpUOztBR3RlQTtFQUNFLGtCQUFrQjtBSHllcEI7O0FHdGVBOztFQUVFLFNBQVM7QUh5ZVg7O0FHdGVBO0VBQ0UsZUFBZTtBSHllakI7O0FJbGhCQTtFQUNFLGVBQWU7QUpxaEJqQjs7QUlsaEJBO0VBQ0UsWUhxRmdCO0VHcEZoQixrQ0h1R3NDO0VHdEd0QyxnQkFBZ0I7QUpxaEJsQjs7QUlsaEJBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVDRW9DO0FMbWhCdEM7O0FJcGhCRTtFQUNFLHFCQ0FrQztBTHVoQnRDOztBSTNoQkE7RUFRSSxtQkVnQndEO0FOdWdCNUQ7O0FJL2hCQTtFQVlJLGFBQWE7QUp1aEJqQjs7QUluaUJBO0VBZ0JJLGdCQUFnQjtBSnVoQnBCOztBSXZpQkE7RUFvQkksd0JFSXdEO0FObWhCNUQ7O0FJM2lCQTtFWk5DLG9FQUF1RDtFQUN2RCxrQkFGNkU7RUFHN0UsbUJBSDREO0VBSTVELGlCU3VCaUI7QUQ4aEJsQjs7QUlsakJBO0VBNkJNLGdCQUFnQjtFZGZyQixrQkFYMEI7RWM0QnJCLHFCRVBzRDtFRlF0RCxtRUFBbUU7QUp5aEJ6RTs7QUl6akJBO0VBcUNJLGdCQUFnQjtBSndoQnBCOztBSTdqQkE7RUF5Q0ksa0JBQWtCO0FKd2hCdEI7O0FJamtCQTtFQTZDSSxjQUFjO0VBQ2QscUJFdEJ3RDtBTjhpQjVEOztBSXRrQkE7RUFnRE0sU0FBUztBSjBoQmY7O0FPbkNJO0VIdmlCSjtJQXNETSxjQUFjO0lBQ2QsV0FBVztJQUNYLHdCQUF3QjtFSnloQjVCO0FBQ0Y7O0FJdGhCRTtFQUNFLHFCQ3pEa0M7QUxrbEJ0Qzs7QVFobUJBO0VBQ0UsU0FBUztFQUNULG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLFVBQVU7QVJtbUJaOztBUWhtQkE7RUFFSSxjQUFjO0FSa21CbEI7O0FRL2xCQTtFQUVJLGlCQUFpQjtFQUNqQixrQkFBa0I7QVJpbUJ0Qjs7QVE5bEJBO0VBRUksZUFBZTtBUmdtQm5COztBUy9tQkE7RWpCTEMsb0VBQXVEO0VBQ3ZELGtCaUJLZ0Q7RWpCSmhELGdCaUJKTztFakJLUCxxQmFPcUM7RWRWckMsV2tCT21CO0VsQk5uQixZa0JNeUI7RUFDeEIsb0JIc0IwRDtFR3JCMUQsZ0JBUk07RUFTTixxQkFBcUI7RUFDckIsYUFBYTtFQUNiLGVBQWU7RUFDZiw0QlJpR087RVFqR1AsdUJSaUdPO0VRakdQLG9CUmlHTztFUWhHUCxrREFBMEM7VUFBMUMsMENBQTBDO0VBQzFDLFlBQVc7RUFDWCxrQkFqQlM7QVR1b0JYOztBU2pvQkE7RWxCTEMsV2U4QjJEO0VmN0IzRCxZZTZCMkQ7RUdWeEQsNEJSMEZLO0VRMUZMLHVCUjBGSztFUTFGTCxvQlIwRks7QUQ4aEJUOztBU3JuQkU7RXZCdEJELFl1QnVCOEI7RXZCdEI5QixtQmV3RmE7RWZ2RmIscUJldUZhO0FEd2pCZDs7QWQ3b0JDO0VBQ0UsV3VCa0I0QjtBVDhuQi9COztBYjlvQkc7RURFQSxjZWdGVztFZi9FWCxpQnVCYWlGO0FUbW9CcEY7O0FkN29CRztFQUNELGFlMkVZO0FEcWtCZDs7QVN4b0JHO0VBR0csbUJSZ0VRO0VRL0RSLFlBQVk7QVR5b0JsQjs7QVN0b0JFO0V2QjdCRCxZdUI4QjhCO0V2QjdCOUIsaUJ1QjZCNEM7RXZCNUI1QyxtQnVCNEIwRDtBVDJvQjNEOztBZHJxQkM7RUFDRSxXdUJ5QjRCO0FUK29CL0I7O0FidHFCRztFREVBLFl1QnFCbUM7RXZCcEJuQyxpQnVCb0JpRDtFdkJuQmpELG1CdUJtQitEO0FUcXBCbEU7O0FkdHFCRztFQUNELFd1QmdCb0M7QVR5cEJ0Qzs7QVMxcEJHO0VBR0csaUJBQWtCO0VBQ2xCLFlBQVk7QVQycEJsQjs7QVN4cEJFO0V2QnBDRCxZdUJxQzhCO0V2QnBDOUIsbUJlOEZhO0VmN0ZiLHFCZTZGYTtFUXpEVixZQUFZO0FUNnBCaEI7O0FkL3JCQztFQUNFLFd1QmdDNEI7QVRrcUIvQjs7QWJoc0JHO0VERUEsY2VzRlc7RWZyRlgsaUJ1QjJCdUU7RXZCMUJ2RSxxQmVvRlc7QUQ4bUJkOztBZGhzQkc7RUFDRCxhZWlGWTtBRGtuQmQ7O0FTN3FCRztFQUlHLG1CUnVEUTtFUXREUixZQUFZO0FUNnFCbEI7O0FTMXFCRTtFdkI1Q0QsWXVCNkM4QjtFdkI1QzlCLG1CZStGYTtFZjlGYixxQmU4RmE7RVFsRFYsV0FBVztFQUNYLGlCQUFnQjtFQUNoQixrQkFsRE87RUFtRFAsZUFBZTtFQUNmLDRCUjJESztFUTNETCx1QlIyREs7RVEzREwsb0JSMkRLO0VRMURMLGtEQUEwQztVQUExQywwQ0FBMEM7QVQrcUI5Qzs7QWQ5dEJDO0VBQ0UsV3VCd0M0QjtBVHlyQi9COztBYi90Qkc7RURFQSxjZXVGVztFZnRGWCxpQnVCbUN1RTtFdkJsQ3ZFLHFCZXFGVztBRDRvQmQ7O0FkL3RCRztFQUNELGFla0ZZO0FEZ3BCZDs7QVNwc0JHO0VBU0csbUJSMkNRO0VRMUNSLFlBQVk7QVQrckJsQjs7QVM1ckJFO0V2QnpERCxZdUIwRDhCO0FUK3JCL0I7O0FkcnZCQztFQUNFLFd1QnFENEI7QVRtc0IvQjs7QWJ0dkJHO0VER0EsaUJ1QmdEdUU7QVR1c0IxRTs7QVN4c0JHO0VBSUcsWUFBVztBVHdzQmpCOztBU3JzQkU7RXZCaEVELFl1QmlFOEI7QVR3c0IvQjs7QWRyd0JDO0VBQ0UsV3VCNEQ0QjtBVDRzQi9COztBYnR3Qkc7RURHQSxpQnVCdUR1RTtBVGd0QjFFOztBU2p0Qkc7RUFJRyxZQUFXO0FUaXRCakI7O0FiOXdCRztFREdBLG1CZStFVztBRGdzQmQ7O0FTN3NCQTtFQUNFLHFCQUFvQjtFSGZkLGlCTGxDUztBRGt3QmpCOztBUzlzQkU7RUFDRSxjUldVO0FEc3NCZDs7QVMvc0JFO0VBRUUsZ0JBeEZJO0FUeXlCUjs7QVM3c0JBO0VBQ0UsWUFBWTtFQUNaLFlBQVc7RUFDWCxVQUFVO0VBQ1YsMkJBQW9CO0VBQXBCLDJCQUFvQjtFQUFwQixvQkFBb0I7RUFDcEIseUJBQW1CO01BQW5CLHNCQUFtQjtVQUFuQixtQkFBbUI7QVRndEJyQjs7QVNydEJBO0VBT0ksd0JSYUs7RVFiTCxtQlJhSztFUWJMLGdCUmFLO0VRWkwsY0FBYztBVGt0QmxCOztBUzlzQkE7RUFDRSxrQ0FBaUM7QVRpdEJuQzs7QVNsdEJBO0VBR0ksa0JBQWtCO0VBQ2xCLG1CQUFtQjtBVG10QnZCOztBUy9zQkE7RUFDRSxvQ0FBb0M7QVRrdEJ0Qzs7QVNudEJBO0VBR0ksa0JBQWtCO0VBQ2xCLG1CQUFtQjtBVG90QnZCOztBU2h0QkE7RWpCdEhDLG9FQUF1RDtFQUN2RCxrQmlCc0hnRDtFakJySGhELGdCaUJxSHdDO0VqQnBIeEMsaUJTMEJnQjtFVjdCaEIsY2tCd0hzQjtFbEJ2SHRCLGNrQnVIOEI7RUFDN0IsbUJSL0JZO0VRZ0NaLGtEQUEwQztVQUExQywwQ0FBMEM7RUFDMUMsWUFBWTtFQUNaLGNBQWE7RUFDYixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixlQUFlO0FUdXRCakI7O0FTanVCQTtFQVlJLDRCUnBCSztFUW9CTCx1QlJwQks7RVFvQkwsb0JScEJLO0VRcUJMLG1CQUFtQjtBVHl0QnZCOztBVWgyQkEsK0VBQUE7QUFDQSwrRUFBQTtBQUNBLCtFQUFBO0FBRUE7RW5CQUMsV21CQ3FCO0VuQkFyQixlbUJBOEI7RXBCZ0I3QixRb0Jmd0I7RXBCZXhCLFdvQmZtQztFcEJrQnBDLGVBZnVCO0VvQkZwQixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLGVBQWU7RUFDZixrREFBMEM7VUFBMUMsMENBQTBDO0FWcTJCOUM7O0FVOTJCQTtFQVlRLDRCVGtHQztFU2xHRCx1QlRrR0M7RVNsR0Qsb0JUa0dDO0VTakdELFVBQVM7RUFDVCxrREFBMEM7VUFBMUMsMENBQTBDO0VBQzFDLFlBQVc7QVZzMkJuQjs7QVd6M0JDO0VBQ0MsbUJWZ0dZO0VVL0ZaLFlBQVk7RUFDWixrQkFBa0I7RW5CQ25CLG9FQUF1RDtFQUN2RCxrQm1CRG9EO0VuQkVwRCxtQm1CRjRDO0VuQkc1QyxpQm1CSDREO0FYKzNCN0Q7O0FXNTNCQztFQUNDLHFCVjBGWTtBRHF5QmQ7O0FZdjRCQTtFcEJJQyxvRUFBdUQ7RUFDdkQsa0JvQkpvRDtFcEJLcEQsbUJvQkw0QztFcEJNNUMsaUJvQk40RDtFQUMzRCxxQkFBcUI7RUFDckIsY1grRlk7QUQ4eUJkOztBWWg1QkE7RUFLSSw0Qlg2R0s7RVc3R0wsdUJYNkdLO0VXN0dMLG9CWDZHSztFVzVHTCxjWDZGbUI7QURrekJ2Qjs7QWFyNUJBO0VBQ0MsbUJaaUdhO0VWOUZiLFlzQkZtQjtFdEJHbkIsYXNCSDBCO0FieTVCM0I7O0FPMVdJO0VNampCSjtJdEJJQyxXc0JDbUI7SXRCQW5CLGFzQkEwQjtFYjQ1QnpCO0FBQ0Y7O0FhMTVCQztFQUNDLFlBQVc7RTVCSFosb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0FlaTZCZDs7QWE5NUJDO0U1QlBBLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGViw0QjRCdEY2QjtFNUJ1Ri9CLDJCNEJ2RitCO0U1QndGOUIsd0I0QnhGOEI7VTVCd0Y5Qix1QjRCeEY4QjtFNUJ5RjVCLHFCNEJ6RjRCO0U1QjJHN0Isd0I0QjFHeUI7RTVCMkczQix1QjRCM0cyQjtFNUI0RzFCLHlCNEI1RzBCO001QjRHMUIsc0I0QjVHMEI7VTVCNEcxQixtQjRCNUcwQjtBYjQ2QjdCOztBYS82QkU7RUFNQyxZQUFZO0VyQmZkLG9FQUF1RDtFQUN2RCxrQnFCZXFEO0VyQmRyRCxtQnFCYzZDO0VyQmI3QyxpQnFCYTZEO0FiZzdCOUQ7O0FPblpJO0VNcGlCRjtJQVNFLGtCQUFrQjtFYm03QnBCO0FBQ0Y7O0FhNzdCRTtFQWNDLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osa0JBQWtCO0FibTdCckI7O0FPL1pJO0VNcGlCRjtJQW1CRSxXQUNEO0VibzdCRDtBQUNGOztBYWo3QkM7RTVCL0JBLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQXdDWixxQjRCWHlCO0U1Qll4Qiw0QjRCWndCO0U1Qll4Qiw2QjRCWndCO1U1Qll4QixpQjRCWndCO0U1QjhEdkIsNEI0QjdENkI7RTVCOEQvQiwyQjRCOUQrQjtFNUIrRDlCLHdCNEIvRDhCO1U1QitEOUIsdUI0Qi9EOEI7RTVCZ0U1QixxQjRCaEU0QjtFQUMvQixZQUFZO0FiKzdCZDs7QU92Ykk7RU01Z0JIO0k1QmdFRyw0QjRCeEQ4QjtJNUJ5RGhDLDJCNEJ6RGdDO0k1QjBEL0Isd0I0QjFEK0I7WTVCMEQvQix1QjRCMUQrQjtJNUIyRDdCLHFCNEIzRDZCO0VibzhCaEM7QUFDRjs7QWFsOEJFO0U1QjFDRCxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUEyRlYsZ0M0Qm5Ea0M7RTVCb0RwQywrQjRCcERvQztFNUJxRG5DLHVCNEJyRG1DO1U1QnFEbkMsMkI0QnJEbUM7RTVCc0RqQyx5QjRCdERpQztFQUNuQyxxQkFBb0I7QWI2OEJ2Qjs7QU8vY0k7RU1qZ0JGO0k1QnFERSw0QjRCL0MrQjtJNUJnRGpDLDJCNEJoRGlDO0k1QmlEaEMsd0I0QmpEZ0M7WTVCaURoQyx1QjRCakRnQztJNUJrRDlCLHFCNEJsRDhCO0lBQy9CLG9CQUFtQjtFYm05QnJCO0FBQ0Y7O0FPMWRJO0VNdGZIO0k1QjBDRyw0QjRCeEM4QjtJNUJ5Q2hDLDJCNEJ6Q2dDO0k1QjBDL0Isd0I0QjFDK0I7WTVCMEMvQix1QjRCMUMrQjtJNUIyQzdCLHFCNEIzQzZCO0VidTlCaEM7QUFDRjs7QWFuOUJBO0VBQ0MsVUFBVTtFQUNWLGNBQWM7QWJzOUJmOztBT3plSTtFTS9lSjtJQUtHLFdBQVU7RWJ3OUJYO0FBQ0Y7O0FhdDlCQztFNUJwRUEsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBbUJWLDJCNEIrQzRCO0U1QjlDOUIsMEI0QjhDOEI7RTVCN0M3Qiw0QjRCNkM2QjtFNUI3QzdCLDZCNEI2QzZCO1U1QjdDN0Isc0I0QjZDNkI7RTVCOEM1Qix3QjRCN0N5QjtFNUI4QzNCLHVCNEI5QzJCO0U1QitDMUIseUI0Qi9DMEI7TTVCK0MxQixzQjRCL0MwQjtVNUIrQzFCLG1CNEIvQzBCO0U1QndCekIsNEI0QnZCNkI7RTVCd0IvQiwyQjRCeEIrQjtFNUJ5QjlCLHdCNEJ6QjhCO1U1QnlCOUIsdUI0QnpCOEI7RTVCMEI1QixxQjRCMUI0QjtFQUMvQixZQUFXO0FidStCYjs7QWFyK0JFO0U1QjNFRCxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUFtQlYsMkI0QnNENkI7RTVCckQvQiwwQjRCcUQrQjtFNUJwRDlCLDRCNEJvRDhCO0U1QnBEOUIsNkI0Qm9EOEI7VTVCcEQ5QixzQjRCb0Q4QjtFdEIvRWhDLFdzQmdGb0I7RXRCL0VwQixZc0IrRTBCO0U1QnNDdkIsd0I0QnJDMEI7RTVCc0M1Qix1QjRCdEM0QjtFNUJ1QzNCLHlCNEJ2QzJCO001QnVDM0Isc0I0QnZDMkI7VTVCdUMzQixtQjRCdkMyQjtFNUJnQjFCLDRCNEJmOEI7RTVCZ0JoQywyQjRCaEJnQztFNUJpQi9CLHdCNEJqQitCO1U1QmlCL0IsdUI0QmpCK0I7RTVCa0I3QixxQjRCbEI2QjtBYnUvQmxDOztBTzVoQkk7RU1oZUY7SUFRRSx1QkFBc0I7UUFBdEIsb0JBQXNCO1lBQXRCLHNCQUFzQjtJQUN0QixhQUFhO0VieS9CZjtBQUNGOztBYXYvQkc7RUFDQyxZQUFZO0VBQ1osaUJBQWlCO0FiMC9CckI7O0FPeGlCSTtFTXBkRDtJQUtFLGNBQWE7RWI0L0JoQjtBQUNGOztBYWxnQ0k7RXJCekZILG9FQUF1RDtFQUN2RCxrQnFCaUd1RDtFckJoR3ZELG1CcUJnRytDO0VyQi9GL0MsaUJxQitGK0Q7RUFDM0Qsa0JBQWtCO0FiZ2dDdkI7O0FhMWdDSTtFNUJ2Rkgsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DNEJPdUM7RTVCTnpDLGtDNEJNeUM7RTVCTHhDLHlCNEJLd0M7VTVCTHhDLDhCNEJLd0M7RTVCSnRDLDRCNEJJc0M7RUFDdEMsbUJBQW1CO0Fid2dDeEI7O0FheGhDSTtFQW9CQyxnQkFBZ0I7QWJ3Z0NyQjs7QWF4aUNHO0VBcUNDLFlBQVk7QWJ1Z0NoQjs7QWE1aUNHO0VyQjdFRixvRUFBdUQ7RUFDdkQsa0JxQm9Ib0Q7RXJCbkhwRCxnQnFCbUg0QztFckJsSDVDLGlCcUJrSDREO0VBQ3hELHFCQUFxQjtFQUNyQixjQUFhO0FiMmdDbEI7O0FhcmpDRztFNUIzRUYsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DNEIyQnVDO0U1QjFCekMsa0M0QjBCeUM7RTVCekJ4Qyx5QjRCeUJ3QztVNUJ6QnhDLDhCNEJ5QndDO0U1QnhCdEMsNEI0QndCc0M7RTVCTnZDLHdCNEJPNEI7RTVCTjlCLHVCNEJNOEI7RTVCTDdCLHlCNEJLNkI7TTVCTDdCLHNCNEJLNkI7VTVCTDdCLG1CNEJLNkI7QWJzaENoQzs7QWF0a0NHO0VBb0RFLFlBQVk7QWJzaENqQjs7QU8xbUJJO0VNaGVEO0lBdURHLFdBQVc7RWJ3aENmO0FBQ0Y7O0FjOXBDQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsZ0JBQWdCO0FkaXFDbEIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgTUlYSU5TIEZMRVhCT1ggQ1JPU1NCUk9XU0VSICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8vIEZsZXhib3ggZGlzcGxheVxuQG1peGluIGZsZXhib3goKSB7XG5cdGRpc3BsYXk6IC13ZWJraXQtYm94O1xuXHRkaXNwbGF5OiAtbW96LWJveDtcblx0ZGlzcGxheTogLW1zLWZsZXhib3g7XG5cdGRpc3BsYXk6IC13ZWJraXQtZmxleDtcblx0ZGlzcGxheTogZmxleDtcbiAgfVxuICBcbiAgLy8gVGhlICdmbGV4JyBzaG9ydGhhbmRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxwb3NpdGl2ZS1udW1iZXI+LCBpbml0aWFsLCBhdXRvLCBvciBub25lXG4gIEBtaXhpbiBmbGV4KCR2YWx1ZXMpIHtcblx0LXdlYmtpdC1ib3gtZmxleDogJHZhbHVlcztcblx0ICAgLW1vei1ib3gtZmxleDogJHZhbHVlcztcblx0XHQtd2Via2l0LWZsZXg6ICR2YWx1ZXM7XG5cdFx0ICAtbXMtZmxleDogJHZhbHVlcztcblx0XHRcdCAgZmxleDogJHZhbHVlcztcbiAgfVxuICBcbiAgLy8gRmxleCBGbG93IERpcmVjdGlvblxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyByb3cgfCByb3ctcmV2ZXJzZSB8IGNvbHVtbiB8IGNvbHVtbi1yZXZlcnNlXG4gIEBtaXhpbiBmbGV4LWRpcmVjdGlvbigkZGlyZWN0aW9uKSB7XG5cdC13ZWJraXQtZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cdCAgIC1tb3otZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cdFx0LW1zLWZsZXgtZGlyZWN0aW9uOiAkZGlyZWN0aW9uO1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG4gIH1cbiAgXG4gIC8vIEZsZXggTGluZSBXcmFwcGluZ1xuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyBub3dyYXAgfCB3cmFwIHwgd3JhcC1yZXZlcnNlXG4gIEBtaXhpbiBmbGV4LXdyYXAoJHdyYXApIHtcblx0LXdlYmtpdC1mbGV4LXdyYXA6ICR3cmFwO1xuXHQgICAtbW96LWZsZXgtd3JhcDogJHdyYXA7XG5cdFx0LW1zLWZsZXgtd3JhcDogJHdyYXA7XG5cdFx0XHRmbGV4LXdyYXA6ICR3cmFwO1xuICB9XG4gIFxuICAvLyBGbGV4IERpcmVjdGlvbiBhbmQgV3JhcFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyA8ZmxleC1kaXJlY3Rpb24+IHx8IDxmbGV4LXdyYXA+XG4gIEBtaXhpbiBmbGV4LWZsb3coJGZsb3cpIHtcblx0LXdlYmtpdC1mbGV4LWZsb3c6ICRmbG93O1xuXHQgICAtbW96LWZsZXgtZmxvdzogJGZsb3c7XG5cdFx0LW1zLWZsZXgtZmxvdzogJGZsb3c7XG5cdFx0XHRmbGV4LWZsb3c6ICRmbG93O1xuICB9XG4gIFxuICAvLyBEaXNwbGF5IE9yZGVyXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBpdGVtc1xuICAvLyA8aW50ZWdlcj5cbiAgQG1peGluIG9yZGVyKCR2YWwpIHtcblx0LXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogJHZhbDsgIFxuXHQgICAtbW96LWJveC1vcmRpbmFsLWdyb3VwOiAkdmFsOyAgICAgXG5cdFx0XHQgLW1zLWZsZXgtb3JkZXI6ICR2YWw7ICAgICBcblx0XHRcdCAgLXdlYmtpdC1vcmRlcjogJHZhbDsgIFxuXHRcdFx0XHQgIG9yZGVyOiAkdmFsO1xuICB9XG4gIFxuICAvLyBGbGV4IGdyb3cgZmFjdG9yXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBpdGVtc1xuICAvLyA8bnVtYmVyPlxuICBAbWl4aW4gZmxleC1ncm93KCRncm93KSB7XG5cdC13ZWJraXQtZmxleC1ncm93OiAkZ3Jvdztcblx0ICAgLW1vei1mbGV4LWdyb3c6ICRncm93O1xuXHRcdC1tcy1mbGV4LWdyb3c6ICRncm93O1xuXHRcdFx0ZmxleC1ncm93OiAkZ3JvdztcbiAgfVxuICBcbiAgLy8gRmxleCBzaHJpbmtcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW0gc2hyaW5rIGZhY3RvclxuICAvLyA8bnVtYmVyPiBcbiAgQG1peGluIGZsZXgtc2hyaW5rKCRzaHJpbmspIHtcblx0LXdlYmtpdC1mbGV4LXNocmluazogJHNocmluaztcblx0ICAgLW1vei1mbGV4LXNocmluazogJHNocmluaztcblx0XHQtbXMtZmxleC1zaHJpbms6ICRzaHJpbms7XG5cdFx0XHRmbGV4LXNocmluazogJHNocmluaztcbiAgfVxuICBcbiAgLy8gRmxleCBiYXNpc1xuICAvLyAtIHRoZSBpbml0aWFsIG1haW4gc2l6ZSBvZiB0aGUgZmxleCBpdGVtXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBpdGVtc25pdGlhbCBtYWluIHNpemUgb2YgdGhlIGZsZXggaXRlbVxuICAvLyA8d2lkdGg+IFxuICBAbWl4aW4gZmxleC1iYXNpcygkd2lkdGgpIHtcblx0LXdlYmtpdC1mbGV4LWJhc2lzOiAkd2lkdGg7XG5cdCAgIC1tb3otZmxleC1iYXNpczogJHdpZHRoO1xuXHRcdC1tcy1mbGV4LWJhc2lzOiAkd2lkdGg7XG5cdFx0XHRmbGV4LWJhc2lzOiAkd2lkdGg7XG4gIH1cbiAgXG4gIC8vIEF4aXMgQWxpZ25tZW50XG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IHNwYWNlLWJldHdlZW4gfCBzcGFjZS1hcm91bmQgXG4gIEBtaXhpbiBqdXN0aWZ5LWNvbnRlbnQoJGp1c3RpZnkpIHtcblx0LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xuXHQgICAtbW96LWp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdFx0LW1zLWp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xuXHRcdFx0ICAtbXMtZmxleC1wYWNrOiAkanVzdGlmeTtcbiAgfVxuICBcbiAgLy8gUGFja2luZyBGbGV4IExpbmVzXG4gIC8vIC0gYXBwbGllcyB0bzogbXVsdGktbGluZSBmbGV4IGNvbnRhaW5lcnNcbiAgLy8gZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCB8IHN0cmV0Y2ggXG4gIEBtaXhpbiBhbGlnbi1jb250ZW50KCRhbGlnbikge1xuXHQtd2Via2l0LWFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcblx0ICAgLW1vei1hbGlnbi1jb250ZW50OiAkYWxpZ247XG5cdFx0LW1zLWFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcblx0XHRcdGFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcbiAgfVxuICBcbiAgLy8gQ3Jvc3MtYXhpcyBBbGlnbm1lbnRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGNvbnRhaW5lcnNcbiAgLy8gZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgYmFzZWxpbmUgfCBzdHJldGNoIFxuICBAbWl4aW4gYWxpZ24taXRlbXMoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24taXRlbXM6ICRhbGlnbjtcblx0ICAgLW1vei1hbGlnbi1pdGVtczogJGFsaWduO1xuXHRcdC1tcy1hbGlnbi1pdGVtczogJGFsaWduO1xuXHRcdFx0YWxpZ24taXRlbXM6ICRhbGlnbjtcbiAgfVxuICBcbiAgLy8gQ3Jvc3MtYXhpcyBBbGlnbm1lbnRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIGF1dG8gfCBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2ggXG4gIEBtaXhpbiBhbGlnbi1zZWxmKCRhbGlnbikge1xuXHQtd2Via2l0LWFsaWduLXNlbGY6ICRhbGlnbjtcblx0ICAgLW1vei1hbGlnbi1zZWxmOiAkYWxpZ247XG5cdFx0LW1zLWFsaWduLXNlbGY6ICRhbGlnbjtcblx0XHRcdGFsaWduLXNlbGY6ICRhbGlnbjtcbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBNSVhJTlMgQlVUVE9OIFNUWUxFICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuQG1peGluIGJ1dHRvbi1zdHlsZSgkYywgJGMtaG92ZXIsICRiZywgJGJnLWhvdmVyLCAkYm9yZGVyLCAkYm9yZGVyLWhvdmVyKSB7XG5cdGNvbG9yOiAkYztcblx0YmFja2dyb3VuZDogJGJnO1xuXHRib3JkZXItY29sb3I6ICRib3JkZXI7XG4gIFxuXHRzdmcge1xuXHQgIGZpbGw6ICRjO1xuXHR9XG4gIFxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0ICBjb2xvcjogJGMtaG92ZXI7XG5cdCAgYmFja2dyb3VuZDogJGJnLWhvdmVyO1xuXHQgIGJvcmRlci1jb2xvcjogJGJvcmRlci1ob3ZlcjtcbiAgXG5cdCAgc3ZnIHtcblx0XHRmaWxsOiAkYy1ob3Zlcjtcblx0ICB9XG5cdH07XG59IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIE9OLUVWRU5UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBvbi1ldmVudCgkc2VsZjogZmFsc2UpIHtcblx0QGlmICRzZWxmIHtcblx0ICAmLFxuXHQgICY6aG92ZXIsXG5cdCAgJjphY3RpdmUsXG5cdCAgJjpmb2N1cyB7XG5cdFx0QGNvbnRlbnQ7XG5cdCAgfVxuXHR9IEBlbHNlIHtcblx0ICAmOmhvdmVyLFxuXHQgICY6YWN0aXZlLFxuXHQgICY6Zm9jdXMge1xuXHRcdEBjb250ZW50O1xuXHQgIH1cblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBXSEVOLUlOU0lERSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gd2hlbi1pbnNpZGUoJGNvbnRleHQpIHtcblx0I3skY29udGV4dH0gJiB7XG5cdCAgQGNvbnRlbnQ7XG5cdH1cbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT05UQUlORVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBjb250YWluZXIoJGZsdWlkOiBmYWxzZSkge1xuXHRwYWRkaW5nLWxlZnQ6ICRjb250YWluZXItcGFkO1xuXHRwYWRkaW5nLXJpZ2h0OiAkY29udGFpbmVyLXBhZDtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHdpZHRoOiAxMDAlO1xuXHRAaWYgbm90ICRmbHVpZCB7XG5cdCAgQGVhY2ggJGJwLCAkd2lkdGggaW4gJGNvbnRhaW5lci13aWR0aCB7XG5cdFx0QGluY2x1ZGUgbWVkaWEoXCI+PSN7JGJwfVwiKSB7XG5cdFx0ICB3aWR0aDogJHdpZHRoO1xuXHRcdH07XG5cdCAgfVxuXHR9XG59ICAiLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU5TIFBPU0lUSU9OICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vLyBQb3NpdGlvbmluZyBoZWxwZXJzXG5AbWl4aW4gYWJzb2x1dGUoJGFyZ3M6ICcnKSB7XG5cdEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAkYXJncyk7XG4gIH1cbiAgXG4gIEBtaXhpbiBmaXhlZCgkYXJnczogJycpIHtcblx0QGluY2x1ZGUgcG9zaXRpb24oZml4ZWQsICRhcmdzKTtcbiAgfVxuICBcbiAgQG1peGluIHJlbGF0aXZlKCRhcmdzOiAnJykge1xuXHRAaW5jbHVkZSBwb3NpdGlvbihyZWxhdGl2ZSwgJGFyZ3MpO1xuICB9XG4gIFxuICAvLyBQb3NpdGlvbmluZ1xuICBAbWl4aW4gcG9zaXRpb24oJHBvc2l0aW9uLCAkYXJncykge1xuXHRAZWFjaCAkbyBpbiB0b3AgcmlnaHQgYm90dG9tIGxlZnQge1xuXHQgICRpOiBpbmRleCgkYXJncywgJG8pO1xuXHQgIEBpZiAkaSBhbmQgJGkgKyAxIDw9IGxlbmd0aCgkYXJncykgYW5kIHR5cGUtb2YobnRoKCRhcmdzLCAkaSArIDEpKSA9PSBudW1iZXIge1xuXHRcdCN7JG99OiBudGgoJGFyZ3MsICRpICsgMSk7XG5cdCAgfVxuXHR9XG5cdHBvc2l0aW9uOiAkcG9zaXRpb247XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIFNJWkUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBzaXplKCR3aWR0aCwgJGhlaWdodDogJHdpZHRoKSB7XG5cdHdpZHRoOiAkd2lkdGg7XG5cdGhlaWdodDogJGhlaWdodDtcbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTiBTRVQtRk9OVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBzZXQtZm9udCggJGZhbWlseTogJGJhc2UtZm9udC1mYW1pbHkgLCAkd2VpZ2h0OiBub3JtYWwgLCAkc3R5bGU6IG5vcm1hbCwgJGZvbnRzaXplOiAkZnNQcmltYXJ5ICkge1xuXHRmb250LWZhbWlseTogJGZhbWlseSAsICdBcmlhbCcsICdIZWx2ZXRpY2EnLCBzYW5zLXNlcmlmO1xuXHRmb250LXN0eWxlOiAkc3R5bGU7XG5cdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuXHRmb250LXNpemU6ICRmb250c2l6ZTtcblx0XG4gIH1cbiAgQG1peGluIHNldC1mb250MiggJGZhbWlseTogJGJhc2UtZm9udC1mYW1pbHkgLCAkd2VpZ2h0OiBub3JtYWwpIHtcblx0Zm9udC1mYW1pbHk6ICRmYW1pbHkgLCAnQXJpYWwnLCAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcblx0Zm9udC13ZWlnaHQ6ICR3ZWlnaHQ7XG4gIH1cbiAgIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgUkVNIFVOSVRTICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vLyBVbHRpbWF0ZSBSZW0gVW5pdHNcbkBmdW5jdGlvbiBwYXJzZUludCgkbikge1xuXHQvKiAyICovXG5cdEByZXR1cm4gJG4gLyAoJG4gKiAwICsgMSk7XG4gIH1cbiAgQG1peGluIHJlbSgkcHJvcGVydHksICR2YWx1ZXMpIHtcblx0JHB4OiAoKTsgLyogMyAqL1xuXHQkcmVtOiAoKTsgLyogMyAqL1xuXHRAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG5cdCAgLyogNCAqL1xuXHQgIEBpZiAkdmFsdWUgPT0gMCBvciAkdmFsdWUgPT0gYXV0byB7XG5cdFx0LyogNSAqL1xuXHRcdCRweDogYXBwZW5kKCRweCwgJHZhbHVlKTtcblx0XHQkcmVtOiBhcHBlbmQoJHJlbSwgJHZhbHVlKTtcblx0ICB9IEBlbHNlIHtcblx0XHQkdW5pdDogdW5pdCgkdmFsdWUpOyAvKiA2ICovXG5cdFx0JHZhbDogcGFyc2VJbnQoJHZhbHVlKTsgLyogNiAqL1xuXHRcdEBpZiAkdW5pdCA9PSAncHgnIHtcblx0XHQgIC8qIDcgKi9cblx0XHQgICRweDogYXBwZW5kKCRweCwgJHZhbHVlKTtcblx0XHQgICRyZW06IGFwcGVuZCgkcmVtLCAoJHZhbCAvIDEwICsgcmVtKSk7XG5cdFx0fVxuXHRcdEBpZiAkdW5pdCA9PSAncmVtJyB7XG5cdFx0ICAvKiA3ICovXG5cdFx0ICAkcHg6IGFwcGVuZCgkcHgsICgkdmFsICogMTAgKyBweCkpO1xuXHRcdCAgJHJlbTogYXBwZW5kKCRyZW0sICR2YWx1ZSk7XG5cdFx0fVxuXHQgIH1cblx0fVxuXHRAaWYgJHB4ID09ICRyZW0ge1xuXHQgIC8qIDggKi9cblx0ICAjeyRwcm9wZXJ0eX06ICRweDsgLyogOSAqL1xuXHR9IEBlbHNlIHtcblx0ICAjeyRwcm9wZXJ0eX06ICRweDsgLyogOSAqL1xuXHQgICN7JHByb3BlcnR5fTogJHJlbTsgLyogOSAqL1xuXHR9XG4gIH1cblxuXG5cblxuICBAbWl4aW4geC1yZW0gKCRwcm9wZXJ0eSwgJHZhbHVlcywgJG1haW4tZm9udC1zaXplOiAxMHB4KSB7XG5cblx0Ly8gRW1wdHkgbGlzdCBmb3IgYWxsIHZhbHVlcyBpbiBweFxuXHQkcHgtdmFsdWVzOiAoKTtcblx0JHJlbS12YWx1ZXM6ICgpO1xuXG5cdC8vIEl0ZXJhdGUgb3ZlciBlbnRyaWVzXG5cdEBlYWNoICR2YWx1ZSBpbiAkdmFsdWVzIHtcblxuXHRcdC8vIElmIHRoZSB2YWx1ZSBpcyB6ZXJvIG9yIG9mIGEgdHlwZSB0aGF0IGRvZXNu4oCZdCBuZWVkIGNvbnZlcnNpb24sIHJldHVybiB0aGUgdmFsdWUgdW50b3VjaGVkXG5cdFx0QGlmIGluZGV4KGF1dG8gaW5oZXJpdCBpbml0aWFsIG5vbmUgMCwgJHZhbHVlKSBvciB0eXBlLW9mKCR2YWx1ZSkgIT0gXCJudW1iZXJcIiB7XG5cdFx0XHQkcHgtdmFsdWVzOiBhcHBlbmQoJHB4LXZhbHVlcywgJHZhbHVlKTtcblx0XHRcdCRyZW0tdmFsdWVzOiBhcHBlbmQoJHJlbS12YWx1ZXMsICR2YWx1ZSk7XG5cblx0XHQvLyBPdGhlcndpc2UgY29udmVydCBpdCBwcm9wZXJseVxuXHRcdH0gQGVsc2Uge1xuXHRcdFx0JHVuaXQ6IHVuaXQoJHZhbHVlKTtcblxuXHRcdFx0QGlmICR1bml0ID09ICdweCcge1xuXHRcdFx0XHQkcHgtdmFsdWVzOiBhcHBlbmQoJHB4LXZhbHVlcywgI3tzdHJpcC11bml0KCR2YWx1ZSl9ICogMXB4ICk7XG5cdFx0XHRcdCRyZW0tdmFsdWVzOiBhcHBlbmQoJHJlbS12YWx1ZXMsIChzdHJpcC11bml0KCR2YWx1ZSkgLyBzdHJpcC11bml0KCRtYWluLWZvbnQtc2l6ZSkgKiAxcmVtKSk7XG5cdFx0XHR9IEBlbHNlIHtcblx0XHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICgkdmFsdWUgKiAkbWFpbi1mb250LXNpemUpICk7XG5cdFx0XHRcdCRyZW0tdmFsdWVzOiBhcHBlbmQoJHJlbS12YWx1ZXMsICN7JHZhbHVlfSAqIDFyZW0pO1xuXHRcdFx0fVxuXG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBwcm9wZXJ0eSBhbmQgaXRzIGxpc3Qgb2YgY29udmVydGVkIHZhbHVlc1xuXHQjeyRwcm9wZXJ0eX06ICN7JHB4LXZhbHVlc307XG5cdCN7JHByb3BlcnR5fTogI3skcmVtLXZhbHVlc307XG59IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIEJPUkRFUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gYm9yZGVyKCRkaXJlY3Rpb24sICR3aWR0aCwgJHN0eWxlLCAkY29sb3IpIHtcblx0Ym9yZGVyLSN7JGRpcmVjdGlvbn06ICR3aWR0aCAkc3R5bGUgJGNvbG9yO1xuICB9XG4gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUEFERElORyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBwYWRkaW5nKCR0b3AsICRyaWdodCwgJGJvdHRvbSwgJGxlZnQpIHsgXG5cdHBhZGRpbmc6ICR0b3AgJHJpZ2h0ICRib3R0b20gJGxlZnQ7XG4gIH1cbiAgXG4gIEBtaXhpbiBwYWRkaW5nLWNvbXBvbmVudCgkc3BhY2U6ICRzbSkge1xuXHRwYWRkaW5nOiAkc3BhY2U7XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOUyBCT1gtU0hBRE9XICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiBzaGFkb3ctbG9nbygkeC1heGlzOiAycHgsICR5LWF4aXM6IDJweCwgJGJsdXI6IDJweCwgJGNvbG9yOiAjMDIwMjAyKSB7XG5cdGZpbHRlcjpkcm9wLXNoYWRvdyggJHgtYXhpcyAkeS1heGlzICRibHVyICRjb2xvciApO1xuXHQtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMnB4IDJweCAycHggIzAyMDIwMik7XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgSElESU5HL1NIT1dJTkcgRkFERSBUUkFOU0lUSU9OICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gZmFkZSgkdHlwZSkge1xuXHRAaWYgJHR5cGUgPT0gJ2hpZGUnIHtcblx0ICB2aXNpYmlsaXR5OiBoaWRkZW47XG5cdCAgb3BhY2l0eTogMDtcblx0ICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5ICR0dCwgb3BhY2l0eSAkdHQ7XG5cdH1cblx0QGVsc2UgaWYgJHR5cGUgPT0gJ3Nob3cnIHtcblx0ICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHQgIG9wYWNpdHk6IDE7XG5cdCAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAkdHQsIG9wYWNpdHkgJHR0O1xuXHR9XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMSVNUIFJFU0VUICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4lbGlzdHJlc2V0IHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRsaXN0LXN0eWxlOiBub25lO1xuICB9IiwiQGNoYXJzZXQgJ1VURi04JztcblxuLypcbiAgICBHcmlkIGNsYXNzIG5hbWVcbiovXG4kaW0tZ3JpZC1jbGFzczogJ2dyaWQnICFkZWZhdWx0O1xuXG4vKlxuICAgIENlbGwgY2xhc3MgbmFtZVxuKi9cbiRpbS1ncmlkLWNlbGwtY2xhc3M6ICdncmlkLWNlbGwnICFkZWZhdWx0O1xuXG4vKlxuICAgIEd1dHRlciBzaXplXG4qL1xuJGltLWdyaWQtZ3V0dGVyLXNpemU6IDAgIWRlZmF1bHQ7XG5cbi8qXG4gICAgT3B0aW9uYWxseSBpbmNsdWRlIG1heC13aWR0aCB0byBmaXggSUUgaXNzdWVzXG4qL1xuJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGg6IGZhbHNlICFkZWZhdWx0O1xuXG4vKlxuICAgIEdyaWRcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsXG4qL1xuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30sXG4uI3skaW0tZ3JpZC1jbGFzc30tLWF1dG8gPiAqIHtcbiAgICBmbGV4OiAxO1xuICAgIGZsZXgtZ3JvdzogNDtcbn1cblxuLypcbiAgICBHcmlkIGNlbGwgbW9kaWZpZXJzXG4gKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1hdXRvLXNpemUge1xuICAgIGZsZXg6IG5vbmU7XG59XG5cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1saWdodCB7XG4gICAgZmxleC1ncm93OiAyO1xufVxuXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0taGVhdnkge1xuICAgIGZsZXgtZ3JvdzogODtcbn1cblxuLypcbiAgICBHcmlkIGd1dHRlcnNcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLWd1dHRlcnMge1xuICAgIG1hcmdpbjogKC0kaW0tZ3JpZC1ndXR0ZXItc2l6ZSkgMCAwICgtJGltLWdyaWQtZ3V0dGVyLXNpemUpO1xufVxuLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30sXG4uI3skaW0tZ3JpZC1jbGFzc30tLWF1dG8uI3skaW0tZ3JpZC1jbGFzc30tLWd1dHRlcnMgPiAqIHtcbiAgICBwYWRkaW5nOiAkaW0tZ3JpZC1ndXR0ZXItc2l6ZSAwIDAgJGltLWdyaWQtZ3V0dGVyLXNpemU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLypcbiAgICBBbGlnbm1lbnQgcGVyIHJvd1xuKi9cbi4jeyRpbS1ncmlkLWNsYXNzfS0tdG9wIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cbi4jeyRpbS1ncmlkLWNsYXNzfS0tYm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG4uI3skaW0tZ3JpZC1jbGFzc30tLWNlbnRlciB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLypcbiAgICBGbGV4aWJsZSBjZWxsc1xuKi9cbi4jeyRpbS1ncmlkLWNsYXNzfS0tZmxleC1ncmlkLWNlbGwgPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSwgLy8gT2xkZXIgc2VsZWN0b3Iga2VwdCBmb3IgYmFja3dhcmRzIGNvbXBhdGFiaWxpdHkuXG4uI3skaW0tZ3JpZC1jbGFzc30tLWZsZXggPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLypcbiAgICBKdXN0aWZ5XG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9LS1qdXN0aWZ5LWNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciBjZWxsXG4qL1xuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLXRvcCB7XG4gICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbn1cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1ib3R0b20ge1xuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLWNlbnRlciB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4vKlxuICAgIEdlbmVyYXRlIGdyaWQgY2xhc3Nlc1xuKi9cbkBtaXhpbiBpbS1ncmlkLWNvbHVtbnMoJGNvbHVtbnMuLi4pIHtcbiAgICBAZWFjaCAkaSBpbiAkY29sdW1ucyB7XG4gICAgICAgIEBmb3IgJG4gZnJvbSAxIHRocm91Z2ggJGkge1xuICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1maXQgPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tZnVsbCA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9IHtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS0jeyRufS0jeyRpfSA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9Om5vdChbY2xhc3MqPScjeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0nXSkge1xuICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAoKCRuIC8gJGkpICogMTAwJSk7XG4gICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoJG4gLyAkaSkgKiAxMDAlKTsgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0jeyRufS0jeyRpfSB7XG5cbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoJG4gLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWF1dG8tI3skaX0gPiAqIHtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAoKDEgLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICB7IG1heC13aWR0aDogKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICAgICAgJGJyZWFrcG9pbnQtbmFtZTogbnRoKCRicmVha3BvaW50LCAxKTtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgjeyc+PScgKyAkYnJlYWtwb2ludC1uYW1lfSkge1xuICAgICAgICAgICAgQGVhY2ggJGkgaW4gJGNvbHVtbnMge1xuICAgICAgICAgICAgICAgIEBmb3IgJG4gZnJvbSAxIHRocm91Z2ggJGkge1xuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZpdFxcQCN7JGJyZWFrcG9pbnQtbmFtZX0gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tZnVsbFxcQCN7JGJyZWFrcG9pbnQtbmFtZX0gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tI3skbn0tI3skaX1cXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc306bm90KFtjbGFzcyo9JyN7JGltLWdyaWQtY2VsbC1jbGFzc30tLSddKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAoKCRuIC8gJGkpICogMTAwJSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBAaWYgJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSk7IH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfSA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLSN7JG59LSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoJG4gLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWF1dG8tI3skaX1cXEAjeyRicmVha3BvaW50LW5hbWV9ID4gKiB7XG4gICAgICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAoKDEgLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICBAaWYgJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoMSAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7IH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgTUlYSU5TIEZMRVhCT1ggQ1JPU1NCUk9XU0VSICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgTUlYSU5TIEJVVFRPTiBTVFlMRSAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgT04tRVZFTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBXSEVOLUlOU0lERSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09OVEFJTkVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU5TIFBPU0lUSU9OICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIFNJWkUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTiBTRVQtRk9OVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIFJFTSBVTklUUyAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBCT1JERVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOUyBQQURESU5HICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgQk9YLVNIQURPVyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgSElESU5HL1NIT1dJTkcgRkFERSBUUkFOU0lUSU9OICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMSVNUIFJFU0VUICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKlxuICAgIEdyaWQgY2xhc3MgbmFtZVxuKi9cbi8qXG4gICAgQ2VsbCBjbGFzcyBuYW1lXG4qL1xuLypcbiAgICBHdXR0ZXIgc2l6ZVxuKi9cbi8qXG4gICAgT3B0aW9uYWxseSBpbmNsdWRlIG1heC13aWR0aCB0byBmaXggSUUgaXNzdWVzXG4qL1xuLypcbiAgICBHcmlkXG4qL1xuLmdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLypcbiAgICBHcmlkIGNlbGxcbiovXG4uZ3JpZC1jZWxsLFxuLmdyaWQtLWF1dG8gPiAqIHtcbiAgZmxleDogMTtcbiAgZmxleC1ncm93OiA0O1xufVxuXG4vKlxuICAgIEdyaWQgY2VsbCBtb2RpZmllcnNcbiAqL1xuLmdyaWQtY2VsbC0tYXV0by1zaXplIHtcbiAgZmxleDogbm9uZTtcbn1cblxuLmdyaWQtY2VsbC0tbGlnaHQge1xuICBmbGV4LWdyb3c6IDI7XG59XG5cbi5ncmlkLWNlbGwtLWhlYXZ5IHtcbiAgZmxleC1ncm93OiA4O1xufVxuXG4vKlxuICAgIEdyaWQgZ3V0dGVyc1xuKi9cbi5ncmlkLS1ndXR0ZXJzIHtcbiAgbWFyZ2luOiAtMzBweCAwIDAgLTMwcHg7XG59XG5cbi5ncmlkLS1ndXR0ZXJzID4gLmdyaWQtY2VsbCxcbi5ncmlkLS1hdXRvLmdyaWQtLWd1dHRlcnMgPiAqIHtcbiAgcGFkZGluZzogMzBweCAwIDAgMzBweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLypcbiAgICBBbGlnbm1lbnQgcGVyIHJvd1xuKi9cbi5ncmlkLS10b3Age1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLmdyaWQtLWJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLmdyaWQtLWNlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgRmxleGlibGUgY2VsbHNcbiovXG4uZ3JpZC0tZmxleC1ncmlkLWNlbGwgPiAuZ3JpZC1jZWxsLFxuLmdyaWQtLWZsZXggPiAuZ3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLypcbiAgICBKdXN0aWZ5XG4qL1xuLmdyaWQtLWp1c3RpZnktY2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciBjZWxsXG4qL1xuLmdyaWQtY2VsbC0tdG9wIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbn1cblxuLmdyaWQtY2VsbC0tYm90dG9tIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG5cbi5ncmlkLWNlbGwtLWNlbnRlciB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuLypcbiAgICBHZW5lcmF0ZSBncmlkIGNsYXNzZXNcbiovXG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbiosICo6OmJlZm9yZSwgKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW46IDA7XG59XG5cbmltZywgc3ZnIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5hOmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbmFkZHJlc3Mge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG51bCwgb2wsIHAge1xuICBtYXJnaW46IDA7XG59XG5cbi5qcy1hbGxjbGljaywgLmpzLXRvZ2dsZSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS42O1xufVxuXG4udGlueXRleHQge1xuICBsaW5lLWhlaWdodDogMS42O1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbi50aW55dGV4dC0tc21hbGwge1xuICBmb250LXNpemU6IDAuODg4ODlyZW07XG59XG5cbi50aW55dGV4dCA+ICoge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4udGlueXRleHQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnRpbnl0ZXh0ID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLnRpbnl0ZXh0IGgxLCAudGlueXRleHQgaDIsIC50aW55dGV4dCBoMywgLnRpbnl0ZXh0IGg0IHtcbiAgbWFyZ2luOiAxLjI1cmVtIDAgMC41cmVtO1xufVxuXG4udGlueXRleHQgdWwgbGkge1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDIuMnJlbTtcbn1cblxuLnRpbnl0ZXh0IGFbaHJlZl49XCJtYWlsdG9cIl0ge1xuICBmb250LXdlaWdodDogNTAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogMS43NXJlbTtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL3N2Zy9lbnZlbG9wZS5zdmdcIikgY2VudGVyIGxlZnQgbm8tcmVwZWF0O1xufVxuXG4udGlueXRleHQgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLnRpbnl0ZXh0IGVtIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4udGlueXRleHQgdWwsIC50aW55dGV4dCBvbCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDEuMjVyZW07XG59XG5cbi50aW55dGV4dCB1bCBsaSwgLnRpbnl0ZXh0IG9sIGxpIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbnl0ZXh0IC5lbWJlZGRlZC1lbnRpdHkge1xuICAgIG1heC13aWR0aDogNDAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbjogMXJlbSAxcmVtIDFyZW0gMDtcbiAgfVxufVxuXG4udGlueXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjg4ODg5cmVtO1xufVxuXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG59XG5cbi5jb250ZW50LWxlZnQgPiAqIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5jb250ZW50LWNlbnRlciA+ICoge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uY29udGVudC1yaWdodCA+ICoge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5idG4ge1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEuNjAxODFyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmc6IDFyZW0gMi41cmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG59XG5cbi5idG4gc3ZnIHtcbiAgd2lkdGg6IDJyZW07XG4gIGhlaWdodDogMnJlbTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi5idG4tLXByaW1hcnkge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIGJvcmRlci1jb2xvcjogIzI4QzY2MDtcbn1cblxuLmJ0bi0tcHJpbWFyeSBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tcHJpbWFyeTpob3ZlciwgLmJ0bi0tcHJpbWFyeTphY3RpdmUsIC5idG4tLXByaW1hcnk6Zm9jdXMge1xuICBjb2xvcjogIzI4QzY2MDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbi5idG4tLXByaW1hcnk6aG92ZXIgc3ZnLCAuYnRuLS1wcmltYXJ5OmFjdGl2ZSBzdmcsIC5idG4tLXByaW1hcnk6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogIzI4QzY2MDtcbn1cblxuLmJ0bi0tcHJpbWFyeTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLWRhcmsge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xufVxuXG4uYnRuLS1kYXJrIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1kYXJrOmhvdmVyLCAuYnRuLS1kYXJrOmFjdGl2ZSwgLmJ0bi0tZGFyazpmb2N1cyB7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG59XG5cbi5idG4tLWRhcms6aG92ZXIgc3ZnLCAuYnRuLS1kYXJrOmFjdGl2ZSBzdmcsIC5idG4tLWRhcms6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogYmxhY2s7XG59XG5cbi5idG4tLWRhcms6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJ0bi0tZ29vZ2xlIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjREIzMjM2O1xuICBib3JkZXItY29sb3I6ICNEQjMyMzY7XG4gIHdpZHRoOiAzMjRweDtcbn1cblxuLmJ0bi0tZ29vZ2xlIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIsIC5idG4tLWdvb2dsZTphY3RpdmUsIC5idG4tLWdvb2dsZTpmb2N1cyB7XG4gIGNvbG9yOiAjREIzMjM2O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyLWNvbG9yOiAjREIzMjM2O1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIgc3ZnLCAuYnRuLS1nb29nbGU6YWN0aXZlIHN2ZywgLmJ0bi0tZ29vZ2xlOmZvY3VzIHN2ZyB7XG4gIGZpbGw6ICNEQjMyMzY7XG59XG5cbi5idG4tLWdvb2dsZTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjREIzMjM2O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLWZhY2Vib29rIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjM0I1OTk4O1xuICBib3JkZXItY29sb3I6ICMzQjU5OTg7XG4gIHdpZHRoOiA2MHB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xuICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG59XG5cbi5idG4tLWZhY2Vib29rIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1mYWNlYm9vazpob3ZlciwgLmJ0bi0tZmFjZWJvb2s6YWN0aXZlLCAuYnRuLS1mYWNlYm9vazpmb2N1cyB7XG4gIGNvbG9yOiAjM0I1OTk4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyLWNvbG9yOiAjM0I1OTk4O1xufVxuXG4uYnRuLS1mYWNlYm9vazpob3ZlciBzdmcsIC5idG4tLWZhY2Vib29rOmFjdGl2ZSBzdmcsIC5idG4tLWZhY2Vib29rOmZvY3VzIHN2ZyB7XG4gIGZpbGw6ICMzQjU5OTg7XG59XG5cbi5idG4tLWZhY2Vib29rOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMzQjU5OTg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0teWVsbG93IHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS15ZWxsb3cgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLXllbGxvdzpob3ZlciwgLmJ0bi0teWVsbG93OmFjdGl2ZSwgLmJ0bi0teWVsbG93OmZvY3VzIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbi5idG4tLXllbGxvdzphY3RpdmUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLWdyZXkge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLWdyZXkgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWdyZXk6aG92ZXIsIC5idG4tLWdyZXk6YWN0aXZlLCAuYnRuLS1ncmV5OmZvY3VzIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbi5idG4tLWdyZXk6YWN0aXZlIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS1iZWlnZTpob3ZlciwgLmJ0bi0tYmVpZ2U6YWN0aXZlLCAuYnRuLS1iZWlnZTpmb2N1cyB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG59XG5cbi5idG4tc2ltcGxlIHtcbiAgbWFyZ2luOiAycmVtIDFyZW0gMCAwO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLmJ0bi1zaW1wbGUtLW11dGVkIHtcbiAgY29sb3I6ICNGM0YzRjQ7XG59XG5cbi5idG4tc2ltcGxlLS1wcmltYXJ5IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmJ0bi1sYW5nIHtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYnRuLWxhbmc6aG92ZXIge1xuICB0cmFuc2l0aW9uOiAwLjVzO1xuICBjb2xvcjogI2MzYzNjMztcbn1cblxuLmJ0bi1nb2xkIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxOTUsIDE2MCwgMCwgMC41KTtcbn1cblxuLmJ0bi1nb2xkIHNwYW4ge1xuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5idG4tZ3JheSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjI2LCAyMjQsIDIxOSwgMC41KTtcbn1cblxuLmJ0bi1ncmF5IHNwYW4ge1xuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICB3aWR0aDogMzUuNnJlbTtcbiAgaGVpZ2h0OiA0LjNyZW07XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbGluZS1oZWlnaHQ6IDMuNnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogd2hpdGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0bi1wcmltYXJ5OmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIGJhY2tncm91bmQ6ICNkOWI5Njg7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT01QT05FTlQgdG9UT1AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi50b1RvcCB7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDMuNzJyZW07XG4gIHRvcDogODYlO1xuICByaWdodDogMnJlbTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5OTtcbiAgYmFja2dyb3VuZDogIzRiNDYzZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwYWRkaW5nOiAxLjJyZW0gMXJlbTtcbiAgb3BhY2l0eTogMC42O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLnRvVG9wOmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIG9wYWNpdHk6IDE7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW5wdXQtbm9ybWFsIHtcbiAgYmFja2dyb3VuZDogI0YzRjNGNDtcbiAgaGVpZ2h0OiA0cmVtO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4udWstaW5wdXQ6Zm9jdXMsIC51ay1zZWxlY3Q6Zm9jdXMsIC51ay10ZXh0YXJlYTpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzI4QzY2MDtcbn1cblxuLmxpbmstdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMjhDNjYwO1xufVxuXG4ubGluay10ZXh0OmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIGNvbG9yOiAjMTNhNzQ3O1xufVxuXG4ubGVmdC1wYW5lbCB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIHdpZHRoOiA0ODBweDtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sZWZ0LXBhbmVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9XG59XG5cbi5sZWZ0LXBhbmVsX193cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5sZWZ0LXBhbmVsX19ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxlZnQtcGFuZWxfX2JvZHkgcCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAyLjRyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbF9fYm9keSBwIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2JvZHkgYnV0dG9uLCAubGVmdC1wYW5lbF9fYm9keSBpbnB1dCB7XG4gIG1hcmdpbi10b3A6IDMuMnJlbTtcbiAgd2lkdGg6IDE1cmVtO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbF9fYm9keSBidXR0b24sIC5sZWZ0LXBhbmVsX19ib2R5IGlucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubGVmdC1wYW5lbF9faGVhZGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZmxvdzogY29sdW1uO1xuICAtbW96LWZsZXgtZmxvdzogY29sdW1uO1xuICAtbXMtZmxleC1mbG93OiBjb2x1bW47XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAubGVmdC1wYW5lbF9faGVhZGVyIHtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgfVxufVxuXG4ubGVmdC1wYW5lbF9faGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgLW1zLWZsZXgtcGFjazogZmxleC1zdGFydDtcbiAgcGFkZGluZy1ib3R0b206IDE2cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5sZWZ0LXBhbmVsX19oZWFkZXJfX3dyYXBwZXIge1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLmxlZnQtcGFuZWxfX2Zvb3RlciB7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIH1cbn1cblxuLnJpZ2h0LXBhbmVsIHtcbiAgd2lkdGg6IDQ3JTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAucmlnaHQtcGFuZWwge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5yaWdodC1wYW5lbF9fbG9naW4ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1vei1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnJpZ2h0LXBhbmVsX19sb2dpbl9fd3JhcHBlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbW96LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5yaWdodC1wYW5lbF9fbG9naW5fX3dyYXBwZXIge1xuICAgIGp1c3RpZnktY29udGVudDogdW5zZXQ7XG4gICAgaGVpZ2h0OiB1bnNldDtcbiAgfVxufVxuXG4ucmlnaHQtcGFuZWxfX2xvZ2luX193cmFwcGVyX19oZWFkZXIge1xuICB3aWR0aDogNDAwcHg7XG4gIHBhZGRpbmc6IDEuNHJlbSAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnJpZ2h0LXBhbmVsX19sb2dpbl9fd3JhcHBlcl9faGVhZGVyIHtcbiAgICBwYWRkaW5nOiB1bnNldDtcbiAgfVxufVxuXG4ucmlnaHQtcGFuZWxfX2xvZ2luX193cmFwcGVyX19oZWFkZXIgaDEge1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDMuMnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucmlnaHQtcGFuZWxfX2xvZ2luX193cmFwcGVyX19oZWFkZXIgLnNvY2lhbC1zaWduaW4ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbW96LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtZmxleC1wYWNrOiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiA0cmVtIDAgMCAwO1xufVxuXG4ucmlnaHQtcGFuZWxfX2xvZ2luX193cmFwcGVyX19oZWFkZXIgLnVrLWRpdmlkZXItaWNvbiB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5yaWdodC1wYW5lbF9fbG9naW5fX3dyYXBwZXIgLmxvZ2luLWZvcm0ge1xuICB3aWR0aDogNDAwcHg7XG59XG5cbi5yaWdodC1wYW5lbF9fbG9naW5fX3dyYXBwZXIgLmxvZ2luLWZvcm0gbGFiZWwge1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFyZW0gMDtcbn1cblxuLnJpZ2h0LXBhbmVsX19sb2dpbl9fd3JhcHBlciAubG9naW4tZm9ybV9fcGFzc3dvcmQge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbW96LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtZmxleC1wYWNrOiBzcGFjZS1iZXR3ZWVuO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5yaWdodC1wYW5lbF9fbG9naW5fX3dyYXBwZXIgLmxvZ2luLWZvcm0gYnV0dG9uIHtcbiAgd2lkdGg6IDE2cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnJpZ2h0LXBhbmVsX19sb2dpbl9fd3JhcHBlciAubG9naW4tZm9ybSBidXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wYWdlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIiwiLy8gaW5jbHVkZS1tZWRpYSBicmVha3BvaW50c1xuJGJyZWFrcG9pbnRzOiAoXG4gIHhzOiAzMjBweCxcbiAgc206IDc2OHB4LFxuICBtZDogOTkycHgsXG4gIGxnOiAxMjAwcHgsXG4gIHhsOiAxNDQwcHgsXG4pICFkZWZhdWx0O1xuXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSknXG4pICFkZWZhdWx0OyBcblxuLy8gU3BhY2luZyB1bml0XG4kc3U6IDRweCAhZGVmYXVsdDtcblxuLy8gR2xvYmFsIFVuaXRcbiR4czogMXJlbTtcbiRzbTogMS41cmVtO1xuJG1kOiAycmVtO1xuJGxnOiAzcmVtO1xuJHhsOiA0cmVtO1xuXG4vLyBGb250IFNpemUgVW5pdFxuJGZzUHJpbWFyeTogMi4ycmVtO1xuJHRleHRTbWFsbDogMS4ycmVtO1xuJHRleHRNZWRpdW06IDEuNHJlbTtcbiR0ZXh0QmFzZTogMS42cmVtO1xuJHRleHRFeHRyYTogMS44cmVtO1xuJHRleHRMYXJnZTogMnJlbTtcbiR0ZXh0RXh0cmFMYXJnZTogMi40cmVtO1xuJHRleHRCaWc6IDIuNnJlbTtcbiR0ZXh0R2lhbnQ6IDIuOHJlbTtcblxuLy8gTGluZSBIZWlnaHRcbi8vIGZhbGxiYWNrIGZvciBvbGQgYnJvd3NlciA9PiAkbGgtYmFzZTogKDEgKiAxMCkgKyBweDsgXG4kbGgtYmFzZTogMXJlbTtcbiRsaC14czogMS44cmVtO1xuJGxoLXM6IDJyZW07XG4kbGgtc206IDIuNHJlbTtcbiRsaC1zbDogMi42cmVtO1xuJGxoLW1kIDogMi44cmVtO1xuJGxoLWxnOiAzcmVtO1xuJGxoLXhsOiAzLjRyZW07XG4kbGgteHhsOiA0LjlyZW07XG5cbi8vIFBhZGRpbmcgVW5pdFxuJHB0OiAycmVtO1xuJHByOiAycmVtO1xuJHBiOiAycmVtO1xuJHBsOiAycmVtO1xuXG4vLyBNYXJnaW4gVW5pdFxuJG10OiAycmVtO1xuJG1yOiAycmVtO1xuJG1iOiAycmVtO1xuJG1sOiAycmVtO1xuXG4vLyBMZXR0ZXIgU3BhY2luZ1xuJGxzLXh4czogMC42OTYyNThweDtcbiRscy14czogMC44ODEyMDFweDtcbiRscy1zbTogMC44cHg7XG4kbHM6IDFweDtcbiRscy1tZDogNnB4O1xuXG4vLyBjb250YWluZXIncyBzZXR0aW5nc1xuJGNvbnRhaW5lci13aWR0aDogKFxuICBzbTogNzUwcHgsXG4gIG1kOiA5NzBweCxcbiAgbGc6IDExNzBweCxcbiAgLy8geGw6IDE1NjBweCxcbikgIWRlZmF1bHQ7XG4kY29udGFpbmVyLXBhZDogMTVweCAhZGVmYXVsdDtcblxuLy8gR3JpZCBjbGFzcyBuYW1lXG4kaW0tZ3JpZC1jbGFzczogJ2dyaWQnO1xuLy8gQ2VsbCBjbGFzcyBuYW1lXG4kaW0tZ3JpZC1jZWxsLWNsYXNzOiAnZ3JpZC1jZWxsJztcbi8vIFNldHRpbmcgZ3V0dGVyc1xuJGltLWdyaWQtZ3V0dGVyLXNpemU6IDMwcHg7XG4vLyBPcHRpb25hbGx5IGluY2x1ZGUgbWF4LXdpZHRoIHRvIGZpeCBJRSBpc3N1ZXNcbiRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoOiB0cnVlO1xuXG4vLyBjb2xvcnNcbiR0ZXh0LWNvbG9yOiBibGFjaztcblxuJGNvbG9yczogKFxuICBwcmltYXJ5OiAoXG4gICAgMDogIzI4QzY2MCxcbiAgKSxcbiAgYmc6IChcbiAgICAwOiAjRjNGM0Y0LFxuICAgIDE6ICMyOEM2NjAsXG4gICAgMjogcmdiKDE5LCAxNjcsIDcxKSxcbiAgICAzOiAjREIzMjM2LCAvL0dvb2dsZVxuICAgIDQ6ICMzQjU5OTgsIC8vRmFjZWJvb2tcbiAgKSxcbiAgbW9kYWw6IChcbiAgICAwOiAjZmZmZmZmZjBcbiAgKVxuKTtcblxuLy8gZm9udHNcbiRiYXNlLWZvbnQtZmFtaWx5OiAnU2FyYWJ1bicsIHNhbnMtc2VyaWY7XG4kYWx0LWZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XG4kdGl0bGUtZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzZXJpZjtcblxuLy8gVHJhbnNpdGlvbnNcbiR0dDogMC41czsiLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiKiwgKjo6YmVmb3JlLCAqOjphZnRlcntcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IocHJpbWFyeSwgMCk7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDEpO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW46IDA7XG59XG5cbmltZywgc3Zne1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBnZXQtY29sb3IocHJpbWFyeSwgMik7XG4gICY6aG92ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gICAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAyKTtcbiAgfVxufVxuXG5hZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uanMtYWxsY2xpY2ssIC5qcy10b2dnbGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59IiwiaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiAkdGV4dC1jb2xvcjtcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBsaW5lLWhlaWdodDogMS42O1xufVxuXG4udGlueXRleHQge1xuICBsaW5lLWhlaWdodDogMS42O1xuICBmb250LXNpemU6IG1zKDApO1xuICAmLS1zbWFsbCB7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gIH1cblxuICA+KiB7XG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDQqJHN1KTtcbiAgfVxuXG4gID4qOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG5cbiAgPio6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIGgxLCBoMiwgaDMsIGg0IHtcbiAgICBtYXJnaW46IHJlbSgyMHB4IDAgOHB4KTtcbiAgfVxuXG4gIHVsIGxpIHtcbiAgICBAaW5jbHVkZSBzZXQtZm9udDtcbiAgfVxuXG4gIGEge1xuICAgICZbaHJlZl49XCJtYWlsdG9cIl0ge1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIEBpbmNsdWRlIHJlbGF0aXZlO1xuICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMjhweCk7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9zdmcvZW52ZWxvcGUuc3ZnJykgY2VudGVyIGxlZnQgbm8tcmVwZWF0O1xuICAgIH1cbiAgfVxuXG4gIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxuXG4gIGVtIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIH1cblxuICB1bCwgb2wge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogcmVtKDUqJHN1KTtcbiAgICBsaSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgLmVtYmVkZGVkLWVudGl0eSB7XG4gICAgQGluY2x1ZGUgbWVkaWEoJz49c20nKSB7XG4gICAgICBtYXgtd2lkdGg6IDQwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luOiAxcmVtIDFyZW0gMXJlbSAwO1xuICAgIH1cbiAgfVxuXG4gICYtLXNtYWxsIHtcbiAgICBmb250LXNpemU6IG1zKC0xKTtcbiAgfVxufVxuIiwiQGZ1bmN0aW9uIG1zLWZ1bmN0aW9uKCR2OiAwLCAkYmFzZTogZmFsc2UsICRyYXRpbzogZmFsc2UsICR0aHJlYWQ6IGZhbHNlLCAkc2V0dGluZ3M6ICRtb2R1bGFyc2NhbGUpIHtcblxuICAvLyBQYXJzZSBzZXR0aW5nc1xuICAkbXMtc2V0dGluZ3M6IG1zLXNldHRpbmdzKCRiYXNlLCRyYXRpbywkdGhyZWFkLCRzZXR0aW5ncyk7XG4gICRiYXNlOiBudGgoJG1zLXNldHRpbmdzLCAxKTtcbiAgJHJhdGlvOiBudGgoJG1zLXNldHRpbmdzLCAyKTtcblxuICAvLyBSZW5kZXIgdGFyZ2V0IHZhbHVlcyBmcm9tIHNldHRpbmdzLlxuICBAaWYgdW5pdCgkcmF0aW8pICE9ICcnIHtcbiAgICAkcmF0aW86IG1zLXRhcmdldCgkcmF0aW8sJGJhc2UpXG4gIH1cblxuICAvLyBGYXN0IGNhbGMgaWYgbm90IG11bHRpIHN0cmFuZGVkXG4gIEBpZihsZW5ndGgoJGJhc2UpID09IDEpIHtcbiAgICBAcmV0dXJuIG1zLXBvdygkcmF0aW8sICR2KSAqICRiYXNlO1xuICB9XG5cbiAgLy8gQ3JlYXRlIG5ldyBiYXNlIGFycmF5XG4gICRtcy1iYXNlczogbnRoKCRiYXNlLDEpO1xuXG4gIC8vIE5vcm1hbGl6ZSBiYXNlIHZhbHVlc1xuICBAZm9yICRpIGZyb20gMiB0aHJvdWdoIGxlbmd0aCgkYmFzZSkge1xuICAgIC8vIGluaXRpYWwgYmFzZSB2YWx1ZVxuICAgICRtcy1iYXNlOiBudGgoJGJhc2UsJGkpO1xuICAgIC8vIElmIHRoZSBiYXNlIGlzIGJpZ2dlciB0aGFuIHRoZSBtYWluIGJhc2VcbiAgICBAaWYoJG1zLWJhc2UgPiBudGgoJGJhc2UsMSkpIHtcbiAgICAgIC8vIGRpdmlkZSB0aGUgdmFsdWUgdW50aWwgaXQgYWxpZ25zIHdpdGggbWFpbiBiYXNlLlxuICAgICAgQHdoaWxlKCRtcy1iYXNlID4gbnRoKCRiYXNlLDEpKSB7XG4gICAgICAgICRtcy1iYXNlOiAkbXMtYmFzZSAvICRyYXRpbztcbiAgICAgIH1cbiAgICAgICRtcy1iYXNlOiAkbXMtYmFzZSAqICRyYXRpbztcbiAgICB9XG4gICAgLy8gSWYgdGhlIGJhc2UgaXMgc21hbGxlciB0aGFuIHRoZSBtYWluIGJhc2UuXG4gICAgQGVsc2UgaWYgKCRtcy1iYXNlIDwgbnRoKCRiYXNlLDEpKSB7XG4gICAgICAvLyBwdW1wIHVwIHRoZSB2YWx1ZSB1bnRpbCBpdCBhbGlnbnMgd2l0aCBtYWluIGJhc2UuXG4gICAgICBAd2hpbGUgJG1zLWJhc2UgPCBudGgoJGJhc2UsMSkge1xuICAgICAgICAkbXMtYmFzZTogJG1zLWJhc2UgKiAkcmF0aW87XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFB1c2ggaW50byBuZXcgYXJyYXlcbiAgICAkbXMtYmFzZXM6IGFwcGVuZCgkbXMtYmFzZXMsJG1zLWJhc2UpO1xuICB9XG5cbiAgLy8gU29ydCBhcnJheSBmcm9tIHNtYWxsZXN0IHRvIGxhcmdlc3QuXG4gICRtcy1iYXNlczogbXMtc29ydCgkbXMtYmFzZXMpO1xuXG4gIC8vIEZpbmQgc3RlcCB0byB1c2UgaW4gY2FsY3VsYXRpb25cbiAgJHZ0ZXA6IGZsb29yKCR2IC8gbGVuZ3RoKCRtcy1iYXNlcykpO1xuICAvLyBGaW5kIGJhc2UgdG8gdXNlIGluIGNhbGN1bGF0aW9uXG4gICRtcy1iYXNlOiByb3VuZCgoJHYgLyBsZW5ndGgoJG1zLWJhc2VzKSAtICR2dGVwKSAqIGxlbmd0aCgkbXMtYmFzZXMpKSArIDE7XG5cbiAgQHJldHVybiBtcy1wb3coJHJhdGlvLCAkdnRlcCkgKiBudGgoJG1zLWJhc2VzLCRtcy1iYXNlKTtcbn0iLCIkcmVtLWJhc2VsaW5lOiAxNnB4ICFkZWZhdWx0O1xuJHJlbS1mYWxsYmFjazogZmFsc2UgIWRlZmF1bHQ7XG4kcmVtLXB4LW9ubHk6IGZhbHNlICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gcmVtLXNlcGFyYXRvcigkbGlzdCwgJHNlcGFyYXRvcjogZmFsc2UpIHtcbiAgQGlmICRzZXBhcmF0b3IgPT0gXCJjb21tYVwiIG9yICRzZXBhcmF0b3IgPT0gXCJzcGFjZVwiIHtcbiAgICBAcmV0dXJuIGFwcGVuZCgkbGlzdCwgbnVsbCwgJHNlcGFyYXRvcik7XG4gIH0gXG4gIFxuICBAaWYgZnVuY3Rpb24tZXhpc3RzKFwibGlzdC1zZXBhcmF0b3JcIikgPT0gdHJ1ZSB7XG4gICAgQHJldHVybiBsaXN0LXNlcGFyYXRvcigkbGlzdCk7XG4gIH1cblxuICAvLyBsaXN0LXNlcGFyYXRvciBwb2x5ZmlsbCBieSBIdWdvIEdpcmF1ZGVsIChodHRwczovL3Nhc3MtY29tcGF0aWJpbGl0eS5naXRodWIuaW8vI2xpc3Rfc2VwYXJhdG9yX2Z1bmN0aW9uKVxuICAkdGVzdC1saXN0OiAoKTtcbiAgQGVhY2ggJGl0ZW0gaW4gJGxpc3Qge1xuICAgICR0ZXN0LWxpc3Q6IGFwcGVuZCgkdGVzdC1saXN0LCAkaXRlbSwgc3BhY2UpO1xuICB9XG5cbiAgQHJldHVybiBpZigkdGVzdC1saXN0ID09ICRsaXN0LCBzcGFjZSwgY29tbWEpO1xufVxuXG5AbWl4aW4gcmVtLWJhc2VsaW5lKCR6b29tOiAxMDAlKSB7XG4gIGZvbnQtc2l6ZTogJHpvb20gLyAxNnB4ICogJHJlbS1iYXNlbGluZTtcbn1cblxuQGZ1bmN0aW9uIHJlbS1jb252ZXJ0KCR0bywgJHZhbHVlcy4uLikge1xuICAkcmVzdWx0OiAoKTtcbiAgJHNlcGFyYXRvcjogcmVtLXNlcGFyYXRvcigkdmFsdWVzKTtcbiAgXG4gIEBlYWNoICR2YWx1ZSBpbiAkdmFsdWVzIHtcbiAgICBAaWYgdHlwZS1vZigkdmFsdWUpID09IFwibnVtYmVyXCIgYW5kIHVuaXQoJHZhbHVlKSA9PSBcInJlbVwiIGFuZCAkdG8gPT0gXCJweFwiIHtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUgLyAxcmVtICogJHJlbS1iYXNlbGluZSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gXCJudW1iZXJcIiBhbmQgdW5pdCgkdmFsdWUpID09IFwicHhcIiBhbmQgJHRvID09IFwicmVtXCIge1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSAvICRyZW0tYmFzZWxpbmUgKiAxcmVtLCAkc2VwYXJhdG9yKTtcbiAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcImxpc3RcIiB7XG4gICAgICAkdmFsdWUtc2VwYXJhdG9yOiByZW0tc2VwYXJhdG9yKCR2YWx1ZSk7XG4gICAgICAkdmFsdWU6IHJlbS1jb252ZXJ0KCR0bywgJHZhbHVlLi4uKTtcbiAgICAgICR2YWx1ZTogcmVtLXNlcGFyYXRvcigkdmFsdWUsICR2YWx1ZS1zZXBhcmF0b3IpO1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlLCAkc2VwYXJhdG9yKTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKGxlbmd0aCgkcmVzdWx0KSA9PSAxLCBudGgoJHJlc3VsdCwgMSksICRyZXN1bHQpO1xufVxuXG5AZnVuY3Rpb24gcmVtKCR2YWx1ZXMuLi4pIHtcbiAgQGlmICRyZW0tcHgtb25seSB7XG4gICAgQHJldHVybiByZW0tY29udmVydChweCwgJHZhbHVlcy4uLik7XG4gIH0gQGVsc2Uge1xuICAgIEByZXR1cm4gcmVtLWNvbnZlcnQocmVtLCAkdmFsdWVzLi4uKTtcbiAgfVxufVxuXG5AbWl4aW4gcmVtKCRwcm9wZXJ0aWVzLCAkdmFsdWVzLi4uKSB7XG4gIEBpZiB0eXBlLW9mKCRwcm9wZXJ0aWVzKSA9PSBcIm1hcFwiIHtcbiAgICBAZWFjaCAkcHJvcGVydHkgaW4gbWFwLWtleXMoJHByb3BlcnRpZXMpIHtcbiAgICAgIEBpbmNsdWRlIHJlbSgkcHJvcGVydHksIG1hcC1nZXQoJHByb3BlcnRpZXMsICRwcm9wZXJ0eSkpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVhY2ggJHByb3BlcnR5IGluICRwcm9wZXJ0aWVzIHtcbiAgICAgIEBpZiAkcmVtLWZhbGxiYWNrIG9yICRyZW0tcHgtb25seSB7XG4gICAgICAgICN7JHByb3BlcnR5fTogcmVtLWNvbnZlcnQocHgsICR2YWx1ZXMuLi4pO1xuICAgICAgfVxuICAgICAgQGlmIG5vdCAkcmVtLXB4LW9ubHkge1xuICAgICAgICAjeyRwcm9wZXJ0eX06IHJlbS1jb252ZXJ0KHJlbSwgJHZhbHVlcy4uLik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vICAgICBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuLy8gICAgKF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuLy8gICAgIF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG4vLyAgICB8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuLy8gICAgfCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuLy8gICAgfF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcbi8vXG4vLyAgICAgIFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICB2MS40Ljlcbi8vXG4vLyAgICAgICAgICAgICAgICBodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cbi8vXG4vLyAgICAgICAgIEF1dGhvcnM6IEVkdWFyZG8gQm91Y2FzIChAZWR1YXJkb2JvdWNhcylcbi8vICAgICAgICAgICAgICAgICAgSHVnbyBHaXJhdWRlbCAoQGh1Z29naXJhdWRlbClcbi8vXG4vLyAgICAgIFRoaXMgcHJvamVjdCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIE1JVCBsaWNlbnNlXG5cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgbGlicmFyeSBwdWJsaWMgY29uZmlndXJhdGlvblxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4vLy8gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcbi8vL1xuJGJyZWFrcG9pbnRzOiAoXG4gICdwaG9uZSc6IDMyMHB4LFxuICAndGFibGV0JzogNzY4cHgsXG4gICdkZXNrdG9wJzogMTAyNHB4XG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbi8vLyAgICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbi8vLyAgKTtcbi8vL1xuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCknLFxuICAncmV0aW5hM3gnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCknXG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4xMjhweCcpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MjBlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+Mi4wcmVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG4vLy9cbiR1bml0LWludGVydmFsczogKFxuICAncHgnOiAxLFxuICAnZW0nOiAwLjAxLFxuICAncmVtJzogMC4xLFxuICAnJzogMFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyB3aGV0aGVyIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgYXZhaWxhYmxlLCB1c2VmdWwgZm9yIGNyZWF0aW5nIHNlcGFyYXRlIHN0eWxlc2hlZXRzXG4vLy8gZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIERpc2FibGVzIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4kaW0tbWVkaWEtc3VwcG9ydDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBicmVha3BvaW50IHRvIGVtdWxhdGUgd2hlbiBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGRpc2FibGVkLiBNZWRpYSBxdWVyaWVzIHRoYXQgc3RhcnQgYXQgb3Jcbi8vLyBpbnRlcmNlcHQgdGhlIGJyZWFrcG9pbnQgd2lsbCBiZSBkaXNwbGF5ZWQsIGFueSBvdGhlcnMgd2lsbCBiZSBpZ25vcmVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGRvZXMgbm90IGludGVyY2VwdCB0aGUgZGVza3RvcCBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICd0YWJsZXQnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj1kZXNrdG9wJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJyAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBtZWRpYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBpbiBhbiBleHByZXNzaW9uIGZvciBpdCB0byBiZSB1c2VkIHdoZW4gbWVkaWEgcXVlcmllc1xuLy8vIGFyZSBub3Qgc3VwcG9ydGVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYW5kIGNvbnRhaW5zIG9ubHkgYWNjZXB0ZWQgbWVkaWEgZXhwcmVzc2lvbnNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdzY3JlZW4nKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBidXQgY29udGFpbnMgYSBtZWRpYSBleHByZXNzaW9uIHRoYXQgaXMgbm90IGFjY2VwdGVkXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAncmV0aW5hMngnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJywgJ3BvcnRyYWl0JywgJ2xhbmRzY2FwZScpICFkZWZhdWx0O1xuXG4vLy8vXG4vLy8gQ3Jvc3MtZW5naW5lIGxvZ2dpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gTG9nIGEgbWVzc2FnZSBlaXRoZXIgd2l0aCBgQGVycm9yYCBpZiBzdXBwb3J0ZWRcbi8vLyBlbHNlIHdpdGggYEB3YXJuYCwgdXNpbmcgYGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpYFxuLy8vIHRvIGRldGVjdCBzdXBwb3J0LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQGZ1bmN0aW9uIGltLWxvZygkbWVzc2FnZSkge1xuICBAaWYgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJykge1xuICAgIEBlcnJvciAkbWVzc2FnZTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJG1lc3NhZ2U7XG4gICAgJF86IG5vb3AoKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1lc3NhZ2U7XG59XG5cblxuLy8vXG4vLy8gV3JhcHBlciBtaXhpbiBmb3IgdGhlIGxvZyBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGEgbW9yZSBmcmllbmRseVxuLy8vIEFQSSB0aGFuIGBAaWYgaW0tbG9nKCcuLicpIHt9YCBvciBgJF86IGltLWxvZygnLi4nKWAuIEJhc2ljYWxseSwgdXNlIHRoZSBmdW5jdGlvblxuLy8vIHdpdGhpbiBmdW5jdGlvbnMgYmVjYXVzZSBpdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluIGEgZnVuY3Rpb25cbi8vLyBhbmQgdXNlIHRoZSBtaXhpbiBldmVyeXdoZXJlIGVsc2UgYmVjYXVzZSBpdCdzIG11Y2ggbW9yZSBlbGVnYW50LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQG1peGluIGxvZygkbWVzc2FnZSkge1xuICBAaWYgaW0tbG9nKCRtZXNzYWdlKSB7fVxufVxuXG5cbi8vL1xuLy8vIEZ1bmN0aW9uIHdpdGggbm8gYEByZXR1cm5gIGNhbGxlZCBuZXh0IHRvIGBAd2FybmAgaW4gU2FzcyAzLjNcbi8vLyB0byB0cmlnZ2VyIGEgY29tcGlsaW5nIGVycm9yIGFuZCBzdG9wIHRoZSBwcm9jZXNzLlxuLy8vXG5AZnVuY3Rpb24gbm9vcCgpIHt9XG5cbi8vL1xuLy8vIERldGVybWluZXMgd2hldGhlciBhIGxpc3Qgb2YgY29uZGl0aW9ucyBpcyBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHJldHVybiB7Qm9vbGVhbn0gLSBSZXR1cm5zIHRydWUgaWYgdGhlIGNvbmRpdGlvbnMgYXJlIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vXG5AZnVuY3Rpb24gaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikge1xuICAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRpbS1uby1tZWRpYS1icmVha3BvaW50KTtcblxuICBAaWYgbm90ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlIHtcbiAgICBAaWYgaW0tbG9nKCdgI3skaW0tbm8tbWVkaWEtYnJlYWtwb2ludH1gIGlzIG5vdCBhIHZhbGlkIGJyZWFrcG9pbnQuJykge31cbiAgfVxuXG4gIEBlYWNoICRjb25kaXRpb24gaW4gJGNvbmRpdGlvbnMge1xuICAgIEBpZiBub3QgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRjb25kaXRpb24pO1xuICAgICAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICAgICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRjb25kaXRpb24sICRvcGVyYXRvcik7XG5cbiAgICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFNwYWNlQXJvdW5kT3BlcmF0b3JcbiAgICAgIEBpZiAoJHByZWZpeCA9PSAnbWF4JyBhbmQgJHZhbHVlIDw9ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSBvclxuICAgICAgICAgICgkcHJlZml4ID09ICdtaW4nIGFuZCAkdmFsdWUgPiAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkge1xuICAgICAgICBAcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgbm90IGluZGV4KCRpbS1uby1tZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgQHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8vLy9cbi8vLyBQYXJzaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIEdldCBvcGVyYXRvciBvZiBhbiBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3Qgb3BlcmF0b3IgZnJvbVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIEFueSBvZiBgPj1gLCBgPmAsIGA8PWAsIGA8YCwgYOKJpWAsIGDiiaRgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbikge1xuICBAZWFjaCAkb3BlcmF0b3IgaW4gKCc+PScsICc+JywgJzw9JywgJzwnLCAn4omlJywgJ+KJpCcpIHtcbiAgICBAaWYgc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgICAgIEByZXR1cm4gJG9wZXJhdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgJF86IGltLWxvZygnTm8gb3BlcmF0b3IgZm91bmQgaW4gYCN7JGV4cHJlc3Npb259YC4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBkaW1lbnNpb24gZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgd2lkdGhgIG9yIGBoZWlnaHRgIChvciBwb3RlbnRpYWxseSBhbnl0aGluZyBlbHNlKVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwYXJzZWQtZGltZW5zaW9uOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDAsICRvcGVyYXRvci1pbmRleCAtIDEpO1xuICAkZGltZW5zaW9uOiAnd2lkdGgnO1xuXG4gIEBpZiBzdHItbGVuZ3RoKCRwYXJzZWQtZGltZW5zaW9uKSA+IDAge1xuICAgICRkaW1lbnNpb246ICRwYXJzZWQtZGltZW5zaW9uO1xuICB9XG5cbiAgQHJldHVybiAkZGltZW5zaW9uO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gcHJlZml4IGJhc2VkIG9uIGFuIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3Jcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgbWluYCBvciBgbWF4YFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcikge1xuICBAcmV0dXJuIGlmKGluZGV4KCgnPCcsICc8PScsICfiiaQnKSwgJG9wZXJhdG9yKSwgJ21heCcsICdtaW4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgdmFsdWUgb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IHZhbHVlIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gQSBudW1lcmljIHZhbHVlXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yLWluZGV4ICsgc3RyLWxlbmd0aCgkb3BlcmF0b3IpKTtcblxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpIHtcbiAgICAkdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpO1xuICB9IEBlbHNlIHtcbiAgICAkdmFsdWU6IHRvLW51bWJlcigkdmFsdWUpO1xuICB9XG5cbiAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgdW5pdCgkdmFsdWUpKTtcblxuICBAaWYgbm90ICRpbnRlcnZhbCB7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAgIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gICAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gICAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICAgJF86IGltLWxvZygnVW5rbm93biB1bml0IGAje3VuaXQoJHZhbHVlKX1gLicpO1xuICB9XG5cbiAgQGlmICRvcGVyYXRvciA9PSAnPicge1xuICAgICR2YWx1ZTogJHZhbHVlICsgJGludGVydmFsO1xuICB9IEBlbHNlIGlmICRvcGVyYXRvciA9PSAnPCcge1xuICAgICR2YWx1ZTogJHZhbHVlIC0gJGludGVydmFsO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cblxuLy8vXG4vLy8gUGFyc2UgYW4gZXhwcmVzc2lvbiB0byByZXR1cm4gYSB2YWxpZCBtZWRpYS1xdWVyeSBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIHBhcnNlXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gVmFsaWQgbWVkaWEgcXVlcnlcbi8vL1xuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pIHtcbiAgLy8gSWYgaXQgaXMgcGFydCBvZiAkbWVkaWEtZXhwcmVzc2lvbnMsIGl0IGhhcyBubyBvcGVyYXRvclxuICAvLyB0aGVuIHRoZXJlIGlzIG5vIG5lZWQgdG8gZ28gYW55IGZ1cnRoZXIsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICBAaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbikge1xuICAgIEByZXR1cm4gbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKTtcbiAgfVxuXG4gICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pO1xuICAkZGltZW5zaW9uOiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuXG4gIEByZXR1cm4gJygjeyRwcmVmaXh9LSN7JGRpbWVuc2lvbn06ICN7JHZhbHVlfSknO1xufVxuXG4vLy9cbi8vLyBTbGljZSBgJGxpc3RgIGJldHdlZW4gYCRzdGFydGAgYW5kIGAkZW5kYCBpbmRleGVzXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNsaWNlXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRzdGFydCBbMV0gLSBTdGFydCBpbmRleFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZW5kIFtsZW5ndGgoJGxpc3QpXSAtIEVuZCBpbmRleFxuLy8vXG4vLy8gQHJldHVybiB7TGlzdH0gU2xpY2VkIGxpc3Rcbi8vL1xuQGZ1bmN0aW9uIHNsaWNlKCRsaXN0LCAkc3RhcnQ6IDEsICRlbmQ6IGxlbmd0aCgkbGlzdCkpIHtcbiAgQGlmIGxlbmd0aCgkbGlzdCkgPCAxIG9yICRzdGFydCA+ICRlbmQge1xuICAgIEByZXR1cm4gKCk7XG4gIH1cblxuICAkcmVzdWx0OiAoKTtcblxuICBAZm9yICRpIGZyb20gJHN0YXJ0IHRocm91Z2ggJGVuZCB7XG4gICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIG50aCgkbGlzdCwgJGkpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdDtcbn1cblxuLy8vL1xuLy8vIFN0cmluZyB0byBudW1iZXIgY29udmVydGVyXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gQ2FzdHMgYSBzdHJpbmcgaW50byBhIG51bWJlclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGJlIHBhcnNlZFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfVxuLy8vXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCR2YWx1ZSkge1xuICBAaWYgdHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgIT0gJ3N0cmluZycge1xuICAgICRfOiBpbS1sb2coJ1ZhbHVlIGZvciBgdG8tbnVtYmVyYCBzaG91bGQgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gIH1cblxuICAkZmlyc3QtY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAxLCAxKTtcbiAgJHJlc3VsdDogMDtcbiAgJGRpZ2l0czogMDtcbiAgJG1pbnVzOiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpO1xuICAkbnVtYmVyczogKCcwJzogMCwgJzEnOiAxLCAnMic6IDIsICczJzogMywgJzQnOiA0LCAnNSc6IDUsICc2JzogNiwgJzcnOiA3LCAnOCc6IDgsICc5JzogOSk7XG5cbiAgLy8gUmVtb3ZlICsvLSBzaWduIGlmIHByZXNlbnQgYXQgZmlyc3QgY2hhcmFjdGVyXG4gIEBpZiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnKycgb3IgJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpIHtcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkdmFsdWUsIDIpO1xuICB9XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBzdHItbGVuZ3RoKCR2YWx1ZSkge1xuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsICRpLCAkaSk7XG5cbiAgICBAaWYgbm90IChpbmRleChtYXAta2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gJy4nKSB7XG4gICAgICBAcmV0dXJuIHRvLWxlbmd0aChpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KSwgc3RyLXNsaWNlKCR2YWx1ZSwgJGkpKVxuICAgIH1cblxuICAgIEBpZiAkY2hhcmFjdGVyID09ICcuJyB7XG4gICAgICAkZGlnaXRzOiAxO1xuICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGRpZ2l0czogJGRpZ2l0cyAqIDEwO1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpIC8gJGRpZ2l0cztcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpO1xufVxuXG5cbi8vL1xuLy8vIEFkZCBgJHVuaXRgIHRvIGAkdmFsdWVgXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYWRkIHVuaXQgdG9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHVuaXQgLSBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHVuaXRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBgJHZhbHVlYCBleHByZXNzZWQgaW4gYCR1bml0YFxuLy8vXG5AZnVuY3Rpb24gdG8tbGVuZ3RoKCR2YWx1ZSwgJHVuaXQpIHtcbiAgJHVuaXRzOiAoJ3B4JzogMXB4LCAnY20nOiAxY20sICdtbSc6IDFtbSwgJyUnOiAxJSwgJ2NoJzogMWNoLCAncGMnOiAxcGMsICdpbic6IDFpbiwgJ2VtJzogMWVtLCAncmVtJzogMXJlbSwgJ3B0JzogMXB0LCAnZXgnOiAxZXgsICd2dyc6IDF2dywgJ3ZoJzogMXZoLCAndm1pbic6IDF2bWluLCAndm1heCc6IDF2bWF4KTtcblxuICBAaWYgbm90IGluZGV4KG1hcC1rZXlzKCR1bml0cyksICR1bml0KSB7XG4gICAgJF86IGltLWxvZygnSW52YWxpZCB1bml0IGAjeyR1bml0fWAuJyk7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZSAqIG1hcC1nZXQoJHVuaXRzLCAkdW5pdCk7XG59XG5cbi8vL1xuLy8vIFRoaXMgbWl4aW4gYWltcyBhdCByZWRlZmluaW5nIHRoZSBjb25maWd1cmF0aW9uIGp1c3QgZm9yIHRoZSBzY29wZSBvZlxuLy8vIHRoZSBjYWxsLiBJdCBpcyBoZWxwZnVsIHdoZW4gaGF2aW5nIGEgY29tcG9uZW50IG5lZWRpbmcgYW4gZXh0ZW5kZWRcbi8vLyBjb25maWd1cmF0aW9uIHN1Y2ggYXMgY3VzdG9tIGJyZWFrcG9pbnRzIChyZWZlcnJlZCB0byBhcyB0d2Vha3BvaW50cylcbi8vLyBmb3IgaW5zdGFuY2UuXG4vLy9cbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vL1xuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWtwb2ludHMgWygpXSAtIE1hcCBvZiB0d2Vha3BvaW50cyB0byBiZSBtZXJnZWQgd2l0aCBgJGJyZWFrcG9pbnRzYFxuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMgWygpXSAtIE1hcCBvZiB0d2Vha2VkIG1lZGlhIGV4cHJlc3Npb25zIHRvIGJlIG1lcmdlZCB3aXRoIGAkbWVkaWEtZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBicmVha3BvaW50cyB3aXRoIGEgdHdlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIG1lZGlhIGV4cHJlc3Npb25zIHdpdGggYSBjdXN0b20gb25lXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIGJvdGggY29uZmlndXJhdGlvbiBtYXBzXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCksICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuQG1peGluIG1lZGlhLWNvbnRleHQoJHR3ZWFrcG9pbnRzOiAoKSwgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoKSkge1xuICAvLyBTYXZlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRnbG9iYWwtYnJlYWtwb2ludHM6ICRicmVha3BvaW50cztcbiAgJGdsb2JhbC1tZWRpYS1leHByZXNzaW9uczogJG1lZGlhLWV4cHJlc3Npb25zO1xuXG4gIC8vIFVwZGF0ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6IG1hcC1tZXJnZSgkYnJlYWtwb2ludHMsICR0d2Vha3BvaW50cykgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiBtYXAtbWVyZ2UoJG1lZGlhLWV4cHJlc3Npb25zLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMpICFnbG9iYWw7XG5cbiAgQGNvbnRlbnQ7XG5cbiAgLy8gUmVzdG9yZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6ICRnbG9iYWwtYnJlYWtwb2ludHMgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zICFnbG9iYWw7XG59XG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIHB1YmxpYyBleHBvc2VkIEFQSVxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9dGFibGV0JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1OHB4JywgJzw4NTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPmRlc2t0b3AnLCAnPD0xMzUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbi8vLyAgQGluY2x1ZGUgbWVkaWEoJ3JldGluYTJ4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzUwcHgnLCAnPHRhYmxldCcsICdyZXRpbmEzeCcpIHsgfVxuLy8vXG5AbWl4aW4gbWVkaWEoJGNvbmRpdGlvbnMuLi4pIHtcbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgU3BhY2VBcm91bmRPcGVyYXRvclxuICBAaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID09IDApIG9yXG4gICAgICAobm90ICRpbS1tZWRpYS1zdXBwb3J0IGFuZCBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSkge1xuICAgIEBjb250ZW50O1xuICB9IEBlbHNlIGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA+IDApIHtcbiAgICBAbWVkaWEgI3t1bnF1b3RlKHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAxKSkpfSB7XG4gICAgICAvLyBSZWN1cnNpdmUgY2FsbFxuICAgICAgQGluY2x1ZGUgbWVkaWEoc2xpY2UoJGNvbmRpdGlvbnMsIDIpLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xufVxuXG4uY29udGVudC1sZWZ0IHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxufVxuLmNvbnRlbnQtY2VudGVyIHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cbn1cbi5jb250ZW50LXJpZ2h0IHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn0iLCIvLyB2YXJzXG4kcDogcmVtKDE2cHggNDBweCk7XG4kZnc6IDUwMDtcbiRiLXJhZDogNnB4O1xuJGZzOiBtcyg0KTtcbiRsaDogMS42O1xuJGljby1kaW06IHJlbSgzMnB4KTtcblxuLy8gU3RydWN0dXJlIEJ1dHRvblxuLmJ0biB7XG4gIEBpbmNsdWRlIHNldC1mb250KCRhbHQtZm9udC1mYW1pbHksICRmdywgbm9ybWFsLCAkZnMpO1xuICBAaW5jbHVkZSBzaXplKDEwMCUsIGF1dG8pO1xuICBwYWRkaW5nOiAkcDtcbiAgbGluZS1oZWlnaHQ6ICRsaDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgYm9yZGVyOm5vbmU7XG4gIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcblxuICBzdmcge1xuICAgIEBpbmNsdWRlIHNpemUoJGljby1kaW0sICRpY28tZGltKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICB9XG5cbiAgJi0tcHJpbWFyeSB7XG4gICAgQGluY2x1ZGUgYnV0dG9uLXN0eWxlKHdoaXRlLCBnZXQtY29sb3IocHJpbWFyeSwgMCksIGdldC1jb2xvcihwcmltYXJ5LCAwKSwgd2hpdGUsIGdldC1jb2xvcihwcmltYXJ5LCAwKSwgZ2V0LWNvbG9yKHByaW1hcnksIDEpKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IocHJpbWFyeSwgMCk7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICB9XG4gICYtLWRhcmsge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgYmxhY2ssIGJsYWNrLCB3aGl0ZSwgYmxhY2ssIGJsYWNrKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSA7XG4gICAgICBjb2xvcjogYmxhY2s7XG4gICAgfVx0XG4gIH1cbiAgJi0tZ29vZ2xlIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIGdldC1jb2xvcihiZywgMyksIGdldC1jb2xvcihiZywgMyksIHdoaXRlLCBnZXQtY29sb3IoYmcsIDMpLCBnZXQtY29sb3IoYmcsIDMpKTtcbiAgICB3aWR0aDogMzI0cHg7XG4gICAgJjphY3RpdmUge1xuICAgICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAzKTtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XHRcbiAgfVxuICAmLS1mYWNlYm9vayB7XG4gICAgQGluY2x1ZGUgYnV0dG9uLXN0eWxlKHdoaXRlLCBnZXQtY29sb3IoYmcsIDQpLCBnZXQtY29sb3IoYmcsIDQpLCB3aGl0ZSwgZ2V0LWNvbG9yKGJnLCA0KSwgZ2V0LWNvbG9yKGJnLCA0KSk7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgZm9udC1zaXplOjEuNnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAkYi1yYWQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gICAgYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgNCk7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVx0XG4gIH1cbiAgJi0teWVsbG93IHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIGdldC1jb2xvcihiZywgNSksIGdldC1jb2xvcihiZywgNSksIHdoaXRlLCBnZXQtY29sb3IoYmcsIDUpLCBnZXQtY29sb3IoYmcsIDUpKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDYpO1xuICAgICAgY29sb3I6d2hpdGU7XG4gICAgfVxuICB9XG4gICYtLWdyZXkge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgZ2V0LWNvbG9yKGJnLCA3KSwgZ2V0LWNvbG9yKGJnLCA3KSwgd2hpdGUsIGdldC1jb2xvcihiZywgNyksIGdldC1jb2xvcihiZywgNykpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgOCk7XG4gICAgICBjb2xvcjp3aGl0ZTtcbiAgICB9XG4gIH1cbiAgJi0tYmVpZ2Uge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZShnZXQtY29sb3IoYmVpZ2UtZGFyaywgMSksIGdldC1jb2xvcihiZywgMTApLCBnZXQtY29sb3IoYmcsIDEwKSwgZ2V0LWNvbG9yKHByaW1hcnksIDApLCBnZXQtY29sb3IoYmcsIDEwKSwgZ2V0LWNvbG9yKGJnLCAxMCkpO1xuICB9XG59XG5cbi5idG4tc2ltcGxlIHtcbiAgbWFyZ2luOiAkbXQgMXJlbSAwIDA7XG4gIEBpbmNsdWRlIHJlbShmb250LXNpemUsICR0ZXh0QmFzZSk7XG5cbiAgJi0tbXV0ZWQge1xuICAgIGNvbG9yOmdldC1jb2xvcihiZywwKTtcbiAgfVxuICAmLS1wcmltYXJ5IHtcbiAgICBjb2xvcjogZ2V0LWNvbG9yKGJlaWdlLWRhcmssMSk7XG4gICAgZm9udC13ZWlnaHQ6ICRmdztcbiAgfVxufVxuXG4uYnRuLWxhbmcge1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOndoaXRlO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNpdGlvbjogJHR0O1xuICAgIGNvbG9yOiAjYzNjM2MzO1xuICB9XG59XG5cbi5idG4tZ29sZHtcbiAgYmFja2dyb3VuZDogcmdiYSgxOTUsIDE2MCwwLCAwLjUpO1xuICBzcGFue1xuICAgIG1hcmdpbi1yaWdodDogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG59IFxuXG4uYnRuLWdyYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDIyNiwgMjI0LCAyMTksIDAuNSk7XG4gICBzcGFue1xuICAgIG1hcmdpbi1yaWdodDogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIEBpbmNsdWRlIHNldC1mb250KCRhbHQtZm9udC1mYW1pbHksIDUwMCwgbm9ybWFsLCAkdGV4dEJhc2UpO1xuICBAaW5jbHVkZSBzaXplKDM1LjZyZW0sIDQuM3JlbSk7XG4gIGJhY2tncm91bmQ6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgYm94LXNoYWRvdzogMHB4IDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBib3JkZXI6IG5vbmU7XG4gIG1hcmdpbjowIGF1dG87XG4gIGxpbmUtaGVpZ2h0OiAzLjZyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IHdoaXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gICY6aG92ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gICAgYmFja2dyb3VuZDogI2Q5Yjk2ODtcbiAgfVxuICAmOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCA2KTtcbiAgfVxuXG4vLyAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKCcuJykge1xuLy8gICAgIEBpbmNsdWRlIHNpemUoMTAwJSwgYXV0byk7XG4vLyAgIH1cbn0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NUE9ORU5UIHRvVE9QICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi50b1RvcCB7XG4gICAgQGluY2x1ZGUgc2l6ZShhdXRvLCAzLjcycmVtKTtcbiAgICBAaW5jbHVkZSBmaXhlZCh0b3AgODYlIHJpZ2h0IDJyZW0pO1xuICAgIHotaW5kZXg6IDk5OTk5O1xuICAgIGJhY2tncm91bmQ6ICM0YjQ2M2U7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDEuMnJlbSAxcmVtO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgICAgICBvcGFjaXR5OjE7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgfVxufSIsIlx0LmlucHV0LW5vcm1hbCB7XG5cdFx0YmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAwKTtcblx0XHRoZWlnaHQ6IDRyZW07XG5cdFx0Ym9yZGVyLXJhZGl1czogNHB4O1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMS42cmVtKTtcdFxuXHR9XG5cblx0LnVrLWlucHV0OmZvY3VzLCAudWstc2VsZWN0OmZvY3VzLCAudWstdGV4dGFyZWE6Zm9jdXMge1xuXHRcdGJvcmRlci1jb2xvcjogZ2V0LWNvbG9yKGJnLCAxKTtcblx0fSIsIi5saW5rLXRleHQge1xuICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDEuNHJlbSk7XHRcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogZ2V0LWNvbG9yKGJnLCAxKTtcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICBjb2xvcjogZ2V0LWNvbG9yKGJnLCAyKTtcbiAgfVxufSIsIi5sZWZ0LXBhbmVsIHtcblx0YmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAxKTtcblx0QGluY2x1ZGUgc2l6ZSg0ODBweCwgMTAwdmgpO1xuXHRcblx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0QGluY2x1ZGUgc2l6ZSgxMDAlLCAxMDB2aCk7XG5cdH1cblxuXHQmX193cmFwcGVyIHtcblx0XHRoZWlnaHQ6MTAwJTtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdH1cblxuXHQmX19ib2R5IHtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG5cdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblxuXHRcdHAge1xuXHRcdFx0Y29sb3I6IHdoaXRlO1xuXHRcdFx0QGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAyLjRyZW0pO1x0XG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0fVxuXHRcdH1cblx0XG5cdFx0YnV0dG9uLCBpbnB1dCB7XG5cdFx0XHRtYXJnaW4tdG9wOiAzLjJyZW07XG5cdFx0XHR3aWR0aDogMTVyZW07XG5cdFx0XHRwYWRkaW5nOiAxcmVtIDJyZW07XG5cblx0XHRcdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0XHR3aWR0aDogMTAwJVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdCZfX2hlYWRlciB7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGZsZXgtZmxvdyhjb2x1bW4pO1xuXHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRcblxuXHRcdEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuXHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG5cdFx0fVxuXG5cdFx0Jl9fd3JhcHBlciB7XG5cdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoZmxleC1zdGFydCk7XG5cdFx0XHRwYWRkaW5nLWJvdHRvbToxNnJlbTtcblxuXHRcdFx0QGluY2x1ZGUgbWVkaWEoJzw9bGcnKSB7XG5cdFx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdFx0XHRwYWRkaW5nLWJvdHRvbToycmVtO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHQmX19mb290ZXIge1xuXHRcdEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuXHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG5cdFx0fVxuXHR9XG59XG5cbi5yaWdodC1wYW5lbCB7XG5cdHdpZHRoOiA0NyU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0d2lkdGg6MTAwJTtcblx0fVxuXG5cdCZfX2xvZ2luIHtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0QGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcblx0XHRAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuXHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdGhlaWdodDoxMDAlO1xuXG5cdFx0Jl9fd3JhcHBlciB7XG5cdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRAaW5jbHVkZSBmbGV4LWRpcmVjdGlvbihjb2x1bW4pO1x0XG5cdFx0XHRAaW5jbHVkZSBzaXplKDEwMCUsIDEwMCUpO1xuXHRcdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0anVzdGlmeS1jb250ZW50OiB1bnNldDtcblx0XHRcdFx0aGVpZ2h0OiB1bnNldDtcblx0XHRcdH1cblxuXHRcdFx0Jl9faGVhZGVyIHtcblx0XHRcdFx0d2lkdGg6IDQwMHB4O1xuXHRcdFx0XHRwYWRkaW5nOiAxLjRyZW0gMDtcblxuXHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRwYWRkaW5nOnVuc2V0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aDEge1xuXHRcdFx0XHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMy4ycmVtKTtcblx0XHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQuc29jaWFsLXNpZ25pbiB7XG5cdFx0XHRcdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdFx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChzcGFjZS1iZXR3ZWVuKTtcblx0XHRcdFx0XHRwYWRkaW5nOiA0cmVtIDAgMCAwO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHQudWstZGl2aWRlci1pY29uIHtcblx0XHRcdFx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC5sb2dpbi1mb3JtIHtcblx0XHRcdFx0d2lkdGg6IDQwMHB4O1xuXG5cdFx0XHRcdGxhYmVsIHtcblx0XHRcdFx0XHRAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgNjAwLCBub3JtYWwsIDEuNnJlbSk7XG5cdFx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0XHRcdG1hcmdpbjoxcmVtIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmX19wYXNzd29yZCB7XG5cdFx0XHRcdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdFx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChzcGFjZS1iZXR3ZWVuKTtcblx0XHRcdFx0XHRAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YnV0dG9uIHtcblx0XHRcdFx0XHR3aWR0aDogMTZyZW07XG5cblx0XHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSIsIiRtYXgtdzogcmVtKDE5MjBweCk7XG4kaGVhZGVyLWg6IHJlbSg2MnB4KTtcblxuLnBhZ2Uge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iXX0= */
