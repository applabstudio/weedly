/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS FLEXBOX CROSSBROWSER               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS BUTTON STYLE                       */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  REUSABLE SASS MIXINS ON-EVENT                                   */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN WHEN-INSIDE                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  CONTAINER                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS POSITION                              */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN SIZE                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXIN SET-FONT                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXINS REM UNITS             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                REUSABLE SASS MIXIN BORDER                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS PADDING                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                              REUSABLE SASS MIXINS BOX-SHADOW                             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                            HIDING/SHOWING FADE TRANSITION                  */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 LIST RESET                                 */
/* -------------------------------------------------------------------------- */
/*
    Grid class name
*/
/*
    Cell class name
*/
/*
    Gutter size
*/
/*
    Optionally include max-width to fix IE issues
*/
/*
    Grid
*/
.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
    Grid cell
*/
.grid-cell,
.grid--auto > * {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4;
}

/*
    Grid cell modifiers
 */
.grid-cell--auto-size {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
}

.grid-cell--light {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.grid-cell--heavy {
  -webkit-box-flex: 8;
      -ms-flex-positive: 8;
          flex-grow: 8;
}

/*
    Grid gutters
*/
.grid--gutters {
  margin: -30px 0 0 -30px;
}

.grid--gutters > .grid-cell,
.grid--auto.grid--gutters > * {
  padding: 30px 0 0 30px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*
    Alignment per row
*/
.grid--top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.grid--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.grid--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/*
    Flexible cells
*/
.grid--flex-grid-cell > .grid-cell,
.grid--flex > .grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/*
    Justify
*/
.grid--justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/*
    Alignment per cell
*/
.grid-cell--top {
  -ms-flex-item-align: start;
      align-self: flex-start;
}

.grid-cell--bottom {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.grid-cell--center {
  -ms-flex-item-align: center;
      align-self: center;
}

/*
    Generate grid classes
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::selection {
  background: #28C660;
}

body {
  background: #28C660;
}

figure {
  margin: 0;
}

img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  text-decoration: none;
}

a:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

address {
  font-style: normal;
}

h1, h2, h3, h4, h5, h6,
ul, ol, p {
  margin: 0;
}

.js-allclick, .js-toggle {
  cursor: pointer;
}

html, body {
  font-size: 10px;
}

body {
  color: black;
  font-family: "Sarabun", sans-serif;
  line-height: 1.6;
}

.tinytext {
  line-height: 1.6;
  font-size: 1rem;
}

.tinytext--small {
  font-size: 0.88889rem;
}

.tinytext > * {
  margin-bottom: 1rem;
}

.tinytext > *:first-child {
  margin-top: 0;
}

.tinytext > *:last-child {
  margin-bottom: 0;
}

.tinytext h1, .tinytext h2, .tinytext h3, .tinytext h4 {
  margin: 1.25rem 0 0.5rem;
}

.tinytext ul li {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.tinytext a[href^="mailto"] {
  font-weight: 500;
  position: relative;
  padding-left: 1.75rem;
  background: url("../images/svg/envelope.svg") center left no-repeat;
}

.tinytext strong {
  font-weight: 800;
}

.tinytext em {
  font-style: italic;
}

.tinytext ul, .tinytext ol {
  margin-left: 0;
  padding-left: 1.25rem;
}

.tinytext ul li, .tinytext ol li {
  margin: 0;
}

@media (min-width: 768px) {
  .tinytext .embedded-entity {
    max-width: 40%;
    float: left;
    margin: 1rem 1rem 1rem 0;
  }
}

.tinytext--small {
  font-size: 0.88889rem;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.content-left > * {
  margin-left: 0;
}

.content-center > * {
  margin-left: auto;
  margin-right: auto;
}

.content-right > * {
  margin-right: 0;
}

.left-panel {
  background: #28C660;
  width: 480px;
  height: 100vh;
}

@media (max-width: 992px) {
  .left-panel {
    width: 100%;
    height: 100vh;
  }
}

.left-panel__wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.left-panel__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__body p {
  color: white;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
  padding-bottom: 1.6rem;
}

@media (max-width: 992px) {
  .left-panel__body p {
    text-align: center;
  }
}

.left-panel__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-flow: column;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .left-panel__header {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.left-panel__header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  padding-bottom: 16rem;
}

@media (max-width: 1200px) {
  .left-panel__header__wrapper {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
    padding-bottom: 2rem;
  }
}

@media (max-width: 1200px) {
  .left-panel__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.right-panel {
  width: 47%;
  margin: 0 auto;
}

@media (max-width: 992px) {
  .right-panel {
    width: 100%;
  }
}

.btn {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  width: 12.6rem;
  height: 4rem;
  padding: 0.51875rem 2.5rem;
  line-height: 1.6;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  border: none;
  border-radius: 6px;
}

.btn svg {
  width: 2rem;
  height: 2rem;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--primary {
  background: #28C660;
  color: white;
}

.btn--primary:active {
  background: #28C660;
  color: #fff;
}

.btn--primary:hover {
  background: #3ccb6f;
  -webkit-box-shadow: 0 5px 20px 0 rgba(29, 29, 31, 0.09);
          box-shadow: 0 5px 20px 0 rgba(29, 29, 31, 0.09);
  opacity: .9;
}

.btn--primary:active {
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

.btn--dark {
  color: white;
  background: black;
  border-color: black;
  width: 15rem;
  height: 4rem;
}

.btn--dark svg {
  fill: white;
}

.btn--dark:hover, .btn--dark:active, .btn--dark:focus {
  color: black;
  background: white;
  border-color: black;
}

.btn--dark:hover svg, .btn--dark:active svg, .btn--dark:focus svg {
  fill: black;
}

.btn--dark:active {
  background: white;
  color: black;
}

.btn--google {
  color: white;
  background: #DB3236;
  border-color: #de4649;
  width: 324px;
  border-radius: 6px;
  border: 1px solid #DB3236;
}

.btn--google svg {
  fill: white;
}

.btn--google:hover, .btn--google:active, .btn--google:focus {
  color: white;
  background: #de4649;
  border-color: #de4649;
}

.btn--google:hover svg, .btn--google:active svg, .btn--google:focus svg {
  fill: white;
}

.btn--google:active {
  background: #DB3236;
  color: #fff;
}

@media (max-width: 768px) {
  .btn--google {
    width: 250px;
  }
}

.btn--facebook {
  color: white;
  background: #3B5998;
  border-color: #4e69a2;
  width: 60px;
  font-size: 1.6rem;
  border-radius: 6px;
  border: 1px solid #3B5998;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--facebook svg {
  fill: white;
}

.btn--facebook:hover, .btn--facebook:active, .btn--facebook:focus {
  color: white;
  background: #4e69a2;
  border-color: #4e69a2;
}

.btn--facebook:hover svg, .btn--facebook:active svg, .btn--facebook:focus svg {
  fill: white;
}

.btn--facebook:active {
  background: #3B5998;
  color: #fff;
}

.btn--grey {
  color: white;
  background: #768093;
  border-color: #768093;
  border-radius: 6px;
  border: 1px solid #768093;
}

.btn--grey svg {
  fill: white;
}

.btn--grey:hover, .btn--grey:active, .btn--grey:focus {
  color: #768093;
  background: white;
  border-color: #768093;
}

.btn--grey:hover svg, .btn--grey:active svg, .btn--grey:focus svg {
  fill: #768093;
}

.btn--grey:active {
  background: #768093;
  color: #fff;
}

@media (max-width: 992px) {
  .btn {
    width: 100%;
  }
}

/* -------------------------------------------------------------------------- */
/*                               COMPONENT toTOP                              */
/* -------------------------------------------------------------------------- */
.toTop {
  width: auto;
  height: 3.72rem;
  top: 86%;
  right: 2rem;
  position: fixed;
  z-index: 99999;
  background: #4b463e;
  border-radius: 50%;
  padding: 1.2rem 1rem;
  opacity: 0.6;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
}

.toTop:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  opacity: 1;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
  color: white;
}

.input-normal {
  background: #F3F3F4;
  height: 4rem;
  border: 1px solid transparent;
  border-radius: 4px;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.uk-input:focus, .uk-select:focus, .uk-textarea:focus {
  border: 1px solid #28C660;
}

.link-text {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  text-decoration: none;
  color: #28C660;
}

.link-text:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  color: #3ccb6f;
}

.login-form {
  width: 400px;
  padding-bottom: 2.4rem;
}

@media (max-width: 992px) {
  .login-form {
    width: 100%;
  }
}

.login-form label {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 1.6rem;
  display: inline-block;
  margin: 1rem 0;
}

.login-form__password {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.login-form button {
  width: 12.6rem;
}

@media (max-width: 992px) {
  .login-form button {
    width: 100%;
  }
}

.login {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 992px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 768px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

.login__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100%;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .login__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.login__wrapper__header {
  width: 400px;
  padding: 1.4rem 0;
}

@media (max-width: 992px) {
  .login__wrapper__header {
    padding: unset;
    width: 100%;
  }
}

.login__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .login__wrapper__header .business {
    margin: 0 auto;
    position: unset;
  }
}

.login__wrapper__header h1 {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

.login__wrapper__header .social-signin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  padding: 4rem 0 0 0;
}

.login__wrapper__header .uk-divider-icon {
  margin-bottom: 0;
}

.page {
  background: white;
  margin: 0 auto;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2ZsZXguc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2J1dHRvbi1zdHlsZS5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fb24tZXZlbnQuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3doZW4taW5zaWRlLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19jb250YWluZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zaXplLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zZXQtZm9udC5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fcmVtLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19ib3JkZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3BhZGRpbmcuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2JveC1zaGFkb3cuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3RyYW5zaXRpb24uc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2xpc3RyZXNldC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEtZ3JpZC9faW5jbHVkZS1tZWRpYS1ncmlkLnNjc3MiLCJtYWluLmNzcyIsInBhcnRzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwicGFydHMvYmFzZS9fYmFzZS5zY3NzIiwicGFydHMvYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJzY2FsZS1zYXNzL3N0eWxlc2hlZXRzL21vZHVsYXJzY2FsZS9fZnVuY3Rpb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlbS9fcmVtLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvaW5jbHVkZS1tZWRpYS9kaXN0L19pbmNsdWRlLW1lZGlhLnNjc3MiLCJwYXJ0cy9iYXNlL19oZWxwZXJzLnNjc3MiLCJwYXJ0cy9sYXlvdXQvX2xlZnQtcGFuZWwuc2NzcyIsInBhcnRzL2xheW91dC9fcmlnaHQtcGFuZWwuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2J1dHRvbi5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMS1hdG9tcy9fdG9Ub3Auc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2lucHV0LnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAxLWF0b21zL19hbmNob3Iuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2Zvcm0uc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDMtb3JnYW5pc21zL19sb2dpbi5zY3NzIiwicGFydHMvcGFnZXMvX3BhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLHFHQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLG1HQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNBQTs7Q0MwQ0M7QURyQ0Q7O0NDd0NDO0FEbkNEOztDQ3NDQztBRGpDRDs7Q0NvQ0M7QUQvQkQ7O0NDa0NDO0FEL0JEO0VBQ0ksb0JBQWE7RUFBYixvQkFBYTtFQUFiLGFBQWE7RUFDYixtQkFBZTtNQUFmLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsU0FBUztFQUNULFVBQVU7QUNpQ2Q7O0FEOUJBOztDQ2tDQztBRC9CRDs7RUFFSSxtQkFBTztNQUFQLFdBQU87VUFBUCxPQUFPO0VBQ1AsbUJBQVk7TUFBWixvQkFBWTtVQUFaLFlBQVk7QUNpQ2hCOztBRDlCQTs7RUNrQ0U7QUQvQkY7RUFDSSxtQkFBVTtNQUFWLGNBQVU7VUFBVixVQUFVO0FDaUNkOztBRDlCQTtFQUNJLG1CQUFZO01BQVosb0JBQVk7VUFBWixZQUFZO0FDaUNoQjs7QUQ5QkE7RUFDSSxtQkFBWTtNQUFaLG9CQUFZO1VBQVosWUFBWTtBQ2lDaEI7O0FEOUJBOztDQ2tDQztBRC9CRDtFQUNJLHVCRWVzQjtBRGtCMUI7O0FEL0JBOztFQUVJLHNCRVdzQjtFRlZ0Qiw4QkFBc0I7VUFBdEIsc0JBQXNCO0FDa0MxQjs7QUQvQkE7O0NDbUNDO0FEaENEO0VBQ0ksd0JBQXVCO01BQXZCLHFCQUF1QjtVQUF2Qix1QkFBdUI7QUNrQzNCOztBRGhDQTtFQUNJLHNCQUFxQjtNQUFyQixtQkFBcUI7VUFBckIscUJBQXFCO0FDbUN6Qjs7QURqQ0E7RUFDSSx5QkFBbUI7TUFBbkIsc0JBQW1CO1VBQW5CLG1CQUFtQjtBQ29DdkI7O0FEakNBOztDQ3FDQztBRGxDRDs7RUFFSSxvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtBQ29DakI7O0FEakNBOztDQ3FDQztBRGxDRDtFQUNJLHdCQUF1QjtNQUF2QixxQkFBdUI7VUFBdkIsdUJBQXVCO0FDb0MzQjs7QURqQ0E7O0NDcUNDO0FEbENEO0VBQ0ksMEJBQXNCO01BQXRCLHNCQUFzQjtBQ29DMUI7O0FEbENBO0VBQ0ksd0JBQW9CO01BQXBCLG9CQUFvQjtBQ3FDeEI7O0FEbkNBO0VBQ0ksMkJBQWtCO01BQWxCLGtCQUFrQjtBQ3NDdEI7O0FEbkNBOztDQ3VDQztBRXJKRCwyRUFBQTtBQUVBOytFRnNKK0U7QUVuSi9FOzs7RUZ1SkU7QUVsSkY7RUFDRSxpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLDhCQUE4QjtFQUFFLE1BQUE7QUZzSmxDOztBRW5KQTsrRUZzSitFO0FFbkovRTs7RUZzSkU7QUVsSkY7RUFDRSxTQUFTO0FGb0pYOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUZrSmxCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7O0VGbUpFO0FFOUlGO0VBQ0UsK0JBQXVCO1VBQXZCLHVCQUF1QjtFQUFFLE1BQUE7RUFDekIsU0FBUztFQUFFLE1BQUE7RUFDWCxpQkFBaUI7RUFBRSxNQUFBO0FGbUpyQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTsrRUZvSitFO0FFakovRTs7RUZvSkU7QUVoSkY7RUFDRSw2QkFBNkI7QUZrSi9COztBRS9JQTs7O0VGb0pFO0FFL0lGO0VBQ0UsbUJBQW1CO0VBQUUsTUFBQTtFQUNyQiwwQkFBMEI7RUFBRSxNQUFBO0VBQzVCLHlDQUFpQztVQUFqQyxpQ0FBaUM7RUFBRSxNQUFBO0FGb0pyQzs7QUVqSkE7O0VGcUpFO0FFakpGOztFQUVFLG1CQUFtQjtBRm1KckI7O0FFaEpBOzs7RUZxSkU7QUVoSkY7OztFQUdFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUZrSjFCOztBRS9JQTtFQUNFLGVBQWU7QUZrSmpCOztBRS9JQTtFQUNFLFdBQVc7QUZrSmI7O0FFL0lBOytFRmtKK0U7QUUvSS9FOztFRmtKRTtBRTlJRjtFQUNFLGtCQUFrQjtBRmdKcEI7O0FFN0lBOytFRmdKK0U7QUU3SS9FOzs7RUZpSkU7QUU1SUY7Ozs7O0VBS0Usb0JBQW9CO0VBQUUsTUFBQTtFQUN0QixlQUFlO0VBQUUsTUFBQTtFQUNqQixpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLFNBQVM7RUFBRSxNQUFBO0FGa0piOztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNRLE1BQUE7RUFDTixpQkFBaUI7QUZrSm5COztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNTLE1BQUE7RUFDUCxvQkFBb0I7QUZrSnRCOztBRS9JQTs7RUZtSkU7QUUvSUY7Ozs7RUFJRSwwQkFBMEI7QUZpSjVCOztBRTlJQTs7RUZrSkU7QUU5SUY7Ozs7RUFJRSxrQkFBa0I7RUFDbEIsVUFBVTtBRmdKWjs7QUU3SUE7O0VGaUpFO0FFN0lGOzs7O0VBSUUsOEJBQThCO0FGK0loQzs7QUU1SUE7O0VGZ0pFO0FFNUlGO0VBQ0UsOEJBQThCO0FGOEloQzs7QUUzSUE7Ozs7O0VGa0pFO0FFM0lGO0VBQ0UsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsZUFBZTtFQUFFLE1BQUE7RUFDakIsVUFBVTtFQUFFLE1BQUE7RUFDWixtQkFBbUI7RUFBRSxNQUFBO0FGbUp2Qjs7QUVoSkE7O0VGb0pFO0FFaEpGO0VBQ0Usd0JBQXdCO0FGa0oxQjs7QUUvSUE7O0VGbUpFO0FFL0lGO0VBQ0UsY0FBYztBRmlKaEI7O0FFOUlBOzs7RUZtSkU7QUFDRjs7RUU3SUUsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsVUFBVTtFQUFFLE1BQUE7QUZrSmQ7O0FFL0lBOztFRm1KRTtBQUNGOztFRTlJRSxZQUFZO0FGaUpkOztBRTlJQTs7O0VGbUpFO0FBQ0Y7RUU5SUUsNkJBQTZCO0VBQUUsTUFBQTtFQUMvQixvQkFBb0I7RUFBRSxNQUFBO0FGa0p4Qjs7QUUvSUE7O0VGbUpFO0FBQ0Y7RUUvSUUsd0JBQXdCO0FGaUoxQjs7QUU5SUE7OztFRm1KRTtBRTlJRjtFQUNFLDBCQUEwQjtFQUFFLE1BQUE7RUFDNUIsYUFBYTtFQUFFLE1BQUE7QUZrSmpCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7RUZrSkU7QUU5SUY7RUFDRSxjQUFjO0FGZ0poQjs7QUU3SUE7O0VGaUpFO0FFN0lGO0VBQ0Usa0JBQWtCO0FGK0lwQjs7QUU1SUE7K0VGK0krRTtBRTVJL0U7O0VGK0lFO0FFM0lGO0VBQ0UsYUFBYTtBRjZJZjs7QUUxSUE7O0VGOElFO0FBQ0Y7RUUxSUUsYUFBYTtBRjRJZjs7QUd2ZUE7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0FIMGV4Qjs7QUd2ZUE7RUFDRSxtQkZnRlk7QUQwWmQ7O0FHdmVBO0VBQ0UsbUJGaUZZO0FEeVpkOztBR3ZlQTtFQUNFLFNBQVM7QUgwZVg7O0FHdmVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixjQUFjO0FIMGVoQjs7QUd2ZUE7RUFDRSxxQkFBcUI7QUgwZXZCOztBRzNlQTtFQUlJLDRCRjRLSztFRTVLTCx1QkY0S0s7RUU1S0wsb0JGNEtLO0FEK1RUOztBR3RlQTtFQUNFLGtCQUFrQjtBSHllcEI7O0FHdGVBOztFQUVFLFNBQVM7QUh5ZVg7O0FHdGVBO0VBQ0UsZUFBZTtBSHllakI7O0FJbGhCQTtFQUNFLGVBQWU7QUpxaEJqQjs7QUlsaEJBO0VBQ0UsWUg0RWdCO0VHM0VoQixrQ0gwSnNDO0VHekp0QyxnQkFBZ0I7QUpxaEJsQjs7QUlsaEJBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVDRW9DO0FMbWhCdEM7O0FJcGhCRTtFQUNFLHFCQ0FrQztBTHVoQnRDOztBSTNoQkE7RUFRSSxtQkVnQndEO0FOdWdCNUQ7O0FJL2hCQTtFQVlJLGFBQWE7QUp1aEJqQjs7QUluaUJBO0VBZ0JJLGdCQUFnQjtBSnVoQnBCOztBSXZpQkE7RUFvQkksd0JFSXdEO0FObWhCNUQ7O0FJM2lCQTtFWk5DLG9FQUF1RDtFQUN2RCxrQkFGNkU7RUFHN0UsbUJBSDREO0VBSTVELGlCUzJKc0I7QUQwWnZCOztBSWxqQkE7RUE2Qk0sZ0JBQWdCO0VkZnJCLGtCQVgwQjtFYzRCckIscUJFUHNEO0VGUXRELG1FQUFtRTtBSnloQnpFOztBSXpqQkE7RUFxQ0ksZ0JBQWdCO0FKd2hCcEI7O0FJN2pCQTtFQXlDSSxrQkFBa0I7QUp3aEJ0Qjs7QUlqa0JBO0VBNkNJLGNBQWM7RUFDZCxxQkV0QndEO0FOOGlCNUQ7O0FJdGtCQTtFQWdETSxTQUFTO0FKMGhCZjs7QU9uQ0k7RUh2aUJKO0lBc0RNLGNBQWM7SUFDZCxXQUFXO0lBQ1gsd0JBQXdCO0VKeWhCNUI7QUFDRjs7QUl0aEJFO0VBQ0UscUJDekRrQztBTGtsQnRDOztBUWhtQkE7RUFDRSxTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsVUFBVTtBUm1tQlo7O0FRaG1CQTtFQUVJLGNBQWM7QVJrbUJsQjs7QVEvbEJBO0VBRUksaUJBQWlCO0VBQ2pCLGtCQUFrQjtBUmltQnRCOztBUTlsQkE7RUFFSSxlQUFlO0FSZ21CbkI7O0FTeG5CQTtFQUNDLG1CUnlGYTtFVnRGYixZa0JGbUI7RWxCR25CLGFrQkgwQjtBVDRuQjNCOztBTzdFSTtFRWpqQko7SWxCSUMsV2tCQ21CO0lsQkFuQixha0JBMEI7RVQrbkJ6QjtBQUNGOztBUzduQkM7RUFDQyxZQUFXO0V4QkhaLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtBZW9vQmQ7O0FTam9CQztFeEJQQSxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUEyRlYsNEJ3QnRGNkI7RXhCdUYvQiwyQndCdkYrQjtFeEJ3RjlCLHdCd0J4RjhCO1V4QndGOUIsdUJ3QnhGOEI7RXhCeUY1QixxQndCekY0QjtFeEIyRzdCLHdCd0IxR3lCO0V4QjJHM0IsdUJ3QjNHMkI7RXhCNEcxQix5QndCNUcwQjtNeEI0RzFCLHNCd0I1RzBCO1V4QjRHMUIsbUJ3QjVHMEI7QVQrb0I3Qjs7QVNscEJFO0VBTUMsWUFBWTtFakJmZCxvRUFBdUQ7RUFDdkQsa0JpQmVxRDtFakJkckQsbUJpQmM2QztFakJiN0MsaUJpQmE2RDtFQUMzRCxzQkFBc0I7QVRtcEJ6Qjs7QU92SEk7RUVwaUJGO0lBVUUsa0JBQWtCO0VUc3BCcEI7QUFDRjs7QVNscEJDO0V4QnRCQSxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUF3Q1oscUJ3QnBCeUI7RXhCcUJ4Qiw0QndCckJ3QjtFeEJxQnhCLDZCd0JyQndCO1V4QnFCeEIsaUJ3QnJCd0I7RXhCdUV2Qiw0QndCdEU2QjtFeEJ1RS9CLDJCd0J2RStCO0V4QndFOUIsd0J3QnhFOEI7VXhCd0U5Qix1QndCeEU4QjtFeEJ5RTVCLHFCd0J6RTRCO0VBQy9CLFlBQVk7QVRncUJkOztBTy9JSTtFRXJoQkg7SXhCeUVHLDRCd0JqRThCO0l4QmtFaEMsMkJ3QmxFZ0M7SXhCbUUvQix3QndCbkUrQjtZeEJtRS9CLHVCd0JuRStCO0l4Qm9FN0IscUJ3QnBFNkI7RVRxcUJoQztBQUNGOztBU25xQkU7RXhCakNELG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGVixnQ3dCNURrQztFeEI2RHBDLCtCd0I3RG9DO0V4QjhEbkMsdUJ3QjlEbUM7VXhCOERuQywyQndCOURtQztFeEIrRGpDLHlCd0IvRGlDO0VBQ25DLHFCQUFvQjtBVDhxQnZCOztBT3ZLSTtFRTFnQkY7SXhCOERFLDRCd0J4RCtCO0l4QnlEakMsMkJ3QnpEaUM7SXhCMERoQyx3QndCMURnQztZeEIwRGhDLHVCd0IxRGdDO0l4QjJEOUIscUJ3QjNEOEI7SUFDL0Isb0JBQW1CO0VUb3JCckI7QUFDRjs7QU9sTEk7RUU5Zkg7SXhCa0RHLDRCd0JoRDhCO0l4QmlEaEMsMkJ3QmpEZ0M7SXhCa0QvQix3QndCbEQrQjtZeEJrRC9CLHVCd0JsRCtCO0l4Qm1EN0IscUJ3Qm5ENkI7RVR1ckJoQztBQUNGOztBVTd1QkE7RUFDQyxVQUFVO0VBQ1YsY0FBYztBVmd2QmY7O0FPak1JO0VHampCSjtJQUtHLFdBQVU7RVZrdkJYO0FBQ0Y7O0FXanZCQTtFbkJIQyxvRUFBdUQ7RUFDdkQsa0JtQkdvRDtFbkJGcEQsbUJtQkU0QztFbkJENUMsaUJTNkp1QjtFVmhLdkIsY29CS3NCO0VwQkp0QixZb0JJNEI7RUFDM0IsMEJMd0IwRDtFS3ZCMUQsZ0JBUk07RUFTTixxQkFBcUI7RUFDckIsYUFBYTtFQUNiLGVBQWU7RUFDZiw0QlZ1TE87RVV2TFAsdUJWdUxPO0VVdkxQLG9CVnVMTztFVXRMUCxZQUFXO0VBQ1gsa0JBZlM7QVh1d0JYOztBV2x3QkE7RXBCSEMsV2U4QjJEO0VmN0IzRCxZZTZCMkQ7RUtieEQsNEJWaUxLO0VVakxMLHVCVmlMSztFVWpMTCxvQlZpTEs7QUR5a0JUOztBV3Z2QkU7RUFDRSxtQlY0RFU7RVUzRFYsWUFBVztBWDB2QmY7O0FXNXZCRztFQUlHLG1CVnlEUTtFVXhEUixXVndHWTtBRG9wQmxCOztBV2p3Qkc7RUFRRyxtQlZzRFE7RVVyRFIsdURBQTJDO1VBQTNDLCtDQUEyQztFQUMzQyxXQUFXO0FYNnZCakI7O0FXdndCRztFQWFHLDhCQUFxQjtNQUFyQiwwQkFBcUI7VUFBckIsc0JBQXFCO0FYOHZCM0I7O0FXMXZCRTtFekJwQ0QsWXlCcUM4QjtFekJwQzlCLGlCeUJvQzRDO0V6Qm5DNUMsbUJ5Qm1DMEQ7RXBCdEMxRCxZb0J1Q3NCO0VwQnRDdEIsWW9Cc0M0QjtBWGd3QjdCOztBZGx5QkM7RUFDRSxXeUJnQzRCO0FYcXdCL0I7O0FibnlCRztFREVBLFl5QjRCbUM7RXpCM0JuQyxpQnlCMkJpRDtFekIxQmpELG1CeUIwQitEO0FYMndCbEU7O0FkbnlCRztFQUNELFd5QnVCb0M7QVgrd0J0Qzs7QVdoeEJHO0VBSUcsaUJBQWtCO0VBQ2xCLFlBQVk7QVhneEJsQjs7QVc1d0JFO0V6QjdDRCxZeUI4QzhCO0V6QjdDOUIsbUJlc0ZhO0VmckZiLHFCZXdGYTtFVTNDVixZQUFZO0VBQ1osa0JBbkRPO0VBb0RQLHlCVnNDVTtBRDJ1QmQ7O0FkOXpCQztFQUNFLFd5QnlDNEI7QVh3eEIvQjs7QWIvekJHO0VERUEsWXlCcUNtQztFekJwQ25DLG1CZWdGVztFZi9FWCxxQmUrRVc7QURrdkJkOztBZC96Qkc7RUFDRCxXeUJnQ29DO0FYa3lCdEM7O0FXbnlCRztFQU1HLG1CVm9DUTtFVW5DUixXVjRFWTtBRHF0QmxCOztBT3pTSTtFSS9mRjtJQVVJLFlBQVk7RVhteUJoQjtBQUNGOztBV2h5QkU7RXpCM0RELFl5QjREOEI7RXpCM0Q5QixtQmV1RmE7RWZ0RmIscUJleUZhO0VVOUJWLFdBQVc7RUFDWCxpQlYrRm1CO0VVOUZuQixrQkFsRU87RUFtRVAseUJWd0JVO0VVdkJWLGVBQWU7RUFDZiw0QlYrSEs7RVUvSEwsdUJWK0hLO0VVL0hMLG9CVitISztBRHNxQlQ7O0FkbjJCQztFQUNFLFd5QnVENEI7QVgreUIvQjs7QWJwMkJHO0VERUEsWXlCbURtQztFekJsRG5DLG1CZWlGVztFZmhGWCxxQmVnRlc7QURzeEJkOztBZHAyQkc7RUFDRCxXeUI4Q29DO0FYeXpCdEM7O0FXMXpCRztFQVNHLG1CVm9CUTtFVW5CUixXVjJEWTtBRDB2QmxCOztBV2p6QkU7RXpCekVELFl5QjBFOEI7RXpCekU5QixtQmV3RmE7RWZ2RmIscUJldUZhO0VVZFYsa0JBOUVPO0VBK0VQLHlCVmFVO0FEeXlCZDs7QWQ5M0JDO0VBQ0UsV3lCcUU0QjtBWDR6Qi9COztBYi8zQkc7RURFQSxjZWdGVztFZi9FWCxpQnlCZ0V1RTtFekIvRHZFLHFCZThFVztBRG16QmQ7O0FkLzNCRztFQUNELGFlMkVZO0FEdXpCZDs7QVd2MEJHO0VBS0csbUJWV1E7RVVWUixXVmlEWTtBRHF4QmxCOztBT3pXSTtFSTFpQko7SUFrRkksV0FDRjtFWHEwQkE7QUFDRjs7QVloNkJBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQUVBO0VyQkFDLFdxQkNxQjtFckJBckIsZXFCQThCO0V0QmdCN0IsUXNCZndCO0V0QmV4QixXc0JmbUM7RXRCa0JwQyxlQWZ1QjtFc0JGcEIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0RBQTBDO1VBQTFDLDBDQUEwQztBWnE2QjlDOztBWTk2QkE7RUFZUSw0QlhzTEM7RVd0TEQsdUJYc0xDO0VXdExELG9CWHNMQztFV3JMRCxVQUFTO0VBQ1Qsa0RBQTBDO1VBQTFDLDBDQUEwQztFQUMxQyxZQUFXO0FaczZCbkI7O0FhejdCQztFQUNDLG1CWndGWTtFWXZGWixZQUFZO0VBQ1osNkJBQTZCO0VBQzdCLGtCQUFrQjtFckJBbkIsb0VBQXVEO0VBQ3ZELGtCcUJBb0Q7RXJCQ3BELG1CcUJENEM7RXJCRTVDLGlCcUJGNEQ7QWIrN0I3RDs7QWE1N0JDO0VBQ0MseUJaaUZZO0FEODJCZDs7QWN4OEJBO0V0QklDLG9FQUF1RDtFQUN2RCxrQnNCSm9EO0V0QktwRCxtQnNCTDRDO0V0Qk01QyxpQnNCTjREO0VBQzNELHFCQUFxQjtFQUNyQixjYmtGWTtBRDQzQmQ7O0FjajlCQTtFQUtJLDRCYmlNSztFYWpNTCx1QmJpTUs7RWFqTUwsb0JiaU1LO0VhaE1MLGNiZ0ZVO0FEZzRCZDs7QWV0OUJBO0VBQ0MsWUFBWTtFQUNaLHNCQUFzQjtBZnk5QnZCOztBTzFhSTtFUWpqQko7SUFLRSxXQUFVO0VmMjlCVjtBQUNGOztBZWorQkE7RXZCSUMsb0VBQXVEO0VBQ3ZELGtCdUJJaUQ7RXZCSGpELGdCdUJHeUM7RXZCRnpDLGlCdUJFeUQ7RUFDeEQscUJBQXFCO0VBQ3JCLGNBQWE7QWYrOUJmOztBZTU5QkM7RTlCUkEsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DOEJyRm9DO0U5QnNGdEMsa0M4QnRGc0M7RTlCdUZyQyx5QjhCdkZxQztVOUJ1RnJDLDhCOEJ2RnFDO0U5QndGbkMsNEI4QnhGbUM7RTlCMEdwQyx3QjhCekd5QjtFOUIwRzNCLHVCOEIxRzJCO0U5QjJHMUIseUI4QjNHMEI7TTlCMkcxQixzQjhCM0cwQjtVOUIyRzFCLG1COEIzRzBCO0FmMCtCN0I7O0FlMy9CQTtFQXFCRSxjQUFjO0FmMCtCaEI7O0FPOWNJO0VRampCSjtJQXdCRyxXQUFXO0VmNCtCWjtBQUNGOztBZ0JyZ0NBO0UxQndCQyxrQkFYMEI7RUxQMUIsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBbUJWLDJCK0IxQjRCO0UvQjJCOUIsMEIrQjNCOEI7RS9CNEI3Qiw0QitCNUI2QjtFL0I0QjdCLDZCK0I1QjZCO1UvQjRCN0Isc0IrQjVCNkI7RS9CdUg1Qix3QitCdEh5QjtFL0J1SDNCLHVCK0J2SDJCO0UvQndIMUIseUIrQnhIMEI7TS9Cd0gxQixzQitCeEgwQjtVL0J3SDFCLG1CK0J4SDBCO0UvQmlHekIsNEIrQmhHNkI7RS9CaUcvQiwyQitCakcrQjtFL0JrRzlCLHdCK0JsRzhCO1UvQmtHOUIsdUIrQmxHOEI7RS9CbUc1QixxQitCbkc0QjtFQUMvQixZQUFXO0FoQnNoQ2I7O0FPM2VJO0VTampCSjtJQVNHLFVBQVU7SUFDVixjQUFjO0VoQndoQ2Y7QUFDRjs7QU9sZkk7RVNqakJKO0lBY0csVUFBVTtJQUNWLGNBQWM7RWhCMGhDZjtBQUNGOztBZ0J4aENFO0UvQlpELG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQW1CViwyQitCVDZCO0UvQlUvQiwwQitCVitCO0UvQlc5Qiw0QitCWDhCO0UvQlc5Qiw2QitCWDhCO1UvQlc5QixzQitCWDhCO0V6QmhCaEMsV3lCaUJvQjtFekJoQnBCLFl5QmdCMEI7RS9CcUd2Qix3QitCcEcwQjtFL0JxRzVCLHVCK0JyRzRCO0UvQnNHM0IseUIrQnRHMkI7TS9Cc0czQixzQitCdEcyQjtVL0JzRzNCLG1CK0J0RzJCO0UvQitFMUIsNEIrQjlFOEI7RS9CK0VoQywyQitCL0VnQztFL0JnRi9CLHdCK0JoRitCO1UvQmdGL0IsdUIrQmhGK0I7RS9CaUY3QixxQitCakY2QjtBaEIwaUNsQzs7QU9oaEJJO0VTL2hCRjtJQVFFLHVCQUFzQjtRQUF0QixvQkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLGFBQWE7RWhCNGlDZjtBQUNGOztBZ0IxaUNHO0VBQ0MsWUFBWTtFQUNaLGlCQUFpQjtBaEI2aUNyQjs7QU81aEJJO0VTbmhCRDtJQUtFLGNBQWM7SUFDZCxXQUFXO0VoQitpQ2Q7QUFDRjs7QWdCdGpDSTtFMUJURixTMEJtQjZCO0UxQm5CN0IsUTBCbUJxQztFMUJoQnRDLGtCQW5CMEI7RTBCb0N0QixjQUFjO0VBQ2Qsb0JBQW9CO0FoQmtqQ3pCOztBTzNpQkk7RVNuaEJBO0lBZUUsY0FBYztJQUNkLGVBQWU7RWhCb2pDbkI7QUFDRjs7QWdCcmtDSTtFeEIxQkgsb0VBQXVEO0VBQ3ZELGtCd0I4Q3VEO0V4QjdDdkQsbUJ3QjZDK0M7RXhCNUMvQyxpQndCNEMrRDtFQUMzRCxnQkFBZ0I7QWhCdWpDckI7O0FnQjdrQ0k7RS9CeEJILG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGVixtQytCNUN1QztFL0I2Q3pDLGtDK0I3Q3lDO0UvQjhDeEMseUIrQjlDd0M7VS9COEN4Qyw4QitCOUN3QztFL0IrQ3RDLDRCK0IvQ3NDO0VBQ3RDLG1CQUFtQjtBaEIrakN4Qjs7QWdCM2xDSTtFQWdDQyxnQkFBZ0I7QWhCK2pDckI7O0FpQjFuQ0E7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGdCQUFnQjtBakI2bkNsQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBNSVhJTlMgRkxFWEJPWCBDUk9TU0JST1dTRVIgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gRmxleGJveCBkaXNwbGF5XG5AbWl4aW4gZmxleGJveCgpIHtcblx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XG5cdGRpc3BsYXk6IC1tb3otYm94O1xuXHRkaXNwbGF5OiAtbXMtZmxleGJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuXHRkaXNwbGF5OiBmbGV4O1xuICB9XG4gIFxuICAvLyBUaGUgJ2ZsZXgnIHNob3J0aGFuZFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gPHBvc2l0aXZlLW51bWJlcj4sIGluaXRpYWwsIGF1dG8sIG9yIG5vbmVcbiAgQG1peGluIGZsZXgoJHZhbHVlcykge1xuXHQtd2Via2l0LWJveC1mbGV4OiAkdmFsdWVzO1xuXHQgICAtbW96LWJveC1mbGV4OiAkdmFsdWVzO1xuXHRcdC13ZWJraXQtZmxleDogJHZhbHVlcztcblx0XHQgIC1tcy1mbGV4OiAkdmFsdWVzO1xuXHRcdFx0ICBmbGV4OiAkdmFsdWVzO1xuICB9XG4gIFxuICAvLyBGbGV4IEZsb3cgRGlyZWN0aW9uXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VcbiAgQG1peGluIGZsZXgtZGlyZWN0aW9uKCRkaXJlY3Rpb24pIHtcblx0LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0ICAgLW1vei1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0XHQtbXMtZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcbiAgfVxuICBcbiAgLy8gRmxleCBMaW5lIFdyYXBwaW5nXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIG5vd3JhcCB8IHdyYXAgfCB3cmFwLXJldmVyc2VcbiAgQG1peGluIGZsZXgtd3JhcCgkd3JhcCkge1xuXHQtd2Via2l0LWZsZXgtd3JhcDogJHdyYXA7XG5cdCAgIC1tb3otZmxleC13cmFwOiAkd3JhcDtcblx0XHQtbXMtZmxleC13cmFwOiAkd3JhcDtcblx0XHRcdGZsZXgtd3JhcDogJHdyYXA7XG4gIH1cbiAgXG4gIC8vIEZsZXggRGlyZWN0aW9uIGFuZCBXcmFwXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIDxmbGV4LWRpcmVjdGlvbj4gfHwgPGZsZXgtd3JhcD5cbiAgQG1peGluIGZsZXgtZmxvdygkZmxvdykge1xuXHQtd2Via2l0LWZsZXgtZmxvdzogJGZsb3c7XG5cdCAgIC1tb3otZmxleC1mbG93OiAkZmxvdztcblx0XHQtbXMtZmxleC1mbG93OiAkZmxvdztcblx0XHRcdGZsZXgtZmxvdzogJGZsb3c7XG4gIH1cbiAgXG4gIC8vIERpc3BsYXkgT3JkZXJcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxpbnRlZ2VyPlxuICBAbWl4aW4gb3JkZXIoJHZhbCkge1xuXHQtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAkdmFsOyAgXG5cdCAgIC1tb3otYm94LW9yZGluYWwtZ3JvdXA6ICR2YWw7ICAgICBcblx0XHRcdCAtbXMtZmxleC1vcmRlcjogJHZhbDsgICAgIFxuXHRcdFx0ICAtd2Via2l0LW9yZGVyOiAkdmFsOyAgXG5cdFx0XHRcdCAgb3JkZXI6ICR2YWw7XG4gIH1cbiAgXG4gIC8vIEZsZXggZ3JvdyBmYWN0b3JcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxudW1iZXI+XG4gIEBtaXhpbiBmbGV4LWdyb3coJGdyb3cpIHtcblx0LXdlYmtpdC1mbGV4LWdyb3c6ICRncm93O1xuXHQgICAtbW96LWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0LW1zLWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0XHRmbGV4LWdyb3c6ICRncm93O1xuICB9XG4gIFxuICAvLyBGbGV4IHNocmlua1xuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbSBzaHJpbmsgZmFjdG9yXG4gIC8vIDxudW1iZXI+IFxuICBAbWl4aW4gZmxleC1zaHJpbmsoJHNocmluaykge1xuXHQtd2Via2l0LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHQgICAtbW96LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHRcdC1tcy1mbGV4LXNocmluazogJHNocmluaztcblx0XHRcdGZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuICB9XG4gIFxuICAvLyBGbGV4IGJhc2lzXG4gIC8vIC0gdGhlIGluaXRpYWwgbWFpbiBzaXplIG9mIHRoZSBmbGV4IGl0ZW1cbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zbml0aWFsIG1haW4gc2l6ZSBvZiB0aGUgZmxleCBpdGVtXG4gIC8vIDx3aWR0aD4gXG4gIEBtaXhpbiBmbGV4LWJhc2lzKCR3aWR0aCkge1xuXHQtd2Via2l0LWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0ICAgLW1vei1mbGV4LWJhc2lzOiAkd2lkdGg7XG5cdFx0LW1zLWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0XHRcdGZsZXgtYmFzaXM6ICR3aWR0aDtcbiAgfVxuICBcbiAgLy8gQXhpcyBBbGlnbm1lbnRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGNvbnRhaW5lcnNcbiAgLy8gZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCBcbiAgQG1peGluIGp1c3RpZnktY29udGVudCgkanVzdGlmeSkge1xuXHQtd2Via2l0LWp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdCAgIC1tb3otanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHQtbXMtanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHRcdGp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdFx0XHQgIC1tcy1mbGV4LXBhY2s6ICRqdXN0aWZ5O1xuICB9XG4gIFxuICAvLyBQYWNraW5nIEZsZXggTGluZXNcbiAgLy8gLSBhcHBsaWVzIHRvOiBtdWx0aS1saW5lIGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLWNvbnRlbnQoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHRcdFx0YWxpZ24tY29udGVudDogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2ggXG4gIEBtaXhpbiBhbGlnbi1pdGVtcygkYWxpZ24pIHtcblx0LXdlYmtpdC1hbGlnbi1pdGVtczogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0LW1zLWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0XHRhbGlnbi1pdGVtczogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gYXV0byB8IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IGJhc2VsaW5lIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLXNlbGYoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tc2VsZjogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLXNlbGY6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tc2VsZjogJGFsaWduO1xuXHRcdFx0YWxpZ24tc2VsZjogJGFsaWduO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5AbWl4aW4gYnV0dG9uLXN0eWxlKCRjLCAkYy1ob3ZlciwgJGJnLCAkYmctaG92ZXIsICRib3JkZXIsICRib3JkZXItaG92ZXIpIHtcblx0Y29sb3I6ICRjO1xuXHRiYWNrZ3JvdW5kOiAkYmc7XG5cdGJvcmRlci1jb2xvcjogJGJvcmRlcjtcbiAgXG5cdHN2ZyB7XG5cdCAgZmlsbDogJGM7XG5cdH1cbiAgXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHQgIGNvbG9yOiAkYy1ob3Zlcjtcblx0ICBiYWNrZ3JvdW5kOiAkYmctaG92ZXI7XG5cdCAgYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWhvdmVyO1xuICBcblx0ICBzdmcge1xuXHRcdGZpbGw6ICRjLWhvdmVyO1xuXHQgIH1cblx0fTtcbn0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgT04tRVZFTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIG9uLWV2ZW50KCRzZWxmOiBmYWxzZSkge1xuXHRAaWYgJHNlbGYge1xuXHQgICYsXG5cdCAgJjpob3Zlcixcblx0ICAmOmFjdGl2ZSxcblx0ICAmOmZvY3VzIHtcblx0XHRAY29udGVudDtcblx0ICB9XG5cdH0gQGVsc2Uge1xuXHQgICY6aG92ZXIsXG5cdCAgJjphY3RpdmUsXG5cdCAgJjpmb2N1cyB7XG5cdFx0QGNvbnRlbnQ7XG5cdCAgfVxuXHR9XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIFdIRU4tSU5TSURFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiB3aGVuLWluc2lkZSgkY29udGV4dCkge1xuXHQjeyRjb250ZXh0fSAmIHtcblx0ICBAY29udGVudDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGNvbnRhaW5lcigkZmx1aWQ6IGZhbHNlKSB7XG5cdHBhZGRpbmctbGVmdDogJGNvbnRhaW5lci1wYWQ7XG5cdHBhZGRpbmctcmlnaHQ6ICRjb250YWluZXItcGFkO1xuXHRtYXJnaW46IDAgYXV0bztcblx0d2lkdGg6IDEwMCU7XG5cdEBpZiBub3QgJGZsdWlkIHtcblx0ICBAZWFjaCAkYnAsICR3aWR0aCBpbiAkY29udGFpbmVyLXdpZHRoIHtcblx0XHRAaW5jbHVkZSBtZWRpYShcIj49I3skYnB9XCIpIHtcblx0XHQgIHdpZHRoOiAkd2lkdGg7XG5cdFx0fTtcblx0ICB9XG5cdH1cbn0gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUE9TSVRJT04gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8vIFBvc2l0aW9uaW5nIGhlbHBlcnNcbkBtaXhpbiBhYnNvbHV0ZSgkYXJnczogJycpIHtcblx0QGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsICRhcmdzKTtcbiAgfVxuICBcbiAgQG1peGluIGZpeGVkKCRhcmdzOiAnJykge1xuXHRAaW5jbHVkZSBwb3NpdGlvbihmaXhlZCwgJGFyZ3MpO1xuICB9XG4gIFxuICBAbWl4aW4gcmVsYXRpdmUoJGFyZ3M6ICcnKSB7XG5cdEBpbmNsdWRlIHBvc2l0aW9uKHJlbGF0aXZlLCAkYXJncyk7XG4gIH1cbiAgXG4gIC8vIFBvc2l0aW9uaW5nXG4gIEBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb24sICRhcmdzKSB7XG5cdEBlYWNoICRvIGluIHRvcCByaWdodCBib3R0b20gbGVmdCB7XG5cdCAgJGk6IGluZGV4KCRhcmdzLCAkbyk7XG5cdCAgQGlmICRpIGFuZCAkaSArIDEgPD0gbGVuZ3RoKCRhcmdzKSBhbmQgdHlwZS1vZihudGgoJGFyZ3MsICRpICsgMSkpID09IG51bWJlciB7XG5cdFx0I3skb306IG50aCgkYXJncywgJGkgKyAxKTtcblx0ICB9XG5cdH1cblx0cG9zaXRpb246ICRwb3NpdGlvbjtcbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gU0laRSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcblx0d2lkdGg6ICR3aWR0aDtcblx0aGVpZ2h0OiAkaGVpZ2h0O1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOIFNFVC1GT05UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNldC1mb250KCAkZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseSAsICR3ZWlnaHQ6IG5vcm1hbCAsICRzdHlsZTogbm9ybWFsLCAkZm9udHNpemU6ICRiYXNlLWZvbnQtc2l6ZSApIHtcblx0Zm9udC1mYW1pbHk6ICRmYW1pbHkgLCAnQXJpYWwnLCAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcblx0Zm9udC1zdHlsZTogJHN0eWxlO1xuXHRmb250LXdlaWdodDogJHdlaWdodDtcblx0Zm9udC1zaXplOiAkZm9udHNpemU7XG5cdFxuICB9XG4gIEBtaXhpbiBzZXQtZm9udDIoICRmYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5ICwgJHdlaWdodDogbm9ybWFsKSB7XG5cdGZvbnQtZmFtaWx5OiAkZmFtaWx5ICwgJ0FyaWFsJywgJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XG5cdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICB9XG4gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIFJFTSBVTklUUyAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gVWx0aW1hdGUgUmVtIFVuaXRzXG5AZnVuY3Rpb24gcGFyc2VJbnQoJG4pIHtcblx0LyogMiAqL1xuXHRAcmV0dXJuICRuIC8gKCRuICogMCArIDEpO1xuICB9XG4gIEBtaXhpbiByZW0oJHByb3BlcnR5LCAkdmFsdWVzKSB7XG5cdCRweDogKCk7IC8qIDMgKi9cblx0JHJlbTogKCk7IC8qIDMgKi9cblx0QGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuXHQgIC8qIDQgKi9cblx0ICBAaWYgJHZhbHVlID09IDAgb3IgJHZhbHVlID09IGF1dG8ge1xuXHRcdC8qIDUgKi9cblx0XHQkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0JHJlbTogYXBwZW5kKCRyZW0sICR2YWx1ZSk7XG5cdCAgfSBAZWxzZSB7XG5cdFx0JHVuaXQ6IHVuaXQoJHZhbHVlKTsgLyogNiAqL1xuXHRcdCR2YWw6IHBhcnNlSW50KCR2YWx1ZSk7IC8qIDYgKi9cblx0XHRAaWYgJHVuaXQgPT0gJ3B4JyB7XG5cdFx0ICAvKiA3ICovXG5cdFx0ICAkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0ICAkcmVtOiBhcHBlbmQoJHJlbSwgKCR2YWwgLyAxMCArIHJlbSkpO1xuXHRcdH1cblx0XHRAaWYgJHVuaXQgPT0gJ3JlbScge1xuXHRcdCAgLyogNyAqL1xuXHRcdCAgJHB4OiBhcHBlbmQoJHB4LCAoJHZhbCAqIDEwICsgcHgpKTtcblx0XHQgICRyZW06IGFwcGVuZCgkcmVtLCAkdmFsdWUpO1xuXHRcdH1cblx0ICB9XG5cdH1cblx0QGlmICRweCA9PSAkcmVtIHtcblx0ICAvKiA4ICovXG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0fSBAZWxzZSB7XG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0ICAjeyRwcm9wZXJ0eX06ICRyZW07IC8qIDkgKi9cblx0fVxuICB9XG5cblxuXG5cbiAgQG1peGluIHgtcmVtICgkcHJvcGVydHksICR2YWx1ZXMsICRtYWluLWZvbnQtc2l6ZTogMTBweCkge1xuXG5cdC8vIEVtcHR5IGxpc3QgZm9yIGFsbCB2YWx1ZXMgaW4gcHhcblx0JHB4LXZhbHVlczogKCk7XG5cdCRyZW0tdmFsdWVzOiAoKTtcblxuXHQvLyBJdGVyYXRlIG92ZXIgZW50cmllc1xuXHRAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG5cblx0XHQvLyBJZiB0aGUgdmFsdWUgaXMgemVybyBvciBvZiBhIHR5cGUgdGhhdCBkb2VzbuKAmXQgbmVlZCBjb252ZXJzaW9uLCByZXR1cm4gdGhlIHZhbHVlIHVudG91Y2hlZFxuXHRcdEBpZiBpbmRleChhdXRvIGluaGVyaXQgaW5pdGlhbCBub25lIDAsICR2YWx1ZSkgb3IgdHlwZS1vZigkdmFsdWUpICE9IFwibnVtYmVyXCIge1xuXHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICR2YWx1ZSk7XG5cdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAkdmFsdWUpO1xuXG5cdFx0Ly8gT3RoZXJ3aXNlIGNvbnZlcnQgaXQgcHJvcGVybHlcblx0XHR9IEBlbHNlIHtcblx0XHRcdCR1bml0OiB1bml0KCR2YWx1ZSk7XG5cblx0XHRcdEBpZiAkdW5pdCA9PSAncHgnIHtcblx0XHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICN7c3RyaXAtdW5pdCgkdmFsdWUpfSAqIDFweCApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAoc3RyaXAtdW5pdCgkdmFsdWUpIC8gc3RyaXAtdW5pdCgkbWFpbi1mb250LXNpemUpICogMXJlbSkpO1xuXHRcdFx0fSBAZWxzZSB7XG5cdFx0XHRcdCRweC12YWx1ZXM6IGFwcGVuZCgkcHgtdmFsdWVzLCAoJHZhbHVlICogJG1haW4tZm9udC1zaXplKSApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAjeyR2YWx1ZX0gKiAxcmVtKTtcblx0XHRcdH1cblxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcHJvcGVydHkgYW5kIGl0cyBsaXN0IG9mIGNvbnZlcnRlZCB2YWx1ZXNcblx0I3skcHJvcGVydHl9OiAjeyRweC12YWx1ZXN9O1xuXHQjeyRwcm9wZXJ0eX06ICN7JHJlbS12YWx1ZXN9O1xufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBCT1JERVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGJvcmRlcigkZGlyZWN0aW9uLCAkd2lkdGgsICRzdHlsZSwgJGNvbG9yKSB7XG5cdGJvcmRlci0jeyRkaXJlY3Rpb259OiAkd2lkdGggJHN0eWxlICRjb2xvcjtcbiAgfVxuICAiLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU5TIFBBRERJTkcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gcGFkZGluZygkdG9wLCAkcmlnaHQsICRib3R0b20sICRsZWZ0KSB7IFxuXHRwYWRkaW5nOiAkdG9wICRyaWdodCAkYm90dG9tICRsZWZ0O1xuICB9XG4gIFxuICBAbWl4aW4gcGFkZGluZy1jb21wb25lbnQoJHNwYWNlOiAkc20pIHtcblx0cGFkZGluZzogJHNwYWNlO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgQk9YLVNIQURPVyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gc2hhZG93LWxvZ28oJHgtYXhpczogMnB4LCAkeS1heGlzOiAycHgsICRibHVyOiAycHgsICRjb2xvcjogIzAyMDIwMikge1xuXHRmaWx0ZXI6ZHJvcC1zaGFkb3coICR4LWF4aXMgJHktYXhpcyAkYmx1ciAkY29sb3IgKTtcblx0LXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggMnB4ICMwMjAyMDIpO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGZhZGUoJHR5cGUpIHtcblx0QGlmICR0eXBlID09ICdoaWRlJyB7XG5cdCAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXHQgIG9wYWNpdHk6IDA7XG5cdCAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAkdHQsIG9wYWNpdHkgJHR0O1xuXHR9XG5cdEBlbHNlIGlmICR0eXBlID09ICdzaG93JyB7XG5cdCAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0ICBvcGFjaXR5OiAxO1xuXHQgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgJHR0LCBvcGFjaXR5ICR0dDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJWxpc3RyZXNldCB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0bGlzdC1zdHlsZTogbm9uZTtcbiAgfSIsIkBjaGFyc2V0ICdVVEYtOCc7XG5cbi8qXG4gICAgR3JpZCBjbGFzcyBuYW1lXG4qL1xuJGltLWdyaWQtY2xhc3M6ICdncmlkJyAhZGVmYXVsdDtcblxuLypcbiAgICBDZWxsIGNsYXNzIG5hbWVcbiovXG4kaW0tZ3JpZC1jZWxsLWNsYXNzOiAnZ3JpZC1jZWxsJyAhZGVmYXVsdDtcblxuLypcbiAgICBHdXR0ZXIgc2l6ZVxuKi9cbiRpbS1ncmlkLWd1dHRlci1zaXplOiAwICFkZWZhdWx0O1xuXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbiRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoOiBmYWxzZSAhZGVmYXVsdDtcblxuLypcbiAgICBHcmlkXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4vKlxuICAgIEdyaWQgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvID4gKiB7XG4gICAgZmxleDogMTtcbiAgICBmbGV4LWdyb3c6IDQ7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsIG1vZGlmaWVyc1xuICovXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYXV0by1zaXplIHtcbiAgICBmbGV4OiBub25lO1xufVxuXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tbGlnaHQge1xuICAgIGZsZXgtZ3JvdzogMjtcbn1cblxuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLWhlYXZ5IHtcbiAgICBmbGV4LWdyb3c6IDg7XG59XG5cbi8qXG4gICAgR3JpZCBndXR0ZXJzXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzIHtcbiAgICBtYXJnaW46ICgtJGltLWdyaWQtZ3V0dGVyLXNpemUpIDAgMCAoLSRpbS1ncmlkLWd1dHRlci1zaXplKTtcbn1cbi4jeyRpbS1ncmlkLWNsYXNzfS0tZ3V0dGVycyA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzID4gKiB7XG4gICAgcGFkZGluZzogJGltLWdyaWQtZ3V0dGVyLXNpemUgMCAwICRpbS1ncmlkLWd1dHRlci1zaXplO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLXRvcCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jbGFzc30tLWJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuLiN7JGltLWdyaWQtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgRmxleGlibGUgY2VsbHNcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLWZsZXgtZ3JpZC1jZWxsID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30sIC8vIE9sZGVyIHNlbGVjdG9yIGtlcHQgZm9yIGJhY2t3YXJkcyBjb21wYXRhYmlsaXR5LlxuLiN7JGltLWdyaWQtY2xhc3N9LS1mbGV4ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi4jeyRpbS1ncmlkLWNsYXNzfS0tanVzdGlmeS1jZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS10b3Age1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYm90dG9tIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuLypcbiAgICBHZW5lcmF0ZSBncmlkIGNsYXNzZXNcbiovXG5AbWl4aW4gaW0tZ3JpZC1jb2x1bW5zKCRjb2x1bW5zLi4uKSB7XG4gICAgQGVhY2ggJGkgaW4gJGNvbHVtbnMge1xuICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tZml0ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGwgPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tI3skbn0tI3skaX0gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfTpub3QoW2NsYXNzKj0nI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tJ10pIHtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSk7IH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tI3skbn0tI3skaX0ge1xuXG4gICAgICAgICAgICAgICAgZmxleDogMCAwICgoJG4gLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9ID4gKiB7XG4gICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoMSAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7IH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBlYWNoICRicmVha3BvaW50IGluICRicmVha3BvaW50cyB7XG4gICAgICAgICRicmVha3BvaW50LW5hbWU6IG50aCgkYnJlYWtwb2ludCwgMSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoI3snPj0nICsgJGJyZWFrcG9pbnQtbmFtZX0pIHtcbiAgICAgICAgICAgIEBlYWNoICRpIGluICRjb2x1bW5zIHtcbiAgICAgICAgICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1maXRcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGxcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLSN7JG59LSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9Om5vdChbY2xhc3MqPScjeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0nXSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICB7IG1heC13aWR0aDogKCgkbiAvICRpKSAqIDEwMCUpOyB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0jeyRufS0jeyRpfVxcQCN7JGJyZWFrcG9pbnQtbmFtZX0ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBAaWYgJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+ICoge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKDEgLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBGTEVYQk9YIENST1NTQlJPV1NFUiAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIE9OLUVWRU5UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gV0hFTi1JTlNJREUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOUyBQT1NJVElPTiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBTSVpFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU4gU0VULUZPTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOUyBSRU0gVU5JVFMgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gQk9SREVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUEFERElORyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIEJPWC1TSEFET1cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLypcbiAgICBHcmlkIGNsYXNzIG5hbWVcbiovXG4vKlxuICAgIENlbGwgY2xhc3MgbmFtZVxuKi9cbi8qXG4gICAgR3V0dGVyIHNpemVcbiovXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbi8qXG4gICAgR3JpZFxuKi9cbi5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsXG4qL1xuLmdyaWQtY2VsbCxcbi5ncmlkLS1hdXRvID4gKiB7XG4gIGZsZXg6IDE7XG4gIGZsZXgtZ3JvdzogNDtcbn1cblxuLypcbiAgICBHcmlkIGNlbGwgbW9kaWZpZXJzXG4gKi9cbi5ncmlkLWNlbGwtLWF1dG8tc2l6ZSB7XG4gIGZsZXg6IG5vbmU7XG59XG5cbi5ncmlkLWNlbGwtLWxpZ2h0IHtcbiAgZmxleC1ncm93OiAyO1xufVxuXG4uZ3JpZC1jZWxsLS1oZWF2eSB7XG4gIGZsZXgtZ3JvdzogODtcbn1cblxuLypcbiAgICBHcmlkIGd1dHRlcnNcbiovXG4uZ3JpZC0tZ3V0dGVycyB7XG4gIG1hcmdpbjogLTMwcHggMCAwIC0zMHB4O1xufVxuXG4uZ3JpZC0tZ3V0dGVycyA+IC5ncmlkLWNlbGwsXG4uZ3JpZC0tYXV0by5ncmlkLS1ndXR0ZXJzID4gKiB7XG4gIHBhZGRpbmc6IDMwcHggMCAwIDMwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uZ3JpZC0tdG9wIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLS1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi5ncmlkLS1jZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKlxuICAgIEZsZXhpYmxlIGNlbGxzXG4qL1xuLmdyaWQtLWZsZXgtZ3JpZC1jZWxsID4gLmdyaWQtY2VsbCxcbi5ncmlkLS1mbGV4ID4gLmdyaWQtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi5ncmlkLS1qdXN0aWZ5LWNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi5ncmlkLWNlbGwtLXRvcCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLWNlbGwtLWJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uZ3JpZC1jZWxsLS1jZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgR2VuZXJhdGUgZ3JpZCBjbGFzc2VzXG4qL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzI4QzY2MDtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcsIHN2ZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYTpob3ZlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzO1xufVxuXG5hZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uanMtYWxsY2xpY2ssIC5qcy10b2dnbGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmh0bWwsIGJvZHkge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJvZHkge1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuLnRpbnl0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4udGlueXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjg4ODg5cmVtO1xufVxuXG4udGlueXRleHQgPiAqIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLnRpbnl0ZXh0ID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi50aW55dGV4dCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi50aW55dGV4dCBoMSwgLnRpbnl0ZXh0IGgyLCAudGlueXRleHQgaDMsIC50aW55dGV4dCBoNCB7XG4gIG1hcmdpbjogMS4yNXJlbSAwIDAuNXJlbTtcbn1cblxuLnRpbnl0ZXh0IHVsIGxpIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG59XG5cbi50aW55dGV4dCBhW2hyZWZePVwibWFpbHRvXCJdIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDEuNzVyZW07XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9zdmcvZW52ZWxvcGUuc3ZnXCIpIGNlbnRlciBsZWZ0IG5vLXJlcGVhdDtcbn1cblxuLnRpbnl0ZXh0IHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG5cbi50aW55dGV4dCBlbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRpbnl0ZXh0IHVsLCAudGlueXRleHQgb2wge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAxLjI1cmVtO1xufVxuXG4udGlueXRleHQgdWwgbGksIC50aW55dGV4dCBvbCBsaSB7XG4gIG1hcmdpbjogMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW55dGV4dCAuZW1iZWRkZWQtZW50aXR5IHtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW46IDFyZW0gMXJlbSAxcmVtIDA7XG4gIH1cbn1cblxuLnRpbnl0ZXh0LS1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44ODg4OXJlbTtcbn1cblxuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xufVxuXG4uY29udGVudC1sZWZ0ID4gKiB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uY29udGVudC1jZW50ZXIgPiAqIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmNvbnRlbnQtcmlnaHQgPiAqIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4ubGVmdC1wYW5lbCB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIHdpZHRoOiA0ODBweDtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sZWZ0LXBhbmVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9XG59XG5cbi5sZWZ0LXBhbmVsX193cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5sZWZ0LXBhbmVsX19ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxlZnQtcGFuZWxfX2JvZHkgcCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAyLjRyZW07XG4gIHBhZGRpbmctYm90dG9tOiAxLjZyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbF9fYm9keSBwIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2hlYWRlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWZsb3c6IGNvbHVtbjtcbiAgLW1vei1mbGV4LWZsb3c6IGNvbHVtbjtcbiAgLW1zLWZsZXgtZmxvdzogY29sdW1uO1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLmxlZnQtcGFuZWxfX2hlYWRlciB7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2hlYWRlcl9fd3JhcHBlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tcy1mbGV4LXBhY2s6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctYm90dG9tOiAxNnJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAubGVmdC1wYW5lbF9faGVhZGVyX193cmFwcGVyIHtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5sZWZ0LXBhbmVsX19mb290ZXIge1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICB9XG59XG5cbi5yaWdodC1wYW5lbCB7XG4gIHdpZHRoOiA0NyU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnJpZ2h0LXBhbmVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4uYnRuIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHdpZHRoOiAxMi42cmVtO1xuICBoZWlnaHQ6IDRyZW07XG4gIHBhZGRpbmc6IDAuNTE4NzVyZW0gMi41cmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xufVxuXG4uYnRuIHN2ZyB7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDJyZW07XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzO1xufVxuXG4uYnRuLS1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZDogIzI4QzY2MDtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS1wcmltYXJ5OmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYnRuLS1wcmltYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzNjY2I2ZjtcbiAgYm94LXNoYWRvdzogMCA1cHggMjBweCAwIHJnYmEoMjksIDI5LCAzMSwgMC4wOSk7XG4gIG9wYWNpdHk6IC45O1xufVxuXG4uYnRuLS1wcmltYXJ5OmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG59XG5cbi5idG4tLWRhcmsge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICB3aWR0aDogMTVyZW07XG4gIGhlaWdodDogNHJlbTtcbn1cblxuLmJ0bi0tZGFyayBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZGFyazpob3ZlciwgLmJ0bi0tZGFyazphY3RpdmUsIC5idG4tLWRhcms6Zm9jdXMge1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xufVxuXG4uYnRuLS1kYXJrOmhvdmVyIHN2ZywgLmJ0bi0tZGFyazphY3RpdmUgc3ZnLCAuYnRuLS1kYXJrOmZvY3VzIHN2ZyB7XG4gIGZpbGw6IGJsYWNrO1xufVxuXG4uYnRuLS1kYXJrOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5idG4tLWdvb2dsZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI0RCMzIzNjtcbiAgYm9yZGVyLWNvbG9yOiAjZGU0NjQ5O1xuICB3aWR0aDogMzI0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0RCMzIzNjtcbn1cblxuLmJ0bi0tZ29vZ2xlIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIsIC5idG4tLWdvb2dsZTphY3RpdmUsIC5idG4tLWdvb2dsZTpmb2N1cyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI2RlNDY0OTtcbiAgYm9yZGVyLWNvbG9yOiAjZGU0NjQ5O1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIgc3ZnLCAuYnRuLS1nb29nbGU6YWN0aXZlIHN2ZywgLmJ0bi0tZ29vZ2xlOmZvY3VzIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI0RCMzIzNjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuYnRuLS1nb29nbGUge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxufVxuXG4uYnRuLS1mYWNlYm9vayB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogIzNCNTk5ODtcbiAgYm9yZGVyLWNvbG9yOiAjNGU2OWEyO1xuICB3aWR0aDogNjBweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzNCNTk5ODtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbn1cblxuLmJ0bi0tZmFjZWJvb2sgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWZhY2Vib29rOmhvdmVyLCAuYnRuLS1mYWNlYm9vazphY3RpdmUsIC5idG4tLWZhY2Vib29rOmZvY3VzIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjNGU2OWEyO1xuICBib3JkZXItY29sb3I6ICM0ZTY5YTI7XG59XG5cbi5idG4tLWZhY2Vib29rOmhvdmVyIHN2ZywgLmJ0bi0tZmFjZWJvb2s6YWN0aXZlIHN2ZywgLmJ0bi0tZmFjZWJvb2s6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWZhY2Vib29rOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMzQjU5OTg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYnRuLS1ncmV5IHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjNzY4MDkzO1xuICBib3JkZXItY29sb3I6ICM3NjgwOTM7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzc2ODA5Mztcbn1cblxuLmJ0bi0tZ3JleSBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZ3JleTpob3ZlciwgLmJ0bi0tZ3JleTphY3RpdmUsIC5idG4tLWdyZXk6Zm9jdXMge1xuICBjb2xvcjogIzc2ODA5MztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzc2ODA5Mztcbn1cblxuLmJ0bi0tZ3JleTpob3ZlciBzdmcsIC5idG4tLWdyZXk6YWN0aXZlIHN2ZywgLmJ0bi0tZ3JleTpmb2N1cyBzdmcge1xuICBmaWxsOiAjNzY4MDkzO1xufVxuXG4uYnRuLS1ncmV5OmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICM3NjgwOTM7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmJ0biB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTVBPTkVOVCB0b1RPUCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLnRvVG9wIHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMy43MnJlbTtcbiAgdG9wOiA4NiU7XG4gIHJpZ2h0OiAycmVtO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk5O1xuICBiYWNrZ3JvdW5kOiAjNGI0NjNlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHBhZGRpbmc6IDEuMnJlbSAxcmVtO1xuICBvcGFjaXR5OiAwLjY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4udG9Ub3A6aG92ZXIge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgb3BhY2l0eTogMTtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5pbnB1dC1ub3JtYWwge1xuICBiYWNrZ3JvdW5kOiAjRjNGM0Y0O1xuICBoZWlnaHQ6IDRyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4udWstaW5wdXQ6Zm9jdXMsIC51ay1zZWxlY3Q6Zm9jdXMsIC51ay10ZXh0YXJlYTpmb2N1cyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyOEM2NjA7XG59XG5cbi5saW5rLXRleHQge1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzI4QzY2MDtcbn1cblxuLmxpbmstdGV4dDpob3ZlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzO1xuICBjb2xvcjogIzNjY2I2Zjtcbn1cblxuLmxvZ2luLWZvcm0ge1xuICB3aWR0aDogNDAwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyLjRyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW4tZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmxvZ2luLWZvcm0gbGFiZWwge1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFyZW0gMDtcbn1cblxuLmxvZ2luLWZvcm1fX3Bhc3N3b3JkIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1zLWZsZXgtcGFjazogc3BhY2UtYmV0d2VlbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubG9naW4tZm9ybSBidXR0b24ge1xuICB3aWR0aDogMTIuNnJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbi1mb3JtIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmxvZ2luIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1vei1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbiB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmxvZ2luIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbi5sb2dpbl9fd3JhcHBlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbW96LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlciB7XG4gICAganVzdGlmeS1jb250ZW50OiB1bnNldDtcbiAgICBoZWlnaHQ6IHVuc2V0O1xuICB9XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIHtcbiAgd2lkdGg6IDQwMHB4O1xuICBwYWRkaW5nOiAxLjRyZW0gMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIHtcbiAgICBwYWRkaW5nOiB1bnNldDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciAuYnVzaW5lc3Mge1xuICB0b3A6IDRyZW07XG4gIHJpZ2h0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMi40cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIC5idXNpbmVzcyB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcG9zaXRpb246IHVuc2V0O1xuICB9XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIGgxIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAzLjJyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIC5zb2NpYWwtc2lnbmluIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLW1zLWZsZXgtcGFjazogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZzogNHJlbSAwIDAgMDtcbn1cblxuLmxvZ2luX193cmFwcGVyX19oZWFkZXIgLnVrLWRpdmlkZXItaWNvbiB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5wYWdlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIiwiLy8gaW5jbHVkZS1tZWRpYSBicmVha3BvaW50c1xuJGJyZWFrcG9pbnRzOiAoXG4gIHhzOiAzMjBweCxcbiAgc206IDc2OHB4LFxuICBtZDogOTkycHgsXG4gIGxnOiAxMjAwcHgsXG4gIHhsOiAxNDQwcHgsXG4pICFkZWZhdWx0O1xuXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSknXG4pICFkZWZhdWx0OyBcblxuLy8gU3BhY2luZyB1bml0XG4kc3U6IDRweCAhZGVmYXVsdDtcblxuLy8gR2xvYmFsIFVuaXRcbiR4czogMXJlbTtcbiRzbTogMS41cmVtO1xuJG1kOiAycmVtO1xuJGxnOiAzcmVtO1xuJHhsOiA0cmVtO1xuXG5cblxuLy8gTGluZSBIZWlnaHRcbi8vIGZhbGxiYWNrIGZvciBvbGQgYnJvd3NlciA9PiAkbGgtYmFzZTogKDEgKiAxMCkgKyBweDsgXG4kbGgtYmFzZTogMXJlbTtcbiRsaC14czogMS44cmVtO1xuJGxoLXM6IDJyZW07XG4kbGgtc206IDIuNHJlbTtcbiRsaC1zbDogMi42cmVtO1xuJGxoLW1kIDogMi44cmVtO1xuJGxoLWxnOiAzcmVtO1xuJGxoLXhsOiAzLjRyZW07XG4kbGgteHhsOiA0LjlyZW07XG5cbi8vIFBhZGRpbmcgVW5pdFxuJHB0OiAycmVtO1xuJHByOiAycmVtO1xuJHBiOiAycmVtO1xuJHBsOiAycmVtO1xuXG4vLyBNYXJnaW4gVW5pdFxuJG10OiAycmVtO1xuJG1yOiAycmVtO1xuJG1iOiAycmVtO1xuJG1sOiAycmVtO1xuXG4vLyBMZXR0ZXIgU3BhY2luZ1xuJGxzLXh4czogMC42OTYyNThweDtcbiRscy14czogMC44ODEyMDFweDtcbiRscy1zbTogMC44cHg7XG4kbHM6IDFweDtcbiRscy1tZDogNnB4O1xuXG4vLyBjb250YWluZXIncyBzZXR0aW5nc1xuJGNvbnRhaW5lci13aWR0aDogKFxuICBzbTogNzUwcHgsXG4gIG1kOiA5NzBweCxcbiAgbGc6IDExNzBweCxcbiAgLy8geGw6IDE1NjBweCxcbikgIWRlZmF1bHQ7XG4kY29udGFpbmVyLXBhZDogMTVweCAhZGVmYXVsdDtcblxuLy8gR3JpZCBjbGFzcyBuYW1lXG4kaW0tZ3JpZC1jbGFzczogJ2dyaWQnO1xuLy8gQ2VsbCBjbGFzcyBuYW1lXG4kaW0tZ3JpZC1jZWxsLWNsYXNzOiAnZ3JpZC1jZWxsJztcbi8vIFNldHRpbmcgZ3V0dGVyc1xuJGltLWdyaWQtZ3V0dGVyLXNpemU6IDMwcHg7XG4vLyBPcHRpb25hbGx5IGluY2x1ZGUgbWF4LXdpZHRoIHRvIGZpeCBJRSBpc3N1ZXNcbiRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoOiB0cnVlO1xuXG4vLyBjb2xvcnNcbiR0ZXh0LWNvbG9yOiBibGFjaztcblxuJGNvbG9yczogKFxuICBwcmltYXJ5OiAoXG4gICAgMDogIzI4QzY2MCxcbiAgICAxOiAjM2NjYjZmLCAvL2hvdmVyXG4gICksXG4gIGJnOiAoXG4gICAgMDogI0YzRjNGNCxcbiAgICAxOiAjMjhDNjYwLFxuICAgIDI6IHJnYigxOSwgMTY3LCA3MSksXG4gICAgMzogI0RCMzIzNiwgLy9Hb29nbGVcbiAgICA0OiAjM0I1OTk4LCAvL0ZhY2Vib29rXG4gICAgNTogIzc2ODA5MyxcbiAgICA2OiAjZGU0NjQ5LCAvL0dvb2dsZSBob3ZlclxuICAgIDc6ICM0ZTY5YTIsIC8vRmFjZWJvb2sgaG92ZXJcbiAgKSxcbiAgbW9kYWw6IChcbiAgICAwOiAjZmZmZmZmZjBcbiAgKVxuKTtcblxuLy8gTWFpbiBDb2xvcnNcbiRjb2xvci13ZWVkbHk6ICAgICMyOEM2NjAgIWRlZmF1bHQ7IC8vIHdlZWRseSBncmVlblxuJGNvbG9yLWluZm86ICAgICAgIzIwODNGRSAhZGVmYXVsdDsgLy8gYmx1ZVxuJGNvbG9yLXN1Y2Nlc3M6ICAgIzJGQ0E3NCAhZGVmYXVsdDsgLy8gZ3JlZW5cbiRjb2xvci13YXJuaW5nOiAgICNmNWI4NDggIWRlZmF1bHQ7IC8vIHllbGxvd1xuJGNvbG9yLWRhbmdlcjogICAgI0VENEQ0RCAhZGVmYXVsdDsgLy8gcmVkXG4kY29sb3ItZmFuY3k6IFx0ICAjNkYzNUYwICFkZWZhdWx0OyAvLyBwdXJwbGVcbiRjb2xvci1wcmltYXJ5OiAgICMyNTI1MjkgIWRlZmF1bHQ7IC8vIGJsYWNrXG4kY29sb3Itc2Vjb25kYXJ5OiAjNzY4MDkzICFkZWZhdWx0OyAvLyBncmV5XG5cbi8vIEV4dHJhIENvbG9yc1xuJGNvbG9yLXBpbms6ICNGNDRDNjcgIWRlZmF1bHQ7IC8vIHBpbmtcblxuLy8gTGlnaHQgQ29sb3JzXG4kY29sb3ItaW5mby1saWdodDogICAgICAjRTBFQkZGICFkZWZhdWx0OyAvLyBibHVlXG4kY29sb3Itc3VjY2Vzcy1saWdodDogICAjREFGNEU2ICFkZWZhdWx0OyAvLyBncmVlblxuJGNvbG9yLXdhcm5pbmctbGlnaHQ6ICAgI0ZGRUNEQSAhZGVmYXVsdDsgLy8geWVsbG93XG4kY29sb3ItZGFuZ2VyLWxpZ2h0OiAgICAjRkZFMkUyICFkZWZhdWx0OyAvLyByZWRcbiRjb2xvci1wcmltYXJ5LWxpZ2h0OiAgICNFOUVDRjIgIWRlZmF1bHQ7IC8vIGJsYWNrXG4kY29sb3ItZmFuY3ktbGlnaHQ6ICAgICAjRTlFMEZGICFkZWZhdWx0OyAvLyBwdXJwbGVcblxuLy8gQmFzaWMgQ29sb3JzXG4kY29sb3Itc2t5LWxpZ2h0OiAjRjRGNkY5ICFkZWZhdWx0O1xuJGNvbG9yLXNreTogICAgICAgI0VDRURGMiAhZGVmYXVsdDtcbiRjb2xvci1za3ktZGFyazogICNFMUUyRTggIWRlZmF1bHQ7XG5cbiRjb2xvci1pbmstbGlnaHQ6ICM5OUE1QkQgIWRlZmF1bHQ7XG4kY29sb3ItaW5rOiAgICAgICAjNzY4MDkzICFkZWZhdWx0O1xuJGNvbG9yLWluay1kYXJrOiAgIzI1MjUyOSAhZGVmYXVsdDtcblxuJGNvbG9yLXdoaXRlOiAjZmZmICFkZWZhdWx0O1xuXG4vLyBNYWluIEdyYWRpZW50c1xuJGdyYWRpZW50LWluZm86ICAgICAgIzFEN0JGMCwgIzIwODNGRSAhZGVmYXVsdDtcbiRncmFkaWVudC1zdWNjZXNzOiAgICMyOEM3NkYsICMyQ0NGNzUgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtd2FybmluZzogICAjRjVBMTU1LCAjRjVCODU1ICFkZWZhdWx0O1xuJGdyYWRpZW50LWRhbmdlcjogICAgI0VFNDM0MywgI0VDNUY1RiAhZGVmYXVsdDtcbiRncmFkaWVudC1wcmltYXJ5OiAgICMyNTI1MjksICM0NDQ0NDkgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtc2Vjb25kYXJ5OiAjNzY4MDkzLCAjOTY5RkIwICFkZWZhdWx0O1xuJGdyYWRpZW50LXdlZWRseTogICAgIzI4QzY2MCwgIzIwQkU1OCAhZGVmYXVsdDtcblxuLy8gRXh0cmEgR3JhZGllbnRzXG4kZ3JhZGllbnQtZmFuY3k6ICM0RjVFRjUsICM2QTc3RkY7IC8vIHB1cnBsZVxuXG5cbi8vIEJyYW5kIENvbG9yXG4vL1xuLy8gVGhlIGJyYW5kIGNvbG9yIG9mIHRoZSB3aG9sZSBraXQsIHdpbGwgYWZmZWN0IG1vc3QgVUkgY29tcG9uZW50cyBsaWtlIHRvZ2dsZXMsXG4vLyBidXR0b25zIGFuZCBzd2l0Y2hzLlxuLy9cblxuJGJyYW5kLWNvbG9yOiAkY29sb3Itd2VlZGx5ICFkZWZhdWx0O1xuJGJvZHktYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXNreS1saWdodCAhZGVmYXVsdDtcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZSAhZGVmYXVsdDtcblxuXG4vLyBmb250c1xuJGJhc2UtZm9udC1mYW1pbHk6ICdTYXJhYnVuJywgc2Fucy1zZXJpZjtcblxuJGJhc2UtZm9udC1zaXplOiAxLjZyZW0gIWRlZmF1bHQ7XG4kYmFzZS1saW5lLWhlaWdodDogMi40cmVtICFkZWZhdWx0O1xuJHNtYWxsLWZvbnQtc2l6ZTogMS40cmVtICFkZWZhdWx0O1xuXG4vLyBGb250IFdlaWdodHNcbiRmb250LXdlaWdodC1saWdodDogMzAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LXNlbWlib2xkOiA1MDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtYm9sZDogNjAwICFkZWZhdWx0O1xuXG4vLyBUZXh0XG4kdGV4dC1zbWFsbC1mb250LXNpemU6IHJlbSgxMnB4KSAhZGVmYXVsdDtcbiR0ZXh0LWZvbnQtc2l6ZTogcmVtKDE0cHgpICFkZWZhdWx0O1xuJHRleHQtbGFyZ2UtZm9udC1zaXplOiByZW0oMTZweCkgIWRlZmF1bHQ7XG5cbiR0ZXh0LWNvbG9yOiAkY29sb3ItaW5rICFkZWZhdWx0O1xuJHRleHQtaW52ZXJzZS1jb2xvcjogJGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJHRleHQtc3Ryb25nLWNvbG9yOiAkY29sb3ItaW5rICFkZWZhdWx0O1xuXG4vLyBIZWFkaW5nc1xuJGhlYWRpbmctY29sb3I6ICRjb2xvci1pbmstZGFyaztcbiRoZWFkaW5nLW1hcmdpbjogMDtcbiRoZWFkaW5nLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQ7XG5cbiRoMS1mb250LXNpemU6IHJlbSgzNnB4KSAhZGVmYXVsdDtcbiRoMi1mb250LXNpemU6IHJlbSgyOHB4KSAhZGVmYXVsdDtcbiRoMy1mb250LXNpemU6IHJlbSgyNHB4KSAhZGVmYXVsdDtcbiRoNC1mb250LXNpemU6IHJlbSgyMHB4KSAhZGVmYXVsdDtcbiRoNS1mb250LXNpemU6IHJlbSgxOHB4KSAhZGVmYXVsdDtcbiRoNi1mb250LXNpemU6IHJlbSgxNnB4KSAhZGVmYXVsdDtcblxuLy8gTGlua3NcbiRsaW5rLWNvbG9yOiAkY29sb3Itd2VlZGx5O1xuJGxpbmstaG92ZXItY29sb3I6ICRjb2xvci13ZWVkbHk7XG5cbi8vIFRyYW5zaXRpb25zXG4kdHQ6IDAuNHM7IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIiosICo6OmJlZm9yZSwgKjo6YWZ0ZXJ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAxKTtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcsIHN2Z3tcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogZ2V0LWNvbG9yKHByaW1hcnksIDIpO1xuICAmOmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgIGNvbG9yOiBnZXQtY29sb3IocHJpbWFyeSwgMik7XG4gIH1cbn1cblxuYWRkcmVzcyB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbnVsLCBvbCwgcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmpzLWFsbGNsaWNrLCAuanMtdG9nZ2xlIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSIsImh0bWwsIGJvZHkge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJvZHkge1xuICBjb2xvcjogJHRleHQtY29sb3I7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuLnRpbnl0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiBtcygwKTtcbiAgJi0tc21hbGwge1xuICAgIGZvbnQtc2l6ZTogbXMoLTEpO1xuICB9XG5cbiAgPioge1xuICAgIG1hcmdpbi1ib3R0b206IHJlbSg0KiRzdSk7XG4gIH1cblxuICA+KjpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuXG4gID4qOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cblxuICBoMSwgaDIsIGgzLCBoNCB7XG4gICAgbWFyZ2luOiByZW0oMjBweCAwIDhweCk7XG4gIH1cblxuICB1bCBsaSB7XG4gICAgQGluY2x1ZGUgc2V0LWZvbnQ7XG4gIH1cblxuICBhIHtcbiAgICAmW2hyZWZePVwibWFpbHRvXCJdIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBAaW5jbHVkZSByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmctbGVmdDogcmVtKDI4cHgpO1xuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWFnZXMvc3ZnL2VudmVsb3BlLnN2ZycpIGNlbnRlciBsZWZ0IG5vLXJlcGVhdDtcbiAgICB9XG4gIH1cblxuICBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIH1cblxuICBlbSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG5cbiAgdWwsIG9sIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IHJlbSg1KiRzdSk7XG4gICAgbGkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5lbWJlZGRlZC1lbnRpdHkge1xuICAgIEBpbmNsdWRlIG1lZGlhKCc+PXNtJykge1xuICAgICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbjogMXJlbSAxcmVtIDFyZW0gMDtcbiAgICB9XG4gIH1cblxuICAmLS1zbWFsbCB7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiBtcy1mdW5jdGlvbigkdjogMCwgJGJhc2U6IGZhbHNlLCAkcmF0aW86IGZhbHNlLCAkdGhyZWFkOiBmYWxzZSwgJHNldHRpbmdzOiAkbW9kdWxhcnNjYWxlKSB7XG5cbiAgLy8gUGFyc2Ugc2V0dGluZ3NcbiAgJG1zLXNldHRpbmdzOiBtcy1zZXR0aW5ncygkYmFzZSwkcmF0aW8sJHRocmVhZCwkc2V0dGluZ3MpO1xuICAkYmFzZTogbnRoKCRtcy1zZXR0aW5ncywgMSk7XG4gICRyYXRpbzogbnRoKCRtcy1zZXR0aW5ncywgMik7XG5cbiAgLy8gUmVuZGVyIHRhcmdldCB2YWx1ZXMgZnJvbSBzZXR0aW5ncy5cbiAgQGlmIHVuaXQoJHJhdGlvKSAhPSAnJyB7XG4gICAgJHJhdGlvOiBtcy10YXJnZXQoJHJhdGlvLCRiYXNlKVxuICB9XG5cbiAgLy8gRmFzdCBjYWxjIGlmIG5vdCBtdWx0aSBzdHJhbmRlZFxuICBAaWYobGVuZ3RoKCRiYXNlKSA9PSAxKSB7XG4gICAgQHJldHVybiBtcy1wb3coJHJhdGlvLCAkdikgKiAkYmFzZTtcbiAgfVxuXG4gIC8vIENyZWF0ZSBuZXcgYmFzZSBhcnJheVxuICAkbXMtYmFzZXM6IG50aCgkYmFzZSwxKTtcblxuICAvLyBOb3JtYWxpemUgYmFzZSB2YWx1ZXNcbiAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCBsZW5ndGgoJGJhc2UpIHtcbiAgICAvLyBpbml0aWFsIGJhc2UgdmFsdWVcbiAgICAkbXMtYmFzZTogbnRoKCRiYXNlLCRpKTtcbiAgICAvLyBJZiB0aGUgYmFzZSBpcyBiaWdnZXIgdGhhbiB0aGUgbWFpbiBiYXNlXG4gICAgQGlmKCRtcy1iYXNlID4gbnRoKCRiYXNlLDEpKSB7XG4gICAgICAvLyBkaXZpZGUgdGhlIHZhbHVlIHVudGlsIGl0IGFsaWducyB3aXRoIG1haW4gYmFzZS5cbiAgICAgIEB3aGlsZSgkbXMtYmFzZSA+IG50aCgkYmFzZSwxKSkge1xuICAgICAgICAkbXMtYmFzZTogJG1zLWJhc2UgLyAkcmF0aW87XG4gICAgICB9XG4gICAgICAkbXMtYmFzZTogJG1zLWJhc2UgKiAkcmF0aW87XG4gICAgfVxuICAgIC8vIElmIHRoZSBiYXNlIGlzIHNtYWxsZXIgdGhhbiB0aGUgbWFpbiBiYXNlLlxuICAgIEBlbHNlIGlmICgkbXMtYmFzZSA8IG50aCgkYmFzZSwxKSkge1xuICAgICAgLy8gcHVtcCB1cCB0aGUgdmFsdWUgdW50aWwgaXQgYWxpZ25zIHdpdGggbWFpbiBiYXNlLlxuICAgICAgQHdoaWxlICRtcy1iYXNlIDwgbnRoKCRiYXNlLDEpIHtcbiAgICAgICAgJG1zLWJhc2U6ICRtcy1iYXNlICogJHJhdGlvO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBQdXNoIGludG8gbmV3IGFycmF5XG4gICAgJG1zLWJhc2VzOiBhcHBlbmQoJG1zLWJhc2VzLCRtcy1iYXNlKTtcbiAgfVxuXG4gIC8vIFNvcnQgYXJyYXkgZnJvbSBzbWFsbGVzdCB0byBsYXJnZXN0LlxuICAkbXMtYmFzZXM6IG1zLXNvcnQoJG1zLWJhc2VzKTtcblxuICAvLyBGaW5kIHN0ZXAgdG8gdXNlIGluIGNhbGN1bGF0aW9uXG4gICR2dGVwOiBmbG9vcigkdiAvIGxlbmd0aCgkbXMtYmFzZXMpKTtcbiAgLy8gRmluZCBiYXNlIHRvIHVzZSBpbiBjYWxjdWxhdGlvblxuICAkbXMtYmFzZTogcm91bmQoKCR2IC8gbGVuZ3RoKCRtcy1iYXNlcykgLSAkdnRlcCkgKiBsZW5ndGgoJG1zLWJhc2VzKSkgKyAxO1xuXG4gIEByZXR1cm4gbXMtcG93KCRyYXRpbywgJHZ0ZXApICogbnRoKCRtcy1iYXNlcywkbXMtYmFzZSk7XG59IiwiJHJlbS1iYXNlbGluZTogMTZweCAhZGVmYXVsdDtcbiRyZW0tZmFsbGJhY2s6IGZhbHNlICFkZWZhdWx0O1xuJHJlbS1weC1vbmx5OiBmYWxzZSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIHJlbS1zZXBhcmF0b3IoJGxpc3QsICRzZXBhcmF0b3I6IGZhbHNlKSB7XG4gIEBpZiAkc2VwYXJhdG9yID09IFwiY29tbWFcIiBvciAkc2VwYXJhdG9yID09IFwic3BhY2VcIiB7XG4gICAgQHJldHVybiBhcHBlbmQoJGxpc3QsIG51bGwsICRzZXBhcmF0b3IpO1xuICB9IFxuICBcbiAgQGlmIGZ1bmN0aW9uLWV4aXN0cyhcImxpc3Qtc2VwYXJhdG9yXCIpID09IHRydWUge1xuICAgIEByZXR1cm4gbGlzdC1zZXBhcmF0b3IoJGxpc3QpO1xuICB9XG5cbiAgLy8gbGlzdC1zZXBhcmF0b3IgcG9seWZpbGwgYnkgSHVnbyBHaXJhdWRlbCAoaHR0cHM6Ly9zYXNzLWNvbXBhdGliaWxpdHkuZ2l0aHViLmlvLyNsaXN0X3NlcGFyYXRvcl9mdW5jdGlvbilcbiAgJHRlc3QtbGlzdDogKCk7XG4gIEBlYWNoICRpdGVtIGluICRsaXN0IHtcbiAgICAkdGVzdC1saXN0OiBhcHBlbmQoJHRlc3QtbGlzdCwgJGl0ZW0sIHNwYWNlKTtcbiAgfVxuXG4gIEByZXR1cm4gaWYoJHRlc3QtbGlzdCA9PSAkbGlzdCwgc3BhY2UsIGNvbW1hKTtcbn1cblxuQG1peGluIHJlbS1iYXNlbGluZSgkem9vbTogMTAwJSkge1xuICBmb250LXNpemU6ICR6b29tIC8gMTZweCAqICRyZW0tYmFzZWxpbmU7XG59XG5cbkBmdW5jdGlvbiByZW0tY29udmVydCgkdG8sICR2YWx1ZXMuLi4pIHtcbiAgJHJlc3VsdDogKCk7XG4gICRzZXBhcmF0b3I6IHJlbS1zZXBhcmF0b3IoJHZhbHVlcyk7XG4gIFxuICBAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG4gICAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcIm51bWJlclwiIGFuZCB1bml0KCR2YWx1ZSkgPT0gXCJyZW1cIiBhbmQgJHRvID09IFwicHhcIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlIC8gMXJlbSAqICRyZW0tYmFzZWxpbmUsICRzZXBhcmF0b3IpO1xuICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpID09IFwibnVtYmVyXCIgYW5kIHVuaXQoJHZhbHVlKSA9PSBcInB4XCIgYW5kICR0byA9PSBcInJlbVwiIHtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUgLyAkcmVtLWJhc2VsaW5lICogMXJlbSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gXCJsaXN0XCIge1xuICAgICAgJHZhbHVlLXNlcGFyYXRvcjogcmVtLXNlcGFyYXRvcigkdmFsdWUpO1xuICAgICAgJHZhbHVlOiByZW0tY29udmVydCgkdG8sICR2YWx1ZS4uLik7XG4gICAgICAkdmFsdWU6IHJlbS1zZXBhcmF0b3IoJHZhbHVlLCAkdmFsdWUtc2VwYXJhdG9yKTtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUsICRzZXBhcmF0b3IpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSwgJHNlcGFyYXRvcik7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZihsZW5ndGgoJHJlc3VsdCkgPT0gMSwgbnRoKCRyZXN1bHQsIDEpLCAkcmVzdWx0KTtcbn1cblxuQGZ1bmN0aW9uIHJlbSgkdmFsdWVzLi4uKSB7XG4gIEBpZiAkcmVtLXB4LW9ubHkge1xuICAgIEByZXR1cm4gcmVtLWNvbnZlcnQocHgsICR2YWx1ZXMuLi4pO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuIHJlbS1jb252ZXJ0KHJlbSwgJHZhbHVlcy4uLik7XG4gIH1cbn1cblxuQG1peGluIHJlbSgkcHJvcGVydGllcywgJHZhbHVlcy4uLikge1xuICBAaWYgdHlwZS1vZigkcHJvcGVydGllcykgPT0gXCJtYXBcIiB7XG4gICAgQGVhY2ggJHByb3BlcnR5IGluIG1hcC1rZXlzKCRwcm9wZXJ0aWVzKSB7XG4gICAgICBAaW5jbHVkZSByZW0oJHByb3BlcnR5LCBtYXAtZ2V0KCRwcm9wZXJ0aWVzLCAkcHJvcGVydHkpKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlYWNoICRwcm9wZXJ0eSBpbiAkcHJvcGVydGllcyB7XG4gICAgICBAaWYgJHJlbS1mYWxsYmFjayBvciAkcmVtLXB4LW9ubHkge1xuICAgICAgICAjeyRwcm9wZXJ0eX06IHJlbS1jb252ZXJ0KHB4LCAkdmFsdWVzLi4uKTtcbiAgICAgIH1cbiAgICAgIEBpZiBub3QgJHJlbS1weC1vbmx5IHtcbiAgICAgICAgI3skcHJvcGVydHl9OiByZW0tY29udmVydChyZW0sICR2YWx1ZXMuLi4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLyAgICAgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cbi8vICAgIChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcbi8vICAgICBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuLy8gICAgfCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcbi8vICAgIHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcbi8vICAgIHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG4vL1xuLy8gICAgICBTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3Ncbi8vICAgICAgICAgICAgICAgICAgICAgICAgdjEuNC45XG4vL1xuLy8gICAgICAgICAgICAgICAgaHR0cDovL2luY2x1ZGUtbWVkaWEuY29tXG4vL1xuLy8gICAgICAgICBBdXRob3JzOiBFZHVhcmRvIEJvdWNhcyAoQGVkdWFyZG9ib3VjYXMpXG4vLyAgICAgICAgICAgICAgICAgIEh1Z28gR2lyYXVkZWwgKEBodWdvZ2lyYXVkZWwpXG4vL1xuLy8gICAgICBUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZVxuXG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIGxpYnJhcnkgcHVibGljIGNvbmZpZ3VyYXRpb25cbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuLy8vICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG4vLy9cbiRicmVha3BvaW50czogKFxuICAncGhvbmUnOiAzMjBweCxcbiAgJ3RhYmxldCc6IDc2OHB4LFxuICAnZGVza3RvcCc6IDEwMjRweFxuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4vLy8gICAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4vLy8gICk7XG4vLy9cbiRtZWRpYS1leHByZXNzaW9uczogKFxuICAnc2NyZWVuJzogJ3NjcmVlbicsXG4gICdwcmludCc6ICdwcmludCcsXG4gICdoYW5kaGVsZCc6ICdoYW5kaGVsZCcsXG4gICdsYW5kc2NhcGUnOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJyxcbiAgJ3BvcnRyYWl0JzogJyhvcmllbnRhdGlvbjogcG9ydHJhaXQpJyxcbiAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSksIChtaW4tcmVzb2x1dGlvbjogM2RwcHgpJ1xuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MTI4cHgnKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIwZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIuMHJlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuLy8vXG4kdW5pdC1pbnRlcnZhbHM6IChcbiAgJ3B4JzogMSxcbiAgJ2VtJzogMC4wMSxcbiAgJ3JlbSc6IDAuMSxcbiAgJyc6IDBcbikgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIERlZmluZXMgd2hldGhlciBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGF2YWlsYWJsZSwgdXNlZnVsIGZvciBjcmVhdGluZyBzZXBhcmF0ZSBzdHlsZXNoZWV0c1xuLy8vIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgbWVkaWEgcXVlcmllcy5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBEaXNhYmxlcyBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuJGltLW1lZGlhLXN1cHBvcnQ6IHRydWUgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggYnJlYWtwb2ludCB0byBlbXVsYXRlIHdoZW4gc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBkaXNhYmxlZC4gTWVkaWEgcXVlcmllcyB0aGF0IHN0YXJ0IGF0IG9yXG4vLy8gaW50ZXJjZXB0IHRoZSBicmVha3BvaW50IHdpbGwgYmUgZGlzcGxheWVkLCBhbnkgb3RoZXJzIHdpbGwgYmUgaWdub3JlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBkb2VzIG5vdCBpbnRlcmNlcHQgdGhlIGRlc2t0b3AgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAndGFibGV0Jztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49ZGVza3RvcCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCcgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggbWVkaWEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgaW4gYW4gZXhwcmVzc2lvbiBmb3IgaXQgdG8gYmUgdXNlZCB3aGVuIG1lZGlhIHF1ZXJpZXNcbi8vLyBhcmUgbm90IHN1cHBvcnRlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGFuZCBjb250YWlucyBvbmx5IGFjY2VwdGVkIG1lZGlhIGV4cHJlc3Npb25zXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAnc2NyZWVuJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAgLmZvbyB7XG4vLy8gICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYnV0IGNvbnRhaW5zIGEgbWVkaWEgZXhwcmVzc2lvbiB0aGF0IGlzIG5vdCBhY2NlcHRlZFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3JldGluYTJ4Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicsICdwb3J0cmFpdCcsICdsYW5kc2NhcGUnKSAhZGVmYXVsdDtcblxuLy8vL1xuLy8vIENyb3NzLWVuZ2luZSBsb2dnaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIExvZyBhIG1lc3NhZ2UgZWl0aGVyIHdpdGggYEBlcnJvcmAgaWYgc3VwcG9ydGVkXG4vLy8gZWxzZSB3aXRoIGBAd2FybmAsIHVzaW5nIGBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKWBcbi8vLyB0byBkZXRlY3Qgc3VwcG9ydC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBmdW5jdGlvbiBpbS1sb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpIHtcbiAgICBAZXJyb3IgJG1lc3NhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICRtZXNzYWdlO1xuICAgICRfOiBub29wKCk7XG4gIH1cblxuICBAcmV0dXJuICRtZXNzYWdlO1xufVxuXG5cbi8vL1xuLy8vIFdyYXBwZXIgbWl4aW4gZm9yIHRoZSBsb2cgZnVuY3Rpb24gc28gaXQgY2FuIGJlIHVzZWQgd2l0aCBhIG1vcmUgZnJpZW5kbHlcbi8vLyBBUEkgdGhhbiBgQGlmIGltLWxvZygnLi4nKSB7fWAgb3IgYCRfOiBpbS1sb2coJy4uJylgLiBCYXNpY2FsbHksIHVzZSB0aGUgZnVuY3Rpb25cbi8vLyB3aXRoaW4gZnVuY3Rpb25zIGJlY2F1c2UgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbiBhIGZ1bmN0aW9uXG4vLy8gYW5kIHVzZSB0aGUgbWl4aW4gZXZlcnl3aGVyZSBlbHNlIGJlY2F1c2UgaXQncyBtdWNoIG1vcmUgZWxlZ2FudC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBtaXhpbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGltLWxvZygkbWVzc2FnZSkge31cbn1cblxuXG4vLy9cbi8vLyBGdW5jdGlvbiB3aXRoIG5vIGBAcmV0dXJuYCBjYWxsZWQgbmV4dCB0byBgQHdhcm5gIGluIFNhc3MgMy4zXG4vLy8gdG8gdHJpZ2dlciBhIGNvbXBpbGluZyBlcnJvciBhbmQgc3RvcCB0aGUgcHJvY2Vzcy5cbi8vL1xuQGZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vLy9cbi8vLyBEZXRlcm1pbmVzIHdoZXRoZXIgYSBsaXN0IG9mIGNvbmRpdGlvbnMgaXMgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50LlxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEByZXR1cm4ge0Jvb2xlYW59IC0gUmV0dXJucyB0cnVlIGlmIHRoZSBjb25kaXRpb25zIGFyZSBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vL1xuQGZ1bmN0aW9uIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pIHtcbiAgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludCk7XG5cbiAgQGlmIG5vdCAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSB7XG4gICAgQGlmIGltLWxvZygnYCN7JGltLW5vLW1lZGlhLWJyZWFrcG9pbnR9YCBpcyBub3QgYSB2YWxpZCBicmVha3BvaW50LicpIHt9XG4gIH1cblxuICBAZWFjaCAkY29uZGl0aW9uIGluICRjb25kaXRpb25zIHtcbiAgICBAaWYgbm90IG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkY29uZGl0aW9uKTtcbiAgICAgICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAgICAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkY29uZGl0aW9uLCAkb3BlcmF0b3IpO1xuXG4gICAgICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBTcGFjZUFyb3VuZE9wZXJhdG9yXG4gICAgICBAaWYgKCRwcmVmaXggPT0gJ21heCcgYW5kICR2YWx1ZSA8PSAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkgb3JcbiAgICAgICAgICAoJHByZWZpeCA9PSAnbWluJyBhbmQgJHZhbHVlID4gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIHtcbiAgICAgICAgQHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG5vdCBpbmRleCgkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vXG4vLy8gUGFyc2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBHZXQgb3BlcmF0b3Igb2YgYW4gZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IG9wZXJhdG9yIGZyb21cbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBBbnkgb2YgYD49YCwgYD5gLCBgPD1gLCBgPGAsIGDiiaVgLCBg4omkYFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pIHtcbiAgQGVhY2ggJG9wZXJhdG9yIGluICgnPj0nLCAnPicsICc8PScsICc8JywgJ+KJpScsICfiiaQnKSB7XG4gICAgQGlmIHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICAgICBAcmV0dXJuICRvcGVyYXRvcjtcbiAgICB9XG4gIH1cblxuICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICRfOiBpbS1sb2coJ05vIG9wZXJhdG9yIGZvdW5kIGluIGAjeyRleHByZXNzaW9ufWAuJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgZGltZW5zaW9uIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYHdpZHRoYCBvciBgaGVpZ2h0YCAob3IgcG90ZW50aWFsbHkgYW55dGhpbmcgZWxzZSlcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcGFyc2VkLWRpbWVuc2lvbjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAwLCAkb3BlcmF0b3ItaW5kZXggLSAxKTtcbiAgJGRpbWVuc2lvbjogJ3dpZHRoJztcblxuICBAaWYgc3RyLWxlbmd0aCgkcGFyc2VkLWRpbWVuc2lvbikgPiAwIHtcbiAgICAkZGltZW5zaW9uOiAkcGFyc2VkLWRpbWVuc2lvbjtcbiAgfVxuXG4gIEByZXR1cm4gJGRpbWVuc2lvbjtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIHByZWZpeCBiYXNlZCBvbiBhbiBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYG1pbmAgb3IgYG1heGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpIHtcbiAgQHJldHVybiBpZihpbmRleCgoJzwnLCAnPD0nLCAn4omkJyksICRvcGVyYXRvciksICdtYXgnLCAnbWluJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IHZhbHVlIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCB2YWx1ZSBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIEEgbnVtZXJpYyB2YWx1ZVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sICRvcGVyYXRvci1pbmRleCArIHN0ci1sZW5ndGgoJG9wZXJhdG9yKSk7XG5cbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgJHZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKTtcbiAgfSBAZWxzZSB7XG4gICAgJHZhbHVlOiB0by1udW1iZXIoJHZhbHVlKTtcbiAgfVxuXG4gICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsIHVuaXQoJHZhbHVlKSk7XG5cbiAgQGlmIG5vdCAkaW50ZXJ2YWwge1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAgIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAgIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gICAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAgICRfOiBpbS1sb2coJ1Vua25vd24gdW5pdCBgI3t1bml0KCR2YWx1ZSl9YC4nKTtcbiAgfVxuXG4gIEBpZiAkb3BlcmF0b3IgPT0gJz4nIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSArICRpbnRlcnZhbDtcbiAgfSBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gJzwnIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSAtICRpbnRlcnZhbDtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuXG5cbi8vL1xuLy8vIFBhcnNlIGFuIGV4cHJlc3Npb24gdG8gcmV0dXJuIGEgdmFsaWQgbWVkaWEtcXVlcnkgZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBwYXJzZVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIFZhbGlkIG1lZGlhIHF1ZXJ5XG4vLy9cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKSB7XG4gIC8vIElmIGl0IGlzIHBhcnQgb2YgJG1lZGlhLWV4cHJlc3Npb25zLCBpdCBoYXMgbm8gb3BlcmF0b3JcbiAgLy8gdGhlbiB0aGVyZSBpcyBubyBuZWVkIHRvIGdvIGFueSBmdXJ0aGVyLCBqdXN0IHJldHVybiB0aGUgdmFsdWVcbiAgQGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbik7XG4gIH1cblxuICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKTtcbiAgJGRpbWVuc2lvbjogZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcblxuICBAcmV0dXJuICcoI3skcHJlZml4fS0jeyRkaW1lbnNpb259OiAjeyR2YWx1ZX0pJztcbn1cblxuLy8vXG4vLy8gU2xpY2UgYCRsaXN0YCBiZXR3ZWVuIGAkc3RhcnRgIGFuZCBgJGVuZGAgaW5kZXhlc1xuLy8vXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzbGljZVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc3RhcnQgWzFdIC0gU3RhcnQgaW5kZXhcbi8vLyBAcGFyYW0ge051bWJlcn0gJGVuZCBbbGVuZ3RoKCRsaXN0KV0gLSBFbmQgaW5kZXhcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9IFNsaWNlZCBsaXN0XG4vLy9cbkBmdW5jdGlvbiBzbGljZSgkbGlzdCwgJHN0YXJ0OiAxLCAkZW5kOiBsZW5ndGgoJGxpc3QpKSB7XG4gIEBpZiBsZW5ndGgoJGxpc3QpIDwgMSBvciAkc3RhcnQgPiAkZW5kIHtcbiAgICBAcmV0dXJuICgpO1xuICB9XG5cbiAgJHJlc3VsdDogKCk7XG5cbiAgQGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBudGgoJGxpc3QsICRpKSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vLy9cbi8vLyBTdHJpbmcgdG8gbnVtYmVyIGNvbnZlcnRlclxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIENhc3RzIGEgc3RyaW5nIGludG8gYSBudW1iZXJcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBiZSBwYXJzZWRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn1cbi8vL1xuQGZ1bmN0aW9uIHRvLW51bWJlcigkdmFsdWUpIHtcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpICE9ICdzdHJpbmcnIHtcbiAgICAkXzogaW0tbG9nKCdWYWx1ZSBmb3IgYHRvLW51bWJlcmAgc2hvdWxkIGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgJGZpcnN0LWNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgMSwgMSk7XG4gICRyZXN1bHQ6IDA7XG4gICRkaWdpdHM6IDA7XG4gICRtaW51czogKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKTtcbiAgJG51bWJlcnM6ICgnMCc6IDAsICcxJzogMSwgJzInOiAyLCAnMyc6IDMsICc0JzogNCwgJzUnOiA1LCAnNic6IDYsICc3JzogNywgJzgnOiA4LCAnOSc6IDkpO1xuXG4gIC8vIFJlbW92ZSArLy0gc2lnbiBpZiBwcmVzZW50IGF0IGZpcnN0IGNoYXJhY3RlclxuICBAaWYgKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJysnIG9yICRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKSB7XG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJHZhbHVlLCAyKTtcbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkdmFsdWUpIHtcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAkaSwgJGkpO1xuXG4gICAgQGlmIG5vdCAoaW5kZXgobWFwLWtleXMoJG51bWJlcnMpLCAkY2hhcmFjdGVyKSBvciAkY2hhcmFjdGVyID09ICcuJykge1xuICAgICAgQHJldHVybiB0by1sZW5ndGgoaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCksIHN0ci1zbGljZSgkdmFsdWUsICRpKSlcbiAgICB9XG5cbiAgICBAaWYgJGNoYXJhY3RlciA9PSAnLicge1xuICAgICAgJGRpZ2l0czogMTtcbiAgICB9IEBlbHNlIGlmICRkaWdpdHMgPT0gMCB7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTAgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSAvICRkaWdpdHM7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KTtcbn1cblxuXG4vLy9cbi8vLyBBZGQgYCR1bml0YCB0byBgJHZhbHVlYFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGFkZCB1bml0IHRvXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICR1bml0IC0gU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB1bml0XG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gYCR2YWx1ZWAgZXhwcmVzc2VkIGluIGAkdW5pdGBcbi8vL1xuQGZ1bmN0aW9uIHRvLWxlbmd0aCgkdmFsdWUsICR1bml0KSB7XG4gICR1bml0czogKCdweCc6IDFweCwgJ2NtJzogMWNtLCAnbW0nOiAxbW0sICclJzogMSUsICdjaCc6IDFjaCwgJ3BjJzogMXBjLCAnaW4nOiAxaW4sICdlbSc6IDFlbSwgJ3JlbSc6IDFyZW0sICdwdCc6IDFwdCwgJ2V4JzogMWV4LCAndncnOiAxdncsICd2aCc6IDF2aCwgJ3ZtaW4nOiAxdm1pbiwgJ3ZtYXgnOiAxdm1heCk7XG5cbiAgQGlmIG5vdCBpbmRleChtYXAta2V5cygkdW5pdHMpLCAkdW5pdCkge1xuICAgICRfOiBpbS1sb2coJ0ludmFsaWQgdW5pdCBgI3skdW5pdH1gLicpO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWUgKiBtYXAtZ2V0KCR1bml0cywgJHVuaXQpO1xufVxuXG4vLy9cbi8vLyBUaGlzIG1peGluIGFpbXMgYXQgcmVkZWZpbmluZyB0aGUgY29uZmlndXJhdGlvbiBqdXN0IGZvciB0aGUgc2NvcGUgb2Zcbi8vLyB0aGUgY2FsbC4gSXQgaXMgaGVscGZ1bCB3aGVuIGhhdmluZyBhIGNvbXBvbmVudCBuZWVkaW5nIGFuIGV4dGVuZGVkXG4vLy8gY29uZmlndXJhdGlvbiBzdWNoIGFzIGN1c3RvbSBicmVha3BvaW50cyAocmVmZXJyZWQgdG8gYXMgdHdlYWtwb2ludHMpXG4vLy8gZm9yIGluc3RhbmNlLlxuLy8vXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrcG9pbnRzIFsoKV0gLSBNYXAgb2YgdHdlYWtwb2ludHMgdG8gYmUgbWVyZ2VkIHdpdGggYCRicmVha3BvaW50c2Bcbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zIFsoKV0gLSBNYXAgb2YgdHdlYWtlZCBtZWRpYSBleHByZXNzaW9ucyB0byBiZSBtZXJnZWQgd2l0aCBgJG1lZGlhLWV4cHJlc3Npb25gXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgYnJlYWtwb2ludHMgd2l0aCBhIHR3ZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBtZWRpYSBleHByZXNzaW9ucyB3aXRoIGEgY3VzdG9tIG9uZVxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCBib3RoIGNvbmZpZ3VyYXRpb24gbWFwc1xuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpLCAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbkBtaXhpbiBtZWRpYS1jb250ZXh0KCR0d2Vha3BvaW50czogKCksICR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCkpIHtcbiAgLy8gU2F2ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkZ2xvYmFsLWJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHM7XG4gICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnM6ICRtZWRpYS1leHByZXNzaW9ucztcblxuICAvLyBVcGRhdGUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnRzLCAkdHdlYWtwb2ludHMpICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogbWFwLW1lcmdlKCRtZWRpYS1leHByZXNzaW9ucywgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zKSAhZ2xvYmFsO1xuXG4gIEBjb250ZW50O1xuXG4gIC8vIFJlc3RvcmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiAkZ2xvYmFsLWJyZWFrcG9pbnRzICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogJGdsb2JhbC1tZWRpYS1leHByZXNzaW9ucyAhZ2xvYmFsO1xufVxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBwdWJsaWMgZXhwb3NlZCBBUElcbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSBiYXNlZCBvbiBhIGxpc3Qgb2YgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc2luZ2xlIHNldCBicmVha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PXRhYmxldCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNThweCcsICc8ODUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5kZXNrdG9wJywgJzw9MTM1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCdyZXRpbmEyeCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIE1peGluZyBldmVyeXRoaW5nXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1MHB4JywgJzx0YWJsZXQnLCAncmV0aW5hM3gnKSB7IH1cbi8vL1xuQG1peGluIG1lZGlhKCRjb25kaXRpb25zLi4uKSB7XG4gIC8vIHNjc3MtbGludDpkaXNhYmxlIFNwYWNlQXJvdW5kT3BlcmF0b3JcbiAgQGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA9PSAwKSBvclxuICAgICAgKG5vdCAkaW0tbWVkaWEtc3VwcG9ydCBhbmQgaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikpIHtcbiAgICBAY29udGVudDtcbiAgfSBAZWxzZSBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPiAwKSB7XG4gICAgQG1lZGlhICN7dW5xdW90ZShwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgMSkpKX0ge1xuICAgICAgLy8gUmVjdXJzaXZlIGNhbGxcbiAgICAgIEBpbmNsdWRlIG1lZGlhKHNsaWNlKCRjb25kaXRpb25zLCAyKS4uLikge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi52aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbn1cblxuLmNvbnRlbnQtbGVmdCB7XG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbi5jb250ZW50LWNlbnRlciB7XG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG59XG4uY29udGVudC1yaWdodCB7XG4gID4gKiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59IiwiLmxlZnQtcGFuZWwge1xuXHRiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDEpO1xuXHRAaW5jbHVkZSBzaXplKDQ4MHB4LCAxMDB2aCk7XG5cdFxuXHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRAaW5jbHVkZSBzaXplKDEwMCUsIDEwMHZoKTtcblx0fVxuXG5cdCZfX3dyYXBwZXIge1xuXHRcdGhlaWdodDoxMDAlO1xuXHRcdEBpbmNsdWRlIGZsZXhib3goKTtcblx0fVxuXG5cdCZfX2JvZHkge1xuXHRcdEBpbmNsdWRlIGZsZXhib3goKTtcblx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblx0XHRAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuXG5cdFx0cCB7XG5cdFx0XHRjb2xvcjogd2hpdGU7XG5cdFx0XHRAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDIuNHJlbSk7XHRcblx0XHRcdHBhZGRpbmctYm90dG9tOiAxLjZyZW07XG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdCZfX2hlYWRlciB7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGZsZXgtZmxvdyhjb2x1bW4pO1xuXHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRcblxuXHRcdEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuXHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG5cdFx0fVxuXG5cdFx0Jl9fd3JhcHBlciB7XG5cdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoZmxleC1zdGFydCk7XG5cdFx0XHRwYWRkaW5nLWJvdHRvbToxNnJlbTtcblxuXHRcdFx0QGluY2x1ZGUgbWVkaWEoJzw9bGcnKSB7XG5cdFx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdFx0XHRwYWRkaW5nLWJvdHRvbToycmVtO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRcblx0Jl9fZm9vdGVyIHtcblx0XHRAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdH1cblx0fVxufSIsIi5yaWdodC1wYW5lbCB7XG5cdHdpZHRoOiA0NyU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0d2lkdGg6MTAwJTtcblx0fVxufSIsIi8vIHZhcnNcbiRwOiByZW0oOC4zcHggNDBweCk7XG4kYi1yYWQ6IDZweDtcbiRsaDogMS42O1xuJGljby1kaW06IHJlbSgzMnB4KTtcblxuLy8gU3RydWN0dXJlIEJ1dHRvblxuLmJ0biB7XG4gIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgJHNtYWxsLWZvbnQtc2l6ZSk7XG4gIEBpbmNsdWRlIHNpemUoMTIuNnJlbSwgNHJlbSk7XG4gIHBhZGRpbmc6ICRwO1xuICBsaW5lLWhlaWdodDogJGxoO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgYm9yZGVyOm5vbmU7XG4gIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcblxuICBzdmcge1xuICAgIEBpbmNsdWRlIHNpemUoJGljby1kaW0sICRpY28tZGltKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICB9XG5cbiAgJi0tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xuICAgIGNvbG9yOndoaXRlO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDEpO1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggMjBweCAwIHJnYmEoMjksMjksMzEsLjA5KTtcbiAgICAgIG9wYWNpdHk6IC45O1xuICAgIH1cbiAgICAmOmFjdGl2ZSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC45Mik7XG4gICAgfVxuICB9XG5cbiAgJi0tZGFyayB7XG4gICAgQGluY2x1ZGUgYnV0dG9uLXN0eWxlKHdoaXRlLCBibGFjaywgYmxhY2ssIHdoaXRlLCBibGFjaywgYmxhY2spO1xuICAgIEBpbmNsdWRlIHNpemUoMTVyZW0sIDRyZW0pO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlIDtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICB9XHRcbiAgfVxuXG4gICYtLWdvb2dsZSB7XG4gICAgQGluY2x1ZGUgYnV0dG9uLXN0eWxlKHdoaXRlLCB3aGl0ZSwgZ2V0LWNvbG9yKGJnLCAzKSwgZ2V0LWNvbG9yKGJnLCA2KSwgZ2V0LWNvbG9yKGJnLCA2KSwgZ2V0LWNvbG9yKGJnLCA2KSk7XG4gICAgd2lkdGg6IDMyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBnZXQtY29sb3IoYmcsIDMpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgMyk7XG4gICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xuICAgIH1cdFxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgICAgd2lkdGg6IDI1MHB4O1xuICAgIH1cbiAgfVxuXG4gICYtLWZhY2Vib29rIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIHdoaXRlLCBnZXQtY29sb3IoYmcsIDQpLCBnZXQtY29sb3IoYmcsIDcpLCBnZXQtY29sb3IoYmcsIDcpLCBnZXQtY29sb3IoYmcsIDcpKTtcbiAgICB3aWR0aDogNjBweDtcbiAgICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgICBib3JkZXItcmFkaXVzOiAkYi1yYWQ7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ2V0LWNvbG9yKGJnLCA0KTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDQpO1xuICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICB9XHRcbiAgfVxuXG4gICYtLWdyZXkge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgZ2V0LWNvbG9yKGJnLCA1KSwgZ2V0LWNvbG9yKGJnLCA1KSwgd2hpdGUsIGdldC1jb2xvcihiZywgNSksIGdldC1jb2xvcihiZywgNSkpO1xuICAgIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBnZXQtY29sb3IoYmcsIDUpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgNSk7XG4gICAgICBjb2xvcjokY29sb3Itd2hpdGU7XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgd2lkdGg6IDEwMCVcbiAgfVxufVxuXG4vLyAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKCcuJykge1xuLy8gICAgIEBpbmNsdWRlIHNpemUoMTAwJSwgYXV0byk7XG4vLyAgIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NUE9ORU5UIHRvVE9QICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi50b1RvcCB7XG4gICAgQGluY2x1ZGUgc2l6ZShhdXRvLCAzLjcycmVtKTtcbiAgICBAaW5jbHVkZSBmaXhlZCh0b3AgODYlIHJpZ2h0IDJyZW0pO1xuICAgIHotaW5kZXg6IDk5OTk5O1xuICAgIGJhY2tncm91bmQ6ICM0YjQ2M2U7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDEuMnJlbSAxcmVtO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgICAgICBvcGFjaXR5OjE7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgfVxufSIsIlx0LmlucHV0LW5vcm1hbCB7XG5cdFx0YmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAwKTtcblx0XHRoZWlnaHQ6IDRyZW07XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0Ym9yZGVyLXJhZGl1czogNHB4O1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMS42cmVtKTtcdFxuXHR9XG5cblx0LnVrLWlucHV0OmZvY3VzLCAudWstc2VsZWN0OmZvY3VzLCAudWstdGV4dGFyZWE6Zm9jdXMge1xuXHRcdGJvcmRlcjogMXB4IHNvbGlkIGdldC1jb2xvcihiZywgMSk7XG5cdH0iLCIubGluay10ZXh0IHtcbiAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAxLjRyZW0pO1x0XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICBjb2xvcjogZ2V0LWNvbG9yKHByaW1hcnksIDEpO1xuICB9XG59IiwiLmxvZ2luLWZvcm0ge1xuXHR3aWR0aDogNDAwcHg7XG5cdHBhZGRpbmctYm90dG9tOiAyLjRyZW07XG5cblx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0d2lkdGg6MTAwJTtcblx0fVxuXHRcblx0bGFiZWwge1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCA2MDAsIG5vcm1hbCwgMS42cmVtKTtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0bWFyZ2luOjFyZW0gMDtcblx0fVxuXG5cdCZfX3Bhc3N3b3JkIHtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuXHRcdEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG5cdH1cblxuXHRidXR0b24ge1xuXHRcdHdpZHRoOiAxMi42cmVtO1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHR9XG5cdH1cbn0iLCIubG9naW4ge1xuXHRcdEBpbmNsdWRlIHJlbGF0aXZlKCk7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKGNvbHVtbik7XG5cdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblx0XHRoZWlnaHQ6MTAwJTtcblxuXHRcdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0d2lkdGg6IDkwJTtcblx0XHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdH1cdFxuXG5cdFx0QGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG5cdFx0XHR3aWR0aDogOTAlO1xuXHRcdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0fVxuXG5cdFx0Jl9fd3JhcHBlciB7XG5cdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRAaW5jbHVkZSBmbGV4LWRpcmVjdGlvbihjb2x1bW4pO1x0XG5cdFx0XHRAaW5jbHVkZSBzaXplKDEwMCUsIDEwMCUpO1xuXHRcdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0anVzdGlmeS1jb250ZW50OiB1bnNldDtcblx0XHRcdFx0aGVpZ2h0OiB1bnNldDtcblx0XHRcdH1cblxuXHRcdFx0Jl9faGVhZGVyIHtcblx0XHRcdFx0d2lkdGg6IDQwMHB4O1xuXHRcdFx0XHRwYWRkaW5nOiAxLjRyZW0gMDtcblxuXHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRwYWRkaW5nOiB1bnNldDtcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5idXNpbmVzcyB7XG5cdFx0XHRcdFx0QGluY2x1ZGUgYWJzb2x1dGUodG9wIDRyZW0gcmlnaHQgMCk7XG5cdFx0XHRcdFx0d2lkdGg6IDEyLjRyZW07XG5cdFx0XHRcdFx0cGFkZGluZy1ib3R0b206IDJyZW07XG5cblx0XHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdFx0XHRcdFx0cG9zaXRpb246IHVuc2V0O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGgxIHtcblx0XHRcdFx0XHRAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDMuMnJlbSk7XG5cdFx0XHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5zb2NpYWwtc2lnbmluIHtcblx0XHRcdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuXHRcdFx0XHRcdHBhZGRpbmc6IDRyZW0gMCAwIDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdC51ay1kaXZpZGVyLWljb24ge1xuXHRcdFx0XHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0iLCIkbWF4LXc6IHJlbSgxOTIwcHgpO1xuJGhlYWRlci1oOiByZW0oNjJweCk7XG5cbi5wYWdlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */
