/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS FLEXBOX CROSSBROWSER               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS BUTTON STYLE                       */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  REUSABLE SASS MIXINS ON-EVENT                                   */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN WHEN-INSIDE                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  CONTAINER                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS POSITION                              */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN SIZE                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXIN SET-FONT                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXINS REM UNITS             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                REUSABLE SASS MIXIN BORDER                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS PADDING                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                              REUSABLE SASS MIXINS BOX-SHADOW                             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                            HIDING/SHOWING FADE TRANSITION                  */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 LIST RESET                                 */
/* -------------------------------------------------------------------------- */
/*
    Grid class name
*/
/*
    Cell class name
*/
/*
    Gutter size
*/
/*
    Optionally include max-width to fix IE issues
*/
/*
    Grid
*/
.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
    Grid cell
*/
.grid-cell,
.grid--auto > * {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4;
}

/*
    Grid cell modifiers
 */
.grid-cell--auto-size {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
}

.grid-cell--light {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.grid-cell--heavy {
  -webkit-box-flex: 8;
      -ms-flex-positive: 8;
          flex-grow: 8;
}

/*
    Grid gutters
*/
.grid--gutters {
  margin: -30px 0 0 -30px;
}

.grid--gutters > .grid-cell,
.grid--auto.grid--gutters > * {
  padding: 30px 0 0 30px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*
    Alignment per row
*/
.grid--top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.grid--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.grid--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/*
    Flexible cells
*/
.grid--flex-grid-cell > .grid-cell,
.grid--flex > .grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/*
    Justify
*/
.grid--justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/*
    Alignment per cell
*/
.grid-cell--top {
  -ms-flex-item-align: start;
      align-self: flex-start;
}

.grid-cell--bottom {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.grid-cell--center {
  -ms-flex-item-align: center;
      align-self: center;
}

/*
    Generate grid classes
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::selection {
  background: #28C660;
}

body {
  background: #28C660;
}

figure {
  margin: 0;
}

img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  text-decoration: none;
  color: #768093;
}

a:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  color: #768093;
}

address {
  font-style: normal;
}

h1, h2, h3, h4, h5, h6,
ul, ol, p {
  margin: 0;
}

.js-allclick, .js-toggle {
  cursor: pointer;
}

html, body {
  font-size: 10px;
}

body {
  color: black;
  font-family: "Karla", sans-serif;
  line-height: 1.6;
}

.tinytext {
  line-height: 1.6;
  font-size: 1rem;
}

.tinytext--small {
  font-size: 0.88889rem;
}

.tinytext > * {
  margin-bottom: 1rem;
}

.tinytext > *:first-child {
  margin-top: 0;
}

.tinytext > *:last-child {
  margin-bottom: 0;
}

.tinytext h1, .tinytext h2, .tinytext h3, .tinytext h4 {
  margin: 1.25rem 0 0.5rem;
}

.tinytext ul li {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.tinytext a[href^="mailto"] {
  font-weight: 500;
  position: relative;
  padding-left: 1.75rem;
  background: url("../images/svg/envelope.svg") center left no-repeat;
}

.tinytext strong {
  font-weight: 800;
}

.tinytext em {
  font-style: italic;
}

.tinytext ul, .tinytext ol {
  margin-left: 0;
  padding-left: 1.25rem;
}

.tinytext ul li, .tinytext ol li {
  margin: 0;
}

@media (min-width: 768px) {
  .tinytext .embedded-entity {
    max-width: 40%;
    float: left;
    margin: 1rem 1rem 1rem 0;
  }
}

.tinytext--small {
  font-size: 0.88889rem;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.content-left > * {
  margin-left: 0;
}

.content-center > * {
  margin-left: auto;
  margin-right: auto;
}

.content-right > * {
  margin-right: 0;
}

.left-panel {
  background: #28C660;
  width: 480px;
  height: 100vh;
}

@media (max-width: 992px) {
  .left-panel {
    width: 100%;
    height: 100vh;
  }
}

.left-panel__wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-flow: column;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .left-panel__header {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

@media (max-width: 992px) {
  .left-panel__header {
    -ms-flex-flow: row;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row;
    -moz-align-items: center;
    -ms-align-items: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media (max-width: 768px) {
  .left-panel__header {
    -ms-flex-flow: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-flow: column;
  }
}

.left-panel__header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  padding-bottom: 13.5rem;
}

@media (max-width: 1200px) {
  .left-panel__header__wrapper {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
    padding-bottom: 2rem;
  }
}

.left-panel__footer .welcome {
  padding-bottom: 4rem;
}

.left-panel__footer .welcome__title {
  word-wrap: break-word;
  color: white;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

@media (max-width: 1200px) {
  .left-panel__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

@media (max-width: 992px) {
  .left-panel__footer {
    width: 40rem;
    padding-left: 6rem;
  }
}

@media (max-width: 768px) {
  .left-panel__footer {
    width: unset;
    padding-left: unset;
  }
}

.right-panel {
  width: 47%;
  margin: 0 auto;
}

@media (max-width: 992px) {
  .right-panel {
    width: 100%;
  }
}

.logo {
  display: block;
}

.logo--small {
  max-height: 12.5rem;
}

.btn {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  width: 12.6rem;
  height: 4rem;
  padding: 0.51875rem 2.5rem;
  line-height: 1.6;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  border: none;
  border-radius: 8px;
}

@media (max-width: 768px) {
  .btn {
    width: 100%;
  }
}

.btn svg {
  width: 2rem;
  height: 2rem;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--primary {
  background: #28C660;
  color: white;
}

.btn--primary:active {
  background: #28C660;
  color: #fff;
}

.btn--primary:hover {
  background: #3ccb6f;
  opacity: .9;
}

.btn--primary:active {
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

.btn--dark {
  color: white;
  background: black;
  border-color: white;
  width: 15rem;
  height: 4rem;
}

.btn--dark svg {
  fill: white;
}

.btn--dark:hover, .btn--dark:active, .btn--dark:focus {
  color: white;
  background: #252529;
  border-color: black;
}

.btn--dark:hover svg, .btn--dark:active svg, .btn--dark:focus svg {
  fill: white;
}

.btn--dark:active {
  background: white;
  color: black;
}

.btn--google {
  color: white;
  background: #DB3236;
  border-color: #de4649;
  width: 324px;
  border-radius: 8px;
  border: 1px solid #DB3236;
}

.btn--google svg {
  fill: white;
}

.btn--google:hover, .btn--google:active, .btn--google:focus {
  color: white;
  background: #de4649;
  border-color: #de4649;
}

.btn--google:hover svg, .btn--google:active svg, .btn--google:focus svg {
  fill: white;
}

.btn--google:active {
  background: #DB3236;
  color: #fff;
}

@media (max-width: 992px) {
  .btn--google {
    width: 80%;
  }
}

.btn--google i {
  font-size: 1.6rem;
  margin: 0.2rem 0.2rem;
}

.btn--facebook {
  color: white;
  background: #3B5998;
  border-color: #4e69a2;
  width: 60px;
  font-size: 1.6rem;
  border-radius: 8px;
  border: 1px solid #3B5998;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--facebook svg {
  fill: white;
}

.btn--facebook:hover, .btn--facebook:active, .btn--facebook:focus {
  color: white;
  background: #4e69a2;
  border-color: #4e69a2;
}

.btn--facebook:hover svg, .btn--facebook:active svg, .btn--facebook:focus svg {
  fill: white;
}

.btn--facebook:active {
  background: #3B5998;
  color: #fff;
}

@media (max-width: 992px) {
  .btn--facebook {
    width: 15%;
  }
}

.btn--grey {
  color: white;
  background: #768093;
  border-color: #768093;
  border-radius: 8px;
  border: 1px solid #768093;
}

.btn--grey svg {
  fill: white;
}

.btn--grey:hover, .btn--grey:active, .btn--grey:focus {
  color: #768093;
  background: white;
  border-color: #768093;
}

.btn--grey:hover svg, .btn--grey:active svg, .btn--grey:focus svg {
  fill: #768093;
}

.btn--grey:active {
  background: #768093;
  color: #fff;
}

.btn-large {
  width: 21.4rem;
}

@media (max-width: 768px) {
  .btn-large {
    width: 100%;
  }
}

/* -------------------------------------------------------------------------- */
/*                               COMPONENT toTOP                              */
/* -------------------------------------------------------------------------- */
.toTop {
  width: auto;
  height: 3.72rem;
  top: 86%;
  right: 2rem;
  position: fixed;
  z-index: 99999;
  background: #4b463e;
  border-radius: 50%;
  padding: 1.2rem 1rem;
  opacity: 0.6;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
}

.toTop:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  opacity: 1;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
  color: white;
}

.input-normal {
  background: #F3F3F4;
  height: 4rem;
  border: 1px solid transparent;
  border-radius: 4px;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.uk-input:focus, .uk-select:focus, .uk-textarea:focus {
  border: 1px solid #28C660;
}

.link-text {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  text-decoration: none;
  color: #28C660;
}

.link-text:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  color: #3ccb6f;
}

.login-form {
  width: 400px;
  padding-bottom: 2.4rem;
}

@media (max-width: 992px) {
  .login-form {
    width: 100%;
  }
}

.login-form label {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 1.6rem;
  display: inline-block;
  margin: 1rem 0;
}

.login-form__password {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.login-form__password label:last-child {
  width: 45%;
}

.login-form .privacy-policy {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: baseline;
  -ms-align-items: baseline;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
}

.login-form .privacy-policy label {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  padding-left: 1rem;
}

.change-words {
  width: 50%;
  word-wrap: break-word;
  font-size: 3em;
  display: inline-block;
  position: relative;
  top: -2.7rem;
  color: white;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

.change-words span {
  position: absolute;
  opacity: 0;
  overflow: hidden;
  -webkit-animation: animateWord 18s linear infinite 0s;
  animation: changeWord 18s linear infinite 0s;
}

.change-words span:nth-child(2) {
  -webkit-animation-delay: 3s;
  animation-delay: 3s;
  color: white;
}

.change-words span:nth-child(3) {
  -webkit-animation-delay: 6s;
  animation-delay: 6s;
  color: white;
}

.change-words span:nth-child(4) {
  -webkit-animation-delay: 9s;
  animation-delay: 9s;
  color: white;
}

.change-words span:nth-child(5) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
  color: white;
}

.change-words span:nth-child(6) {
  -webkit-animation-delay: 15s;
  animation-delay: 15s;
  color: white;
}

@-webkit-keyframes changeWord {
  0% {
    opacity: 0;
  }
  2% {
    opacity: 0;
    -webkit-transform: translateY(-30px);
  }
  5% {
    opacity: 1;
    -webkit-transform: translateY(0px);
  }
  17% {
    opacity: 1;
    -webkit-transform: translateY(0px);
  }
  20% {
    opacity: 0;
    -webkit-transform: translateY(30px);
  }
  80% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

.login {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 992px) {
  .login {
    width: 60%;
  }
}

@media (max-width: 768px) {
  .login {
    width: 90%;
  }
}

.login__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100vh;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .login__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.login__wrapper__header {
  width: 40rem;
  padding: 1.4rem 0;
}

@media (max-width: 992px) {
  .login__wrapper__header {
    padding: unset;
    width: 100%;
  }
}

.login__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .login__wrapper__header .business {
    margin: 0 auto;
    position: unset;
  }
}

@media (max-width: 768px) {
  .login__wrapper__header .business {
    width: unset;
  }
}

.login__wrapper__header h1 {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

@media (max-width: 992px) {
  .login__wrapper__header h1 {
    text-align: center;
  }
}

.login__wrapper__header p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  color: #768093;
  padding: 2rem 0;
}

.login__wrapper__header .social-signin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  padding: 4rem 0 0 0;
}

.login__wrapper__header .uk-divider-icon {
  margin-bottom: 0;
}

.login__footer {
  width: 40rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: -10rem;
  padding-bottom: 7rem;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

@media (max-width: 992px) {
  .login__footer {
    width: 100%;
    -moz-justify-content: flex-start;
    -ms-justify-content: flex-start;
    -webkit-box-pack: start;
            justify-content: flex-start;
    -ms-flex-pack: flex-start;
    padding: 0 0 2.4rem 0;
    margin: unset;
  }
}

@media (max-width: 768px) {
  .login__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.password-recovery {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .password-recovery {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 992px) {
  .password-recovery {
    width: 60%;
  }
}

@media (max-width: 768px) {
  .password-recovery {
    width: 90%;
  }
}

.password-recovery__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100vh;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .password-recovery__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.password-recovery__wrapper__header {
  width: 40rem;
  padding: 1.4rem 0;
}

.password-recovery__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header .business {
    margin: 0 auto;
    position: unset;
  }
}

@media (max-width: 768px) {
  .password-recovery__wrapper__header .business {
    width: unset;
  }
}

.password-recovery__wrapper__header h1 {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header h1 {
    text-align: center;
  }
}

.password-recovery__wrapper__header p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  color: #768093;
  padding: 2rem 0;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header {
    text-align: center;
  }
}

.password-recovery__footer {
  width: 40rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: -10rem;
  padding-bottom: 7rem;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

@media (max-width: 992px) {
  .password-recovery__footer {
    width: 100%;
    -moz-justify-content: flex-start;
    -ms-justify-content: flex-start;
    -webkit-box-pack: start;
            justify-content: flex-start;
    -ms-flex-pack: flex-start;
    padding: 0 0 2.4rem 0;
    margin: unset;
  }
}

@media (max-width: 768px) {
  .password-recovery__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.page {
  background: white;
  margin: 0 auto;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
