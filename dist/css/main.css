/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS FLEXBOX CROSSBROWSER               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS BUTTON STYLE                       */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  REUSABLE SASS MIXINS ON-EVENT                                   */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN WHEN-INSIDE                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  CONTAINER                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS POSITION                              */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN SIZE                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXIN SET-FONT                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXINS REM UNITS             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                REUSABLE SASS MIXIN BORDER                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS PADDING                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                              REUSABLE SASS MIXINS BOX-SHADOW                             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                            HIDING/SHOWING FADE TRANSITION                  */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 LIST RESET                                 */
/* -------------------------------------------------------------------------- */
/*
    Grid class name
*/
/*
    Cell class name
*/
/*
    Gutter size
*/
/*
    Optionally include max-width to fix IE issues
*/
/*
    Grid
*/
.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
    Grid cell
*/
.grid-cell,
.grid--auto > * {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4;
}

/*
    Grid cell modifiers
 */
.grid-cell--auto-size {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
}

.grid-cell--light {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.grid-cell--heavy {
  -webkit-box-flex: 8;
      -ms-flex-positive: 8;
          flex-grow: 8;
}

/*
    Grid gutters
*/
.grid--gutters {
  margin: -30px 0 0 -30px;
}

.grid--gutters > .grid-cell,
.grid--auto.grid--gutters > * {
  padding: 30px 0 0 30px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*
    Alignment per row
*/
.grid--top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.grid--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.grid--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/*
    Flexible cells
*/
.grid--flex-grid-cell > .grid-cell,
.grid--flex > .grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/*
    Justify
*/
.grid--justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/*
    Alignment per cell
*/
.grid-cell--top {
  -ms-flex-item-align: start;
      align-self: flex-start;
}

.grid-cell--bottom {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.grid-cell--center {
  -ms-flex-item-align: center;
      align-self: center;
}

/*
    Generate grid classes
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::selection {
  background: #28C660;
}

body {
  background: #28C660;
}

figure {
  margin: 0;
}

img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  text-decoration: none;
}

a:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

address {
  font-style: normal;
}

h1, h2, h3, h4, h5, h6,
ul, ol, p {
  margin: 0;
}

.js-allclick, .js-toggle {
  cursor: pointer;
}

html, body {
  font-size: 10px;
}

body {
  color: black;
  font-family: "Sarabun", sans-serif;
  line-height: 1.6;
}

.tinytext {
  line-height: 1.6;
  font-size: 1rem;
}

.tinytext--small {
  font-size: 0.88889rem;
}

.tinytext > * {
  margin-bottom: 1rem;
}

.tinytext > *:first-child {
  margin-top: 0;
}

.tinytext > *:last-child {
  margin-bottom: 0;
}

.tinytext h1, .tinytext h2, .tinytext h3, .tinytext h4 {
  margin: 1.25rem 0 0.5rem;
}

.tinytext ul li {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 16px;
}

.tinytext a[href^="mailto"] {
  font-weight: 500;
  position: relative;
  padding-left: 1.75rem;
  background: url("../images/svg/envelope.svg") center left no-repeat;
}

.tinytext strong {
  font-weight: 800;
}

.tinytext em {
  font-style: italic;
}

.tinytext ul, .tinytext ol {
  margin-left: 0;
  padding-left: 1.25rem;
}

.tinytext ul li, .tinytext ol li {
  margin: 0;
}

@media (min-width: 768px) {
  .tinytext .embedded-entity {
    max-width: 40%;
    float: left;
    margin: 1rem 1rem 1rem 0;
  }
}

.tinytext--small {
  font-size: 0.88889rem;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.content-left > * {
  margin-left: 0;
}

.content-center > * {
  margin-left: auto;
  margin-right: auto;
}

.content-right > * {
  margin-right: 0;
}

.left-panel {
  background: #28C660;
  width: 480px;
  height: 100vh;
}

@media (max-width: 992px) {
  .left-panel {
    width: 100%;
    height: 100vh;
  }
}

.left-panel__wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.left-panel__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__body p {
  color: white;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

@media (max-width: 992px) {
  .left-panel__body p {
    text-align: center;
  }
}

.left-panel__body button, .left-panel__body input {
  margin-top: 3.2rem;
  width: 15rem;
  padding: 1rem 2rem;
}

@media (max-width: 992px) {
  .left-panel__body button, .left-panel__body input {
    width: 100%;
  }
}

.left-panel__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-flow: column;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .left-panel__header {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.left-panel__header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  padding-bottom: 16rem;
}

@media (max-width: 1200px) {
  .left-panel__header__wrapper {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
    padding-bottom: 2rem;
  }
}

@media (max-width: 1200px) {
  .left-panel__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.right-panel {
  width: 47%;
  margin: 0 auto;
}

@media (max-width: 992px) {
  .right-panel {
    width: 100%;
  }
}

.btn {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 500;
  font-size: 16px;
  width: 100%;
  height: auto;
  padding: 1rem 2.5rem;
  line-height: 1.6;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  border: none;
  border-radius: 6px;
}

.btn svg {
  width: 2rem;
  height: 2rem;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.btn--primary {
  background: #28C660;
  color: white;
}

.btn--primary:active {
  background: #28C660;
  color: #fff;
}

.btn--primary:hover {
  background: #3ccb6f;
  -webkit-box-shadow: 0 5px 20px 0 rgba(29, 29, 31, 0.09);
          box-shadow: 0 5px 20px 0 rgba(29, 29, 31, 0.09);
  opacity: .9;
}

.btn--primary:active {
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

.btn--dark {
  color: white;
  background: black;
  border-color: black;
}

.btn--dark svg {
  fill: white;
}

.btn--dark:hover, .btn--dark:active, .btn--dark:focus {
  color: black;
  background: white;
  border-color: black;
}

.btn--dark:hover svg, .btn--dark:active svg, .btn--dark:focus svg {
  fill: black;
}

.btn--dark:active {
  background: white;
  color: black;
}

.btn--google {
  color: white;
  background: #DB3236;
  border-color: #DB3236;
  width: 324px;
  border-radius: 6px;
  border: 1px solid #DB3236;
}

.btn--google svg {
  fill: white;
}

.btn--google:hover, .btn--google:active, .btn--google:focus {
  color: #DB3236;
  background: white;
  border-color: #DB3236;
}

.btn--google:hover svg, .btn--google:active svg, .btn--google:focus svg {
  fill: #DB3236;
}

.btn--google:active {
  background: #DB3236;
  color: #fff;
}

@media (max-width: 768px) {
  .btn--google {
    width: 250px;
  }
}

.btn--facebook {
  color: white;
  background: #3B5998;
  border-color: #3B5998;
  width: 60px;
  font-size: 1.6rem;
  border-radius: 6px;
  cursor: pointer;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.btn--facebook svg {
  fill: white;
}

.btn--facebook:hover, .btn--facebook:active, .btn--facebook:focus {
  color: #3B5998;
  background: white;
  border-color: #3B5998;
}

.btn--facebook:hover svg, .btn--facebook:active svg, .btn--facebook:focus svg {
  fill: #3B5998;
}

.btn--facebook:active {
  background: #3B5998;
  color: #fff;
}

.btn--yellow {
  color: white;
  background: #768093;
  border-color: #768093;
}

.btn--yellow svg {
  fill: white;
}

.btn--yellow:hover, .btn--yellow:active, .btn--yellow:focus {
  color: #768093;
  background: white;
  border-color: #768093;
}

.btn--yellow:hover svg, .btn--yellow:active svg, .btn--yellow:focus svg {
  fill: #768093;
}

.btn--yellow:active {
  color: #fff;
}

.btn--grey {
  color: white;
  background: #768093;
  border-color: #768093;
}

.btn--grey svg {
  fill: white;
}

.btn--grey:hover, .btn--grey:active, .btn--grey:focus {
  color: #768093;
  background: white;
  border-color: #768093;
}

.btn--grey:hover svg, .btn--grey:active svg, .btn--grey:focus svg {
  fill: #768093;
}

.btn--grey:active {
  background: #768093;
  color: #fff;
}

.btn--beige:hover, .btn--beige:active, .btn--beige:focus {
  background: #28C660;
}

.btn-simple {
  margin: 2rem 1rem 0 0;
  font-size: 1rem;
}

.btn-simple--muted {
  color: #F3F3F4;
}

.btn-simple--primary {
  font-weight: 500;
}

.btn-gray {
  background: rgba(226, 224, 219, 0.5);
}

.btn-gray span {
  margin-right: 14px;
  margin-bottom: 10px;
}

/* -------------------------------------------------------------------------- */
/*                               COMPONENT toTOP                              */
/* -------------------------------------------------------------------------- */
.toTop {
  width: auto;
  height: 3.72rem;
  top: 86%;
  right: 2rem;
  position: fixed;
  z-index: 99999;
  background: #4b463e;
  border-radius: 50%;
  padding: 1.2rem 1rem;
  opacity: 0.6;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
}

.toTop:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  opacity: 1;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
  color: white;
}

.input-normal {
  background: #F3F3F4;
  height: 4rem;
  border: 1px solid transparent;
  border-radius: 4px;
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.uk-input:focus, .uk-select:focus, .uk-textarea:focus {
  border: 1px solid #28C660;
}

.link-text {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  text-decoration: none;
  color: #28C660;
}

.link-text:hover {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  color: #3ccb6f;
}

.login-form {
  width: 400px;
  padding-bottom: 2.4rem;
}

@media (max-width: 992px) {
  .login-form {
    width: 100%;
  }
}

.login-form label {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 1.6rem;
  display: inline-block;
  margin: 1rem 0;
}

.login-form__password {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.login-form button {
  width: 12.6rem;
}

@media (max-width: 992px) {
  .login-form button {
    width: 100%;
  }
}

.login {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 992px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 768px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

.login__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100%;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .login__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.login__wrapper__header {
  width: 400px;
  padding: 1.4rem 0;
}

@media (max-width: 992px) {
  .login__wrapper__header {
    padding: unset;
    width: 100%;
  }
}

.login__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .login__wrapper__header .business {
    margin: 0 auto;
    position: unset;
  }
}

.login__wrapper__header h1 {
  font-family: "Sarabun", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

.login__wrapper__header .social-signin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  padding: 4rem 0 0 0;
}

.login__wrapper__header .uk-divider-icon {
  margin-bottom: 0;
}

.page {
  background: white;
  margin: 0 auto;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2ZsZXguc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2J1dHRvbi1zdHlsZS5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fb24tZXZlbnQuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3doZW4taW5zaWRlLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19jb250YWluZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zaXplLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zZXQtZm9udC5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fcmVtLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19ib3JkZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3BhZGRpbmcuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2JveC1zaGFkb3cuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3RyYW5zaXRpb24uc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2xpc3RyZXNldC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEtZ3JpZC9faW5jbHVkZS1tZWRpYS1ncmlkLnNjc3MiLCJtYWluLmNzcyIsInBhcnRzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwicGFydHMvYmFzZS9fYmFzZS5zY3NzIiwicGFydHMvYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJzY2FsZS1zYXNzL3N0eWxlc2hlZXRzL21vZHVsYXJzY2FsZS9fZnVuY3Rpb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlbS9fcmVtLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvaW5jbHVkZS1tZWRpYS9kaXN0L19pbmNsdWRlLW1lZGlhLnNjc3MiLCJwYXJ0cy9iYXNlL19oZWxwZXJzLnNjc3MiLCJwYXJ0cy9sYXlvdXQvX2xlZnQtcGFuZWwuc2NzcyIsInBhcnRzL2xheW91dC9fcmlnaHQtcGFuZWwuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2J1dHRvbi5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMS1hdG9tcy9fdG9Ub3Auc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2lucHV0LnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAxLWF0b21zL19hbmNob3Iuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2Zvcm0uc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDMtb3JnYW5pc21zL19sb2dpbi5zY3NzIiwicGFydHMvcGFnZXMvX3BhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLHFHQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLG1HQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLDZGQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNGQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUNBQTs7Q0MwQ0M7QURyQ0Q7O0NDd0NDO0FEbkNEOztDQ3NDQztBRGpDRDs7Q0NvQ0M7QUQvQkQ7O0NDa0NDO0FEL0JEO0VBQ0ksb0JBQWE7RUFBYixvQkFBYTtFQUFiLGFBQWE7RUFDYixtQkFBZTtNQUFmLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsU0FBUztFQUNULFVBQVU7QUNpQ2Q7O0FEOUJBOztDQ2tDQztBRC9CRDs7RUFFSSxtQkFBTztNQUFQLFdBQU87VUFBUCxPQUFPO0VBQ1AsbUJBQVk7TUFBWixvQkFBWTtVQUFaLFlBQVk7QUNpQ2hCOztBRDlCQTs7RUNrQ0U7QUQvQkY7RUFDSSxtQkFBVTtNQUFWLGNBQVU7VUFBVixVQUFVO0FDaUNkOztBRDlCQTtFQUNJLG1CQUFZO01BQVosb0JBQVk7VUFBWixZQUFZO0FDaUNoQjs7QUQ5QkE7RUFDSSxtQkFBWTtNQUFaLG9CQUFZO1VBQVosWUFBWTtBQ2lDaEI7O0FEOUJBOztDQ2tDQztBRC9CRDtFQUNJLHVCRWVzQjtBRGtCMUI7O0FEL0JBOztFQUVJLHNCRVdzQjtFRlZ0Qiw4QkFBc0I7VUFBdEIsc0JBQXNCO0FDa0MxQjs7QUQvQkE7O0NDbUNDO0FEaENEO0VBQ0ksd0JBQXVCO01BQXZCLHFCQUF1QjtVQUF2Qix1QkFBdUI7QUNrQzNCOztBRGhDQTtFQUNJLHNCQUFxQjtNQUFyQixtQkFBcUI7VUFBckIscUJBQXFCO0FDbUN6Qjs7QURqQ0E7RUFDSSx5QkFBbUI7TUFBbkIsc0JBQW1CO1VBQW5CLG1CQUFtQjtBQ29DdkI7O0FEakNBOztDQ3FDQztBRGxDRDs7RUFFSSxvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtBQ29DakI7O0FEakNBOztDQ3FDQztBRGxDRDtFQUNJLHdCQUF1QjtNQUF2QixxQkFBdUI7VUFBdkIsdUJBQXVCO0FDb0MzQjs7QURqQ0E7O0NDcUNDO0FEbENEO0VBQ0ksMEJBQXNCO01BQXRCLHNCQUFzQjtBQ29DMUI7O0FEbENBO0VBQ0ksd0JBQW9CO01BQXBCLG9CQUFvQjtBQ3FDeEI7O0FEbkNBO0VBQ0ksMkJBQWtCO01BQWxCLGtCQUFrQjtBQ3NDdEI7O0FEbkNBOztDQ3VDQztBRXJKRCwyRUFBQTtBQUVBOytFRnNKK0U7QUVuSi9FOzs7RUZ1SkU7QUVsSkY7RUFDRSxpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLDhCQUE4QjtFQUFFLE1BQUE7QUZzSmxDOztBRW5KQTsrRUZzSitFO0FFbkovRTs7RUZzSkU7QUVsSkY7RUFDRSxTQUFTO0FGb0pYOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUZrSmxCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7O0VGbUpFO0FFOUlGO0VBQ0UsK0JBQXVCO1VBQXZCLHVCQUF1QjtFQUFFLE1BQUE7RUFDekIsU0FBUztFQUFFLE1BQUE7RUFDWCxpQkFBaUI7RUFBRSxNQUFBO0FGbUpyQjs7QUVoSkE7OztFRnFKRTtBRWhKRjtFQUNFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTsrRUZvSitFO0FFakovRTs7RUZvSkU7QUVoSkY7RUFDRSw2QkFBNkI7QUZrSi9COztBRS9JQTs7O0VGb0pFO0FFL0lGO0VBQ0UsbUJBQW1CO0VBQUUsTUFBQTtFQUNyQiwwQkFBMEI7RUFBRSxNQUFBO0VBQzVCLHlDQUFpQztVQUFqQyxpQ0FBaUM7RUFBRSxNQUFBO0FGb0pyQzs7QUVqSkE7O0VGcUpFO0FFakpGOztFQUVFLG1CQUFtQjtBRm1KckI7O0FFaEpBOzs7RUZxSkU7QUVoSkY7OztFQUdFLGlDQUFpQztFQUFFLE1BQUE7RUFDbkMsY0FBYztFQUFFLE1BQUE7QUZvSmxCOztBRWpKQTs7RUZxSkU7QUVqSkY7RUFDRSxjQUFjO0FGbUpoQjs7QUVoSkE7OztFRnFKRTtBRWhKRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUZrSjFCOztBRS9JQTtFQUNFLGVBQWU7QUZrSmpCOztBRS9JQTtFQUNFLFdBQVc7QUZrSmI7O0FFL0lBOytFRmtKK0U7QUUvSS9FOztFRmtKRTtBRTlJRjtFQUNFLGtCQUFrQjtBRmdKcEI7O0FFN0lBOytFRmdKK0U7QUU3SS9FOzs7RUZpSkU7QUU1SUY7Ozs7O0VBS0Usb0JBQW9CO0VBQUUsTUFBQTtFQUN0QixlQUFlO0VBQUUsTUFBQTtFQUNqQixpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLFNBQVM7RUFBRSxNQUFBO0FGa0piOztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNRLE1BQUE7RUFDTixpQkFBaUI7QUZrSm5COztBRS9JQTs7O0VGb0pFO0FFL0lGOztFQUNTLE1BQUE7RUFDUCxvQkFBb0I7QUZrSnRCOztBRS9JQTs7RUZtSkU7QUUvSUY7Ozs7RUFJRSwwQkFBMEI7QUZpSjVCOztBRTlJQTs7RUZrSkU7QUU5SUY7Ozs7RUFJRSxrQkFBa0I7RUFDbEIsVUFBVTtBRmdKWjs7QUU3SUE7O0VGaUpFO0FFN0lGOzs7O0VBSUUsOEJBQThCO0FGK0loQzs7QUU1SUE7O0VGZ0pFO0FFNUlGO0VBQ0UsOEJBQThCO0FGOEloQzs7QUUzSUE7Ozs7O0VGa0pFO0FFM0lGO0VBQ0UsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsY0FBYztFQUFFLE1BQUE7RUFDaEIsZUFBZTtFQUFFLE1BQUE7RUFDakIsVUFBVTtFQUFFLE1BQUE7RUFDWixtQkFBbUI7RUFBRSxNQUFBO0FGbUp2Qjs7QUVoSkE7O0VGb0pFO0FFaEpGO0VBQ0Usd0JBQXdCO0FGa0oxQjs7QUUvSUE7O0VGbUpFO0FFL0lGO0VBQ0UsY0FBYztBRmlKaEI7O0FFOUlBOzs7RUZtSkU7QUFDRjs7RUU3SUUsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUFFLE1BQUE7RUFDeEIsVUFBVTtFQUFFLE1BQUE7QUZrSmQ7O0FFL0lBOztFRm1KRTtBQUNGOztFRTlJRSxZQUFZO0FGaUpkOztBRTlJQTs7O0VGbUpFO0FBQ0Y7RUU5SUUsNkJBQTZCO0VBQUUsTUFBQTtFQUMvQixvQkFBb0I7RUFBRSxNQUFBO0FGa0p4Qjs7QUUvSUE7O0VGbUpFO0FBQ0Y7RUUvSUUsd0JBQXdCO0FGaUoxQjs7QUU5SUE7OztFRm1KRTtBRTlJRjtFQUNFLDBCQUEwQjtFQUFFLE1BQUE7RUFDNUIsYUFBYTtFQUFFLE1BQUE7QUZrSmpCOztBRS9JQTsrRUZrSitFO0FFL0kvRTs7RUZrSkU7QUU5SUY7RUFDRSxjQUFjO0FGZ0poQjs7QUU3SUE7O0VGaUpFO0FFN0lGO0VBQ0Usa0JBQWtCO0FGK0lwQjs7QUU1SUE7K0VGK0krRTtBRTVJL0U7O0VGK0lFO0FFM0lGO0VBQ0UsYUFBYTtBRjZJZjs7QUUxSUE7O0VGOElFO0FBQ0Y7RUUxSUUsYUFBYTtBRjRJZjs7QUd2ZUE7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0FIMGV4Qjs7QUd2ZUE7RUFDRSxtQkZnRlk7QUQwWmQ7O0FHdmVBO0VBQ0UsbUJGaUZZO0FEeVpkOztBR3ZlQTtFQUNFLFNBQVM7QUgwZVg7O0FHdmVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixjQUFjO0FIMGVoQjs7QUd2ZUE7RUFDRSxxQkFBcUI7QUgwZXZCOztBRzNlQTtFQUlJLDRCRnlLSztFRXpLTCx1QkZ5S0s7RUV6S0wsb0JGeUtLO0FEa1VUOztBR3RlQTtFQUNFLGtCQUFrQjtBSHllcEI7O0FHdGVBOztFQUVFLFNBQVM7QUh5ZVg7O0FHdGVBO0VBQ0UsZUFBZTtBSHllakI7O0FJbGhCQTtFQUNFLGVBQWU7QUpxaEJqQjs7QUlsaEJBO0VBQ0UsWUg0RWdCO0VHM0VoQixrQ0h3SnNDO0VHdkp0QyxnQkFBZ0I7QUpxaEJsQjs7QUlsaEJBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVDRW9DO0FMbWhCdEM7O0FJcGhCRTtFQUNFLHFCQ0FrQztBTHVoQnRDOztBSTNoQkE7RUFRSSxtQkVnQndEO0FOdWdCNUQ7O0FJL2hCQTtFQVlJLGFBQWE7QUp1aEJqQjs7QUluaUJBO0VBZ0JJLGdCQUFnQjtBSnVoQnBCOztBSXZpQkE7RUFvQkksd0JFSXdEO0FObWhCNUQ7O0FJM2lCQTtFWk5DLG9FQUF1RDtFQUN2RCxrQkFGNkU7RUFHN0UsbUJBSDREO0VBSTVELGVTeUpvQjtBRDRackI7O0FJbGpCQTtFQTZCTSxnQkFBZ0I7RWRmckIsa0JBWDBCO0VjNEJyQixxQkVQc0Q7RUZRdEQsbUVBQW1FO0FKeWhCekU7O0FJempCQTtFQXFDSSxnQkFBZ0I7QUp3aEJwQjs7QUk3akJBO0VBeUNJLGtCQUFrQjtBSndoQnRCOztBSWprQkE7RUE2Q0ksY0FBYztFQUNkLHFCRXRCd0Q7QU44aUI1RDs7QUl0a0JBO0VBZ0RNLFNBQVM7QUowaEJmOztBT25DSTtFSHZpQko7SUFzRE0sY0FBYztJQUNkLFdBQVc7SUFDWCx3QkFBd0I7RUp5aEI1QjtBQUNGOztBSXRoQkU7RUFDRSxxQkN6RGtDO0FMa2xCdEM7O0FRaG1CQTtFQUNFLFNBQVM7RUFDVCxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixVQUFVO0FSbW1CWjs7QVFobUJBO0VBRUksY0FBYztBUmttQmxCOztBUS9sQkE7RUFFSSxpQkFBaUI7RUFDakIsa0JBQWtCO0FSaW1CdEI7O0FROWxCQTtFQUVJLGVBQWU7QVJnbUJuQjs7QVN4bkJBO0VBQ0MsbUJSeUZhO0VWdEZiLFlrQkZtQjtFbEJHbkIsYWtCSDBCO0FUNG5CM0I7O0FPN0VJO0VFampCSjtJbEJJQyxXa0JDbUI7SWxCQW5CLGFrQkEwQjtFVCtuQnpCO0FBQ0Y7O0FTN25CQztFQUNDLFlBQVc7RXhCSFosb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0Flb29CZDs7QVNqb0JDO0V4QlBBLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGViw0QndCdEY2QjtFeEJ1Ri9CLDJCd0J2RitCO0V4QndGOUIsd0J3QnhGOEI7VXhCd0Y5Qix1QndCeEY4QjtFeEJ5RjVCLHFCd0J6RjRCO0V4QjJHN0Isd0J3QjFHeUI7RXhCMkczQix1QndCM0cyQjtFeEI0RzFCLHlCd0I1RzBCO014QjRHMUIsc0J3QjVHMEI7VXhCNEcxQixtQndCNUcwQjtBVCtvQjdCOztBU2xwQkU7RUFNQyxZQUFZO0VqQmZkLG9FQUF1RDtFQUN2RCxrQmlCZXFEO0VqQmRyRCxtQmlCYzZDO0VqQmI3QyxpQmlCYTZEO0FUbXBCOUQ7O0FPdEhJO0VFcGlCRjtJQVNFLGtCQUFrQjtFVHNwQnBCO0FBQ0Y7O0FTaHFCRTtFQWNDLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osa0JBQWtCO0FUc3BCckI7O0FPbElJO0VFcGlCRjtJQW1CRSxXQUNEO0VUdXBCRDtBQUNGOztBU3BwQkM7RXhCL0JBLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQXdDWixxQndCWHlCO0V4Qll4Qiw0QndCWndCO0V4Qll4Qiw2QndCWndCO1V4Qll4QixpQndCWndCO0V4QjhEdkIsNEJ3QjdENkI7RXhCOEQvQiwyQndCOUQrQjtFeEIrRDlCLHdCd0IvRDhCO1V4QitEOUIsdUJ3Qi9EOEI7RXhCZ0U1QixxQndCaEU0QjtFQUMvQixZQUFZO0FUa3FCZDs7QU8xSkk7RUU1Z0JIO0l4QmdFRyw0QndCeEQ4QjtJeEJ5RGhDLDJCd0J6RGdDO0l4QjBEL0Isd0J3QjFEK0I7WXhCMEQvQix1QndCMUQrQjtJeEIyRDdCLHFCd0IzRDZCO0VUdXFCaEM7QUFDRjs7QVNycUJFO0V4QjFDRCxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUEyRlYsZ0N3Qm5Ea0M7RXhCb0RwQywrQndCcERvQztFeEJxRG5DLHVCd0JyRG1DO1V4QnFEbkMsMkJ3QnJEbUM7RXhCc0RqQyx5QndCdERpQztFQUNuQyxxQkFBb0I7QVRnckJ2Qjs7QU9sTEk7RUVqZ0JGO0l4QnFERSw0QndCL0MrQjtJeEJnRGpDLDJCd0JoRGlDO0l4QmlEaEMsd0J3QmpEZ0M7WXhCaURoQyx1QndCakRnQztJeEJrRDlCLHFCd0JsRDhCO0lBQy9CLG9CQUFtQjtFVHNyQnJCO0FBQ0Y7O0FPN0xJO0VFdGZIO0l4QjBDRyw0QndCeEM4QjtJeEJ5Q2hDLDJCd0J6Q2dDO0l4QjBDL0Isd0J3QjFDK0I7WXhCMEMvQix1QndCMUMrQjtJeEIyQzdCLHFCd0IzQzZCO0VUMHJCaEM7QUFDRjs7QVV4dkJBO0VBQ0MsVUFBVTtFQUNWLGNBQWM7QVYydkJmOztBTzVNSTtFR2pqQko7SUFLRyxXQUFVO0VWNnZCWDtBQUNGOztBVzN2QkE7RW5CSkMsb0VBQXVEO0VBQ3ZELGtCbUJJaUQ7RW5CSGpELGdCbUJKTztFbkJLUCxlU3lKb0I7RVY1SnBCLFdvQk1tQjtFcEJMbkIsWW9CS3lCO0VBQ3hCLG9CTHVCMEQ7RUt0QjFELGdCQVJNO0VBU04scUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixlQUFlO0VBQ2YsNEJWbUxPO0VVbkxQLHVCVm1MTztFVW5MUCxvQlZtTE87RVVsTFAsWUFBVztFQUNYLGtCQWZTO0FYaXhCWDs7QVc1d0JBO0VwQkpDLFdlOEIyRDtFZjdCM0QsWWU2QjJEO0VLWnhELDRCVjZLSztFVTdLTCx1QlY2S0s7RVU3S0wsb0JWNktLO0FEdWxCVDs7QVdqd0JFO0VBQ0UsbUJWMkRVO0VVMURWLFlBQVc7QVhvd0JmOztBV3R3Qkc7RUFJRyxtQlZ3RFE7RVV2RFIsV1ZxR1k7QURpcUJsQjs7QVczd0JHO0VBUUcsbUJWcURRO0VVcERSLHVEQUEyQztVQUEzQywrQ0FBMkM7RUFDM0MsV0FBVztBWHV3QmpCOztBV2p4Qkc7RUFhRyw4QkFBcUI7TUFBckIsMEJBQXFCO1VBQXJCLHNCQUFxQjtBWHd3QjNCOztBV3J3QkU7RXpCcENELFl5QnFDOEI7RXpCcEM5QixpQnlCb0M0QztFekJuQzVDLG1CeUJtQzBEO0FYMHdCM0Q7O0FkM3lCQztFQUNFLFd5QmdDNEI7QVg4d0IvQjs7QWI1eUJHO0VERUEsWXlCNEJtQztFekIzQm5DLGlCeUIyQmlEO0V6QjFCakQsbUJ5QjBCK0Q7QVhveEJsRTs7QWQ1eUJHO0VBQ0QsV3lCdUJvQztBWHd4QnRDOztBV3p4Qkc7RUFHRyxpQkFBa0I7RUFDbEIsWUFBWTtBWDB4QmxCOztBV3Z4QkU7RXpCM0NELFl5QjRDOEI7RXpCM0M5QixtQmVzRmE7RWZyRmIscUJlcUZhO0VVMUNWLFlBQVk7RUFDWixrQkFoRE87RUFpRFAseUJWd0NVO0FEb3ZCZDs7QWR2MEJDO0VBQ0UsV3lCdUM0QjtBWG15Qi9COztBYngwQkc7RURFQSxjZThFVztFZjdFWCxpQnlCa0N1RTtFekJqQ3ZFLHFCZTRFVztBRDh2QmQ7O0FkeDBCRztFQUNELGFleUVZO0FEa3dCZDs7QVc5eUJHO0VBTUcsbUJWc0NRO0VVckNSLFdWNEVZO0FEZ3VCbEI7O0FPbFRJO0VJamdCRjtJQVVJLFlBQVk7RVg4eUJoQjtBQUNGOztBVzV5QkU7RXpCeERELFl5QnlEOEI7RXpCeEQ5QixtQmV1RmE7RWZ0RmIscUJlc0ZhO0VVOUJWLFdBQVc7RUFDWCxpQkFBZ0I7RUFDaEIsa0JBOURPO0VBK0RQLGVBQWU7RUFDZiw0QlZnSUs7RVVoSUwsdUJWZ0lLO0VVaElMLG9CVmdJSztBRGlyQlQ7O0FkMzJCQztFQUNFLFd5Qm9ENEI7QVgwekIvQjs7QWI1MkJHO0VERUEsY2UrRVc7RWY5RVgsaUJ5QitDdUU7RXpCOUN2RSxxQmU2RVc7QURpeUJkOztBZDUyQkc7RUFDRCxhZTBFWTtBRHF5QmQ7O0FXcjBCRztFQVFHLG1CVndCUTtFVXZCUixXVjZEWTtBRG93QmxCOztBVzl6QkU7RXpCcEVELFl5QnFFOEI7RXpCcEU5QixtQmV3RmE7RWZ2RmIscUJldUZhO0FEK3lCZDs7QWRwNEJDO0VBQ0UsV3lCZ0U0QjtBWHUwQi9COztBYnI0Qkc7RURFQSxjZWdGVztFZi9FWCxpQnlCMkR1RTtFekIxRHZFLHFCZThFVztBRHl6QmQ7O0FkcjRCRztFQUNELGFlMkVZO0FENnpCZDs7QVdsMUJHO0VBSUcsV1ZzRFk7QUQ0eEJsQjs7QVcvMEJFO0V6QjNFRCxZeUI0RThCO0V6QjNFOUIsbUJld0ZhO0VmdkZiLHFCZXVGYTtBRHUwQmQ7O0FkNTVCQztFQUNFLFd5QnVFNEI7QVh3MUIvQjs7QWI3NUJHO0VERUEsY2VnRlc7RWYvRVgsaUJ5QmtFdUU7RXpCakV2RSxxQmU4RVc7QURpMUJkOztBZDc1Qkc7RUFDRCxhZTJFWTtBRHExQmQ7O0FXbjJCRztFQUdHLG1CVldRO0VVVlIsV1YrQ1k7QURxekJsQjs7QWI1NkJHO0VER0EsbUJlc0VXO0FEdTJCZDs7QVdoMkJBO0VBQ0UscUJBQW9CO0VMMUJkLGVBakNvRDtBTis1QjVEOztBV2oyQkU7RUFDRSxjVlJVO0FENDJCZDs7QVdsMkJFO0VBRUUsZ0JBbkdJO0FYdThCUjs7QVdoMkJBO0VBQ0Usb0NBQW9DO0FYbTJCdEM7O0FXcDJCQTtFQUdJLGtCQUFrQjtFQUNsQixtQkFBbUI7QVhxMkJ2Qjs7QVlsOUJBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQUVBO0VyQkFDLFdxQkNxQjtFckJBckIsZXFCQThCO0V0QmdCN0IsUXNCZndCO0V0QmV4QixXc0JmbUM7RXRCa0JwQyxlQWZ1QjtFc0JGcEIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0RBQTBDO1VBQTFDLDBDQUEwQztBWnU5QjlDOztBWWgrQkE7RUFZUSw0QlhtTEM7RVduTEQsdUJYbUxDO0VXbkxELG9CWG1MQztFV2xMRCxVQUFTO0VBQ1Qsa0RBQTBDO1VBQTFDLDBDQUEwQztFQUMxQyxZQUFXO0FadzlCbkI7O0FhMytCQztFQUNDLG1CWndGWTtFWXZGWixZQUFZO0VBQ1osNkJBQTZCO0VBQzdCLGtCQUFrQjtFckJBbkIsb0VBQXVEO0VBQ3ZELGtCcUJBb0Q7RXJCQ3BELG1CcUJENEM7RXJCRTVDLGlCcUJGNEQ7QWJpL0I3RDs7QWE5K0JDO0VBQ0MseUJaaUZZO0FEZzZCZDs7QWMxL0JBO0V0QklDLG9FQUF1RDtFQUN2RCxrQnNCSm9EO0V0QktwRCxtQnNCTDRDO0V0Qk01QyxpQnNCTjREO0VBQzNELHFCQUFxQjtFQUNyQixjYmtGWTtBRDg2QmQ7O0FjbmdDQTtFQUtJLDRCYjhMSztFYTlMTCx1QmI4TEs7RWE5TEwsb0JiOExLO0VhN0xMLGNiZ0ZVO0FEazdCZDs7QWV4Z0NBO0VBQ0MsWUFBWTtFQUNaLHNCQUFzQjtBZjJnQ3ZCOztBTzVkSTtFUWpqQko7SUFLRSxXQUFVO0VmNmdDVjtBQUNGOztBZW5oQ0E7RXZCSUMsb0VBQXVEO0VBQ3ZELGtCdUJJaUQ7RXZCSGpELGdCdUJHeUM7RXZCRnpDLGlCdUJFeUQ7RUFDeEQscUJBQXFCO0VBQ3JCLGNBQWE7QWZpaENmOztBZTlnQ0M7RTlCUkEsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DOEJyRm9DO0U5QnNGdEMsa0M4QnRGc0M7RTlCdUZyQyx5QjhCdkZxQztVOUJ1RnJDLDhCOEJ2RnFDO0U5QndGbkMsNEI4QnhGbUM7RTlCMEdwQyx3QjhCekd5QjtFOUIwRzNCLHVCOEIxRzJCO0U5QjJHMUIseUI4QjNHMEI7TTlCMkcxQixzQjhCM0cwQjtVOUIyRzFCLG1COEIzRzBCO0FmNGhDN0I7O0FlN2lDQTtFQXFCRSxjQUFjO0FmNGhDaEI7O0FPaGdCSTtFUWpqQko7SUF3QkcsV0FBVztFZjhoQ1o7QUFDRjs7QWdCdmpDQTtFMUJ3QkMsa0JBWDBCO0VMUDFCLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQW1CViwyQitCMUI0QjtFL0IyQjlCLDBCK0IzQjhCO0UvQjRCN0IsNEIrQjVCNkI7RS9CNEI3Qiw2QitCNUI2QjtVL0I0QjdCLHNCK0I1QjZCO0UvQnVINUIsd0IrQnRIeUI7RS9CdUgzQix1QitCdkgyQjtFL0J3SDFCLHlCK0J4SDBCO00vQndIMUIsc0IrQnhIMEI7VS9Cd0gxQixtQitCeEgwQjtFL0JpR3pCLDRCK0JoRzZCO0UvQmlHL0IsMkIrQmpHK0I7RS9Ca0c5Qix3QitCbEc4QjtVL0JrRzlCLHVCK0JsRzhCO0UvQm1HNUIscUIrQm5HNEI7RUFDL0IsWUFBVztBaEJ3a0NiOztBTzdoQkk7RVNqakJKO0lBU0csVUFBVTtJQUNWLGNBQWM7RWhCMGtDZjtBQUNGOztBT3BpQkk7RVNqakJKO0lBY0csVUFBVTtJQUNWLGNBQWM7RWhCNGtDZjtBQUNGOztBZ0Ixa0NFO0UvQlpELG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQW1CViwyQitCVDZCO0UvQlUvQiwwQitCVitCO0UvQlc5Qiw0QitCWDhCO0UvQlc5Qiw2QitCWDhCO1UvQlc5QixzQitCWDhCO0V6QmhCaEMsV3lCaUJvQjtFekJoQnBCLFl5QmdCMEI7RS9CcUd2Qix3QitCcEcwQjtFL0JxRzVCLHVCK0JyRzRCO0UvQnNHM0IseUIrQnRHMkI7TS9Cc0czQixzQitCdEcyQjtVL0JzRzNCLG1CK0J0RzJCO0UvQitFMUIsNEIrQjlFOEI7RS9CK0VoQywyQitCL0VnQztFL0JnRi9CLHdCK0JoRitCO1UvQmdGL0IsdUIrQmhGK0I7RS9CaUY3QixxQitCakY2QjtBaEI0bENsQzs7QU9sa0JJO0VTL2hCRjtJQVFFLHVCQUFzQjtRQUF0QixvQkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLGFBQWE7RWhCOGxDZjtBQUNGOztBZ0I1bENHO0VBQ0MsWUFBWTtFQUNaLGlCQUFpQjtBaEIrbENyQjs7QU85a0JJO0VTbmhCRDtJQUtFLGNBQWM7SUFDZCxXQUFXO0VoQmltQ2Q7QUFDRjs7QWdCeG1DSTtFMUJURixTMEJtQjZCO0UxQm5CN0IsUTBCbUJxQztFMUJoQnRDLGtCQW5CMEI7RTBCb0N0QixjQUFjO0VBQ2Qsb0JBQW9CO0FoQm9tQ3pCOztBTzdsQkk7RVNuaEJBO0lBZUUsY0FBYztJQUNkLGVBQWU7RWhCc21DbkI7QUFDRjs7QWdCdm5DSTtFeEIxQkgsb0VBQXVEO0VBQ3ZELGtCd0I4Q3VEO0V4QjdDdkQsbUJ3QjZDK0M7RXhCNUMvQyxpQndCNEMrRDtFQUMzRCxnQkFBZ0I7QWhCeW1DckI7O0FnQi9uQ0k7RS9CeEJILG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGVixtQytCNUN1QztFL0I2Q3pDLGtDK0I3Q3lDO0UvQjhDeEMseUIrQjlDd0M7VS9COEN4Qyw4QitCOUN3QztFL0IrQ3RDLDRCK0IvQ3NDO0VBQ3RDLG1CQUFtQjtBaEJpbkN4Qjs7QWdCN29DSTtFQWdDQyxnQkFBZ0I7QWhCaW5DckI7O0FpQjVxQ0E7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGdCQUFnQjtBakIrcUNsQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBNSVhJTlMgRkxFWEJPWCBDUk9TU0JST1dTRVIgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gRmxleGJveCBkaXNwbGF5XG5AbWl4aW4gZmxleGJveCgpIHtcblx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XG5cdGRpc3BsYXk6IC1tb3otYm94O1xuXHRkaXNwbGF5OiAtbXMtZmxleGJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuXHRkaXNwbGF5OiBmbGV4O1xuICB9XG4gIFxuICAvLyBUaGUgJ2ZsZXgnIHNob3J0aGFuZFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gPHBvc2l0aXZlLW51bWJlcj4sIGluaXRpYWwsIGF1dG8sIG9yIG5vbmVcbiAgQG1peGluIGZsZXgoJHZhbHVlcykge1xuXHQtd2Via2l0LWJveC1mbGV4OiAkdmFsdWVzO1xuXHQgICAtbW96LWJveC1mbGV4OiAkdmFsdWVzO1xuXHRcdC13ZWJraXQtZmxleDogJHZhbHVlcztcblx0XHQgIC1tcy1mbGV4OiAkdmFsdWVzO1xuXHRcdFx0ICBmbGV4OiAkdmFsdWVzO1xuICB9XG4gIFxuICAvLyBGbGV4IEZsb3cgRGlyZWN0aW9uXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VcbiAgQG1peGluIGZsZXgtZGlyZWN0aW9uKCRkaXJlY3Rpb24pIHtcblx0LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0ICAgLW1vei1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0XHQtbXMtZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcbiAgfVxuICBcbiAgLy8gRmxleCBMaW5lIFdyYXBwaW5nXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIG5vd3JhcCB8IHdyYXAgfCB3cmFwLXJldmVyc2VcbiAgQG1peGluIGZsZXgtd3JhcCgkd3JhcCkge1xuXHQtd2Via2l0LWZsZXgtd3JhcDogJHdyYXA7XG5cdCAgIC1tb3otZmxleC13cmFwOiAkd3JhcDtcblx0XHQtbXMtZmxleC13cmFwOiAkd3JhcDtcblx0XHRcdGZsZXgtd3JhcDogJHdyYXA7XG4gIH1cbiAgXG4gIC8vIEZsZXggRGlyZWN0aW9uIGFuZCBXcmFwXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIDxmbGV4LWRpcmVjdGlvbj4gfHwgPGZsZXgtd3JhcD5cbiAgQG1peGluIGZsZXgtZmxvdygkZmxvdykge1xuXHQtd2Via2l0LWZsZXgtZmxvdzogJGZsb3c7XG5cdCAgIC1tb3otZmxleC1mbG93OiAkZmxvdztcblx0XHQtbXMtZmxleC1mbG93OiAkZmxvdztcblx0XHRcdGZsZXgtZmxvdzogJGZsb3c7XG4gIH1cbiAgXG4gIC8vIERpc3BsYXkgT3JkZXJcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxpbnRlZ2VyPlxuICBAbWl4aW4gb3JkZXIoJHZhbCkge1xuXHQtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAkdmFsOyAgXG5cdCAgIC1tb3otYm94LW9yZGluYWwtZ3JvdXA6ICR2YWw7ICAgICBcblx0XHRcdCAtbXMtZmxleC1vcmRlcjogJHZhbDsgICAgIFxuXHRcdFx0ICAtd2Via2l0LW9yZGVyOiAkdmFsOyAgXG5cdFx0XHRcdCAgb3JkZXI6ICR2YWw7XG4gIH1cbiAgXG4gIC8vIEZsZXggZ3JvdyBmYWN0b3JcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxudW1iZXI+XG4gIEBtaXhpbiBmbGV4LWdyb3coJGdyb3cpIHtcblx0LXdlYmtpdC1mbGV4LWdyb3c6ICRncm93O1xuXHQgICAtbW96LWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0LW1zLWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0XHRmbGV4LWdyb3c6ICRncm93O1xuICB9XG4gIFxuICAvLyBGbGV4IHNocmlua1xuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbSBzaHJpbmsgZmFjdG9yXG4gIC8vIDxudW1iZXI+IFxuICBAbWl4aW4gZmxleC1zaHJpbmsoJHNocmluaykge1xuXHQtd2Via2l0LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHQgICAtbW96LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHRcdC1tcy1mbGV4LXNocmluazogJHNocmluaztcblx0XHRcdGZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuICB9XG4gIFxuICAvLyBGbGV4IGJhc2lzXG4gIC8vIC0gdGhlIGluaXRpYWwgbWFpbiBzaXplIG9mIHRoZSBmbGV4IGl0ZW1cbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zbml0aWFsIG1haW4gc2l6ZSBvZiB0aGUgZmxleCBpdGVtXG4gIC8vIDx3aWR0aD4gXG4gIEBtaXhpbiBmbGV4LWJhc2lzKCR3aWR0aCkge1xuXHQtd2Via2l0LWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0ICAgLW1vei1mbGV4LWJhc2lzOiAkd2lkdGg7XG5cdFx0LW1zLWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0XHRcdGZsZXgtYmFzaXM6ICR3aWR0aDtcbiAgfVxuICBcbiAgLy8gQXhpcyBBbGlnbm1lbnRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGNvbnRhaW5lcnNcbiAgLy8gZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCBcbiAgQG1peGluIGp1c3RpZnktY29udGVudCgkanVzdGlmeSkge1xuXHQtd2Via2l0LWp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdCAgIC1tb3otanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHQtbXMtanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHRcdGp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdFx0XHQgIC1tcy1mbGV4LXBhY2s6ICRqdXN0aWZ5O1xuICB9XG4gIFxuICAvLyBQYWNraW5nIEZsZXggTGluZXNcbiAgLy8gLSBhcHBsaWVzIHRvOiBtdWx0aS1saW5lIGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLWNvbnRlbnQoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHRcdFx0YWxpZ24tY29udGVudDogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2ggXG4gIEBtaXhpbiBhbGlnbi1pdGVtcygkYWxpZ24pIHtcblx0LXdlYmtpdC1hbGlnbi1pdGVtczogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0LW1zLWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0XHRhbGlnbi1pdGVtczogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gYXV0byB8IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IGJhc2VsaW5lIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLXNlbGYoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tc2VsZjogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLXNlbGY6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tc2VsZjogJGFsaWduO1xuXHRcdFx0YWxpZ24tc2VsZjogJGFsaWduO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5AbWl4aW4gYnV0dG9uLXN0eWxlKCRjLCAkYy1ob3ZlciwgJGJnLCAkYmctaG92ZXIsICRib3JkZXIsICRib3JkZXItaG92ZXIpIHtcblx0Y29sb3I6ICRjO1xuXHRiYWNrZ3JvdW5kOiAkYmc7XG5cdGJvcmRlci1jb2xvcjogJGJvcmRlcjtcbiAgXG5cdHN2ZyB7XG5cdCAgZmlsbDogJGM7XG5cdH1cbiAgXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHQgIGNvbG9yOiAkYy1ob3Zlcjtcblx0ICBiYWNrZ3JvdW5kOiAkYmctaG92ZXI7XG5cdCAgYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWhvdmVyO1xuICBcblx0ICBzdmcge1xuXHRcdGZpbGw6ICRjLWhvdmVyO1xuXHQgIH1cblx0fTtcbn0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgT04tRVZFTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIG9uLWV2ZW50KCRzZWxmOiBmYWxzZSkge1xuXHRAaWYgJHNlbGYge1xuXHQgICYsXG5cdCAgJjpob3Zlcixcblx0ICAmOmFjdGl2ZSxcblx0ICAmOmZvY3VzIHtcblx0XHRAY29udGVudDtcblx0ICB9XG5cdH0gQGVsc2Uge1xuXHQgICY6aG92ZXIsXG5cdCAgJjphY3RpdmUsXG5cdCAgJjpmb2N1cyB7XG5cdFx0QGNvbnRlbnQ7XG5cdCAgfVxuXHR9XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIFdIRU4tSU5TSURFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiB3aGVuLWluc2lkZSgkY29udGV4dCkge1xuXHQjeyRjb250ZXh0fSAmIHtcblx0ICBAY29udGVudDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGNvbnRhaW5lcigkZmx1aWQ6IGZhbHNlKSB7XG5cdHBhZGRpbmctbGVmdDogJGNvbnRhaW5lci1wYWQ7XG5cdHBhZGRpbmctcmlnaHQ6ICRjb250YWluZXItcGFkO1xuXHRtYXJnaW46IDAgYXV0bztcblx0d2lkdGg6IDEwMCU7XG5cdEBpZiBub3QgJGZsdWlkIHtcblx0ICBAZWFjaCAkYnAsICR3aWR0aCBpbiAkY29udGFpbmVyLXdpZHRoIHtcblx0XHRAaW5jbHVkZSBtZWRpYShcIj49I3skYnB9XCIpIHtcblx0XHQgIHdpZHRoOiAkd2lkdGg7XG5cdFx0fTtcblx0ICB9XG5cdH1cbn0gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUE9TSVRJT04gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8vIFBvc2l0aW9uaW5nIGhlbHBlcnNcbkBtaXhpbiBhYnNvbHV0ZSgkYXJnczogJycpIHtcblx0QGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsICRhcmdzKTtcbiAgfVxuICBcbiAgQG1peGluIGZpeGVkKCRhcmdzOiAnJykge1xuXHRAaW5jbHVkZSBwb3NpdGlvbihmaXhlZCwgJGFyZ3MpO1xuICB9XG4gIFxuICBAbWl4aW4gcmVsYXRpdmUoJGFyZ3M6ICcnKSB7XG5cdEBpbmNsdWRlIHBvc2l0aW9uKHJlbGF0aXZlLCAkYXJncyk7XG4gIH1cbiAgXG4gIC8vIFBvc2l0aW9uaW5nXG4gIEBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb24sICRhcmdzKSB7XG5cdEBlYWNoICRvIGluIHRvcCByaWdodCBib3R0b20gbGVmdCB7XG5cdCAgJGk6IGluZGV4KCRhcmdzLCAkbyk7XG5cdCAgQGlmICRpIGFuZCAkaSArIDEgPD0gbGVuZ3RoKCRhcmdzKSBhbmQgdHlwZS1vZihudGgoJGFyZ3MsICRpICsgMSkpID09IG51bWJlciB7XG5cdFx0I3skb306IG50aCgkYXJncywgJGkgKyAxKTtcblx0ICB9XG5cdH1cblx0cG9zaXRpb246ICRwb3NpdGlvbjtcbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gU0laRSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcblx0d2lkdGg6ICR3aWR0aDtcblx0aGVpZ2h0OiAkaGVpZ2h0O1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOIFNFVC1GT05UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNldC1mb250KCAkZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseSAsICR3ZWlnaHQ6IG5vcm1hbCAsICRzdHlsZTogbm9ybWFsLCAkZm9udHNpemU6ICRiYXNlLWZvbnQtc2l6ZSApIHtcblx0Zm9udC1mYW1pbHk6ICRmYW1pbHkgLCAnQXJpYWwnLCAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcblx0Zm9udC1zdHlsZTogJHN0eWxlO1xuXHRmb250LXdlaWdodDogJHdlaWdodDtcblx0Zm9udC1zaXplOiAkZm9udHNpemU7XG5cdFxuICB9XG4gIEBtaXhpbiBzZXQtZm9udDIoICRmYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5ICwgJHdlaWdodDogbm9ybWFsKSB7XG5cdGZvbnQtZmFtaWx5OiAkZmFtaWx5ICwgJ0FyaWFsJywgJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XG5cdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICB9XG4gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIFJFTSBVTklUUyAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gVWx0aW1hdGUgUmVtIFVuaXRzXG5AZnVuY3Rpb24gcGFyc2VJbnQoJG4pIHtcblx0LyogMiAqL1xuXHRAcmV0dXJuICRuIC8gKCRuICogMCArIDEpO1xuICB9XG4gIEBtaXhpbiByZW0oJHByb3BlcnR5LCAkdmFsdWVzKSB7XG5cdCRweDogKCk7IC8qIDMgKi9cblx0JHJlbTogKCk7IC8qIDMgKi9cblx0QGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuXHQgIC8qIDQgKi9cblx0ICBAaWYgJHZhbHVlID09IDAgb3IgJHZhbHVlID09IGF1dG8ge1xuXHRcdC8qIDUgKi9cblx0XHQkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0JHJlbTogYXBwZW5kKCRyZW0sICR2YWx1ZSk7XG5cdCAgfSBAZWxzZSB7XG5cdFx0JHVuaXQ6IHVuaXQoJHZhbHVlKTsgLyogNiAqL1xuXHRcdCR2YWw6IHBhcnNlSW50KCR2YWx1ZSk7IC8qIDYgKi9cblx0XHRAaWYgJHVuaXQgPT0gJ3B4JyB7XG5cdFx0ICAvKiA3ICovXG5cdFx0ICAkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0ICAkcmVtOiBhcHBlbmQoJHJlbSwgKCR2YWwgLyAxMCArIHJlbSkpO1xuXHRcdH1cblx0XHRAaWYgJHVuaXQgPT0gJ3JlbScge1xuXHRcdCAgLyogNyAqL1xuXHRcdCAgJHB4OiBhcHBlbmQoJHB4LCAoJHZhbCAqIDEwICsgcHgpKTtcblx0XHQgICRyZW06IGFwcGVuZCgkcmVtLCAkdmFsdWUpO1xuXHRcdH1cblx0ICB9XG5cdH1cblx0QGlmICRweCA9PSAkcmVtIHtcblx0ICAvKiA4ICovXG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0fSBAZWxzZSB7XG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0ICAjeyRwcm9wZXJ0eX06ICRyZW07IC8qIDkgKi9cblx0fVxuICB9XG5cblxuXG5cbiAgQG1peGluIHgtcmVtICgkcHJvcGVydHksICR2YWx1ZXMsICRtYWluLWZvbnQtc2l6ZTogMTBweCkge1xuXG5cdC8vIEVtcHR5IGxpc3QgZm9yIGFsbCB2YWx1ZXMgaW4gcHhcblx0JHB4LXZhbHVlczogKCk7XG5cdCRyZW0tdmFsdWVzOiAoKTtcblxuXHQvLyBJdGVyYXRlIG92ZXIgZW50cmllc1xuXHRAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG5cblx0XHQvLyBJZiB0aGUgdmFsdWUgaXMgemVybyBvciBvZiBhIHR5cGUgdGhhdCBkb2VzbuKAmXQgbmVlZCBjb252ZXJzaW9uLCByZXR1cm4gdGhlIHZhbHVlIHVudG91Y2hlZFxuXHRcdEBpZiBpbmRleChhdXRvIGluaGVyaXQgaW5pdGlhbCBub25lIDAsICR2YWx1ZSkgb3IgdHlwZS1vZigkdmFsdWUpICE9IFwibnVtYmVyXCIge1xuXHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICR2YWx1ZSk7XG5cdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAkdmFsdWUpO1xuXG5cdFx0Ly8gT3RoZXJ3aXNlIGNvbnZlcnQgaXQgcHJvcGVybHlcblx0XHR9IEBlbHNlIHtcblx0XHRcdCR1bml0OiB1bml0KCR2YWx1ZSk7XG5cblx0XHRcdEBpZiAkdW5pdCA9PSAncHgnIHtcblx0XHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICN7c3RyaXAtdW5pdCgkdmFsdWUpfSAqIDFweCApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAoc3RyaXAtdW5pdCgkdmFsdWUpIC8gc3RyaXAtdW5pdCgkbWFpbi1mb250LXNpemUpICogMXJlbSkpO1xuXHRcdFx0fSBAZWxzZSB7XG5cdFx0XHRcdCRweC12YWx1ZXM6IGFwcGVuZCgkcHgtdmFsdWVzLCAoJHZhbHVlICogJG1haW4tZm9udC1zaXplKSApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAjeyR2YWx1ZX0gKiAxcmVtKTtcblx0XHRcdH1cblxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcHJvcGVydHkgYW5kIGl0cyBsaXN0IG9mIGNvbnZlcnRlZCB2YWx1ZXNcblx0I3skcHJvcGVydHl9OiAjeyRweC12YWx1ZXN9O1xuXHQjeyRwcm9wZXJ0eX06ICN7JHJlbS12YWx1ZXN9O1xufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBCT1JERVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGJvcmRlcigkZGlyZWN0aW9uLCAkd2lkdGgsICRzdHlsZSwgJGNvbG9yKSB7XG5cdGJvcmRlci0jeyRkaXJlY3Rpb259OiAkd2lkdGggJHN0eWxlICRjb2xvcjtcbiAgfVxuICAiLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU5TIFBBRERJTkcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gcGFkZGluZygkdG9wLCAkcmlnaHQsICRib3R0b20sICRsZWZ0KSB7IFxuXHRwYWRkaW5nOiAkdG9wICRyaWdodCAkYm90dG9tICRsZWZ0O1xuICB9XG4gIFxuICBAbWl4aW4gcGFkZGluZy1jb21wb25lbnQoJHNwYWNlOiAkc20pIHtcblx0cGFkZGluZzogJHNwYWNlO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgQk9YLVNIQURPVyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gc2hhZG93LWxvZ28oJHgtYXhpczogMnB4LCAkeS1heGlzOiAycHgsICRibHVyOiAycHgsICRjb2xvcjogIzAyMDIwMikge1xuXHRmaWx0ZXI6ZHJvcC1zaGFkb3coICR4LWF4aXMgJHktYXhpcyAkYmx1ciAkY29sb3IgKTtcblx0LXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggMnB4ICMwMjAyMDIpO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGZhZGUoJHR5cGUpIHtcblx0QGlmICR0eXBlID09ICdoaWRlJyB7XG5cdCAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXHQgIG9wYWNpdHk6IDA7XG5cdCAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAkdHQsIG9wYWNpdHkgJHR0O1xuXHR9XG5cdEBlbHNlIGlmICR0eXBlID09ICdzaG93JyB7XG5cdCAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0ICBvcGFjaXR5OiAxO1xuXHQgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgJHR0LCBvcGFjaXR5ICR0dDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJWxpc3RyZXNldCB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0bGlzdC1zdHlsZTogbm9uZTtcbiAgfSIsIkBjaGFyc2V0ICdVVEYtOCc7XG5cbi8qXG4gICAgR3JpZCBjbGFzcyBuYW1lXG4qL1xuJGltLWdyaWQtY2xhc3M6ICdncmlkJyAhZGVmYXVsdDtcblxuLypcbiAgICBDZWxsIGNsYXNzIG5hbWVcbiovXG4kaW0tZ3JpZC1jZWxsLWNsYXNzOiAnZ3JpZC1jZWxsJyAhZGVmYXVsdDtcblxuLypcbiAgICBHdXR0ZXIgc2l6ZVxuKi9cbiRpbS1ncmlkLWd1dHRlci1zaXplOiAwICFkZWZhdWx0O1xuXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbiRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoOiBmYWxzZSAhZGVmYXVsdDtcblxuLypcbiAgICBHcmlkXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4vKlxuICAgIEdyaWQgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvID4gKiB7XG4gICAgZmxleDogMTtcbiAgICBmbGV4LWdyb3c6IDQ7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsIG1vZGlmaWVyc1xuICovXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYXV0by1zaXplIHtcbiAgICBmbGV4OiBub25lO1xufVxuXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tbGlnaHQge1xuICAgIGZsZXgtZ3JvdzogMjtcbn1cblxuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLWhlYXZ5IHtcbiAgICBmbGV4LWdyb3c6IDg7XG59XG5cbi8qXG4gICAgR3JpZCBndXR0ZXJzXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzIHtcbiAgICBtYXJnaW46ICgtJGltLWdyaWQtZ3V0dGVyLXNpemUpIDAgMCAoLSRpbS1ncmlkLWd1dHRlci1zaXplKTtcbn1cbi4jeyRpbS1ncmlkLWNsYXNzfS0tZ3V0dGVycyA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzID4gKiB7XG4gICAgcGFkZGluZzogJGltLWdyaWQtZ3V0dGVyLXNpemUgMCAwICRpbS1ncmlkLWd1dHRlci1zaXplO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLXRvcCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jbGFzc30tLWJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuLiN7JGltLWdyaWQtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgRmxleGlibGUgY2VsbHNcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLWZsZXgtZ3JpZC1jZWxsID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30sIC8vIE9sZGVyIHNlbGVjdG9yIGtlcHQgZm9yIGJhY2t3YXJkcyBjb21wYXRhYmlsaXR5LlxuLiN7JGltLWdyaWQtY2xhc3N9LS1mbGV4ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi4jeyRpbS1ncmlkLWNsYXNzfS0tanVzdGlmeS1jZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS10b3Age1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYm90dG9tIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuLypcbiAgICBHZW5lcmF0ZSBncmlkIGNsYXNzZXNcbiovXG5AbWl4aW4gaW0tZ3JpZC1jb2x1bW5zKCRjb2x1bW5zLi4uKSB7XG4gICAgQGVhY2ggJGkgaW4gJGNvbHVtbnMge1xuICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tZml0ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGwgPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tI3skbn0tI3skaX0gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfTpub3QoW2NsYXNzKj0nI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tJ10pIHtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSk7IH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tI3skbn0tI3skaX0ge1xuXG4gICAgICAgICAgICAgICAgZmxleDogMCAwICgoJG4gLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9ID4gKiB7XG4gICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoMSAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7IH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBlYWNoICRicmVha3BvaW50IGluICRicmVha3BvaW50cyB7XG4gICAgICAgICRicmVha3BvaW50LW5hbWU6IG50aCgkYnJlYWtwb2ludCwgMSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoI3snPj0nICsgJGJyZWFrcG9pbnQtbmFtZX0pIHtcbiAgICAgICAgICAgIEBlYWNoICRpIGluICRjb2x1bW5zIHtcbiAgICAgICAgICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1maXRcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGxcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLSN7JG59LSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9Om5vdChbY2xhc3MqPScjeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0nXSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICB7IG1heC13aWR0aDogKCgkbiAvICRpKSAqIDEwMCUpOyB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0jeyRufS0jeyRpfVxcQCN7JGJyZWFrcG9pbnQtbmFtZX0ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBAaWYgJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+ICoge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKDEgLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBGTEVYQk9YIENST1NTQlJPV1NFUiAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIE9OLUVWRU5UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gV0hFTi1JTlNJREUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOUyBQT1NJVElPTiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBTSVpFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU4gU0VULUZPTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOUyBSRU0gVU5JVFMgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gQk9SREVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUEFERElORyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIEJPWC1TSEFET1cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLypcbiAgICBHcmlkIGNsYXNzIG5hbWVcbiovXG4vKlxuICAgIENlbGwgY2xhc3MgbmFtZVxuKi9cbi8qXG4gICAgR3V0dGVyIHNpemVcbiovXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbi8qXG4gICAgR3JpZFxuKi9cbi5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsXG4qL1xuLmdyaWQtY2VsbCxcbi5ncmlkLS1hdXRvID4gKiB7XG4gIGZsZXg6IDE7XG4gIGZsZXgtZ3JvdzogNDtcbn1cblxuLypcbiAgICBHcmlkIGNlbGwgbW9kaWZpZXJzXG4gKi9cbi5ncmlkLWNlbGwtLWF1dG8tc2l6ZSB7XG4gIGZsZXg6IG5vbmU7XG59XG5cbi5ncmlkLWNlbGwtLWxpZ2h0IHtcbiAgZmxleC1ncm93OiAyO1xufVxuXG4uZ3JpZC1jZWxsLS1oZWF2eSB7XG4gIGZsZXgtZ3JvdzogODtcbn1cblxuLypcbiAgICBHcmlkIGd1dHRlcnNcbiovXG4uZ3JpZC0tZ3V0dGVycyB7XG4gIG1hcmdpbjogLTMwcHggMCAwIC0zMHB4O1xufVxuXG4uZ3JpZC0tZ3V0dGVycyA+IC5ncmlkLWNlbGwsXG4uZ3JpZC0tYXV0by5ncmlkLS1ndXR0ZXJzID4gKiB7XG4gIHBhZGRpbmc6IDMwcHggMCAwIDMwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uZ3JpZC0tdG9wIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLS1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi5ncmlkLS1jZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKlxuICAgIEZsZXhpYmxlIGNlbGxzXG4qL1xuLmdyaWQtLWZsZXgtZ3JpZC1jZWxsID4gLmdyaWQtY2VsbCxcbi5ncmlkLS1mbGV4ID4gLmdyaWQtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi5ncmlkLS1qdXN0aWZ5LWNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi5ncmlkLWNlbGwtLXRvcCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLWNlbGwtLWJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uZ3JpZC1jZWxsLS1jZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgR2VuZXJhdGUgZ3JpZCBjbGFzc2VzXG4qL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzI4QzY2MDtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcsIHN2ZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYTpob3ZlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuXG5hZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uanMtYWxsY2xpY2ssIC5qcy10b2dnbGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmh0bWwsIGJvZHkge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJvZHkge1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuLnRpbnl0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4udGlueXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjg4ODg5cmVtO1xufVxuXG4udGlueXRleHQgPiAqIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLnRpbnl0ZXh0ID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi50aW55dGV4dCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi50aW55dGV4dCBoMSwgLnRpbnl0ZXh0IGgyLCAudGlueXRleHQgaDMsIC50aW55dGV4dCBoNCB7XG4gIG1hcmdpbjogMS4yNXJlbSAwIDAuNXJlbTtcbn1cblxuLnRpbnl0ZXh0IHVsIGxpIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4udGlueXRleHQgYVtocmVmXj1cIm1haWx0b1wiXSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAxLjc1cmVtO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL2VudmVsb3BlLnN2Z1wiKSBjZW50ZXIgbGVmdCBuby1yZXBlYXQ7XG59XG5cbi50aW55dGV4dCBzdHJvbmcge1xuICBmb250LXdlaWdodDogODAwO1xufVxuXG4udGlueXRleHQgZW0ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi50aW55dGV4dCB1bCwgLnRpbnl0ZXh0IG9sIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMS4yNXJlbTtcbn1cblxuLnRpbnl0ZXh0IHVsIGxpLCAudGlueXRleHQgb2wgbGkge1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGlueXRleHQgLmVtYmVkZGVkLWVudGl0eSB7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luOiAxcmVtIDFyZW0gMXJlbSAwO1xuICB9XG59XG5cbi50aW55dGV4dC0tc21hbGwge1xuICBmb250LXNpemU6IDAuODg4ODlyZW07XG59XG5cbi52aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbn1cblxuLmNvbnRlbnQtbGVmdCA+ICoge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLmNvbnRlbnQtY2VudGVyID4gKiB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5jb250ZW50LXJpZ2h0ID4gKiB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLmxlZnQtcGFuZWwge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xuICB3aWR0aDogNDgwcHg7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgfVxufVxuXG4ubGVmdC1wYW5lbF9fd3JhcHBlciB7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubGVmdC1wYW5lbF9fYm9keSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5sZWZ0LXBhbmVsX19ib2R5IHAge1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxlZnQtcGFuZWxfX2JvZHkgcCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbi5sZWZ0LXBhbmVsX19ib2R5IGJ1dHRvbiwgLmxlZnQtcGFuZWxfX2JvZHkgaW5wdXQge1xuICBtYXJnaW4tdG9wOiAzLjJyZW07XG4gIHdpZHRoOiAxNXJlbTtcbiAgcGFkZGluZzogMXJlbSAycmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxlZnQtcGFuZWxfX2JvZHkgYnV0dG9uLCAubGVmdC1wYW5lbF9fYm9keSBpbnB1dCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2hlYWRlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWZsb3c6IGNvbHVtbjtcbiAgLW1vei1mbGV4LWZsb3c6IGNvbHVtbjtcbiAgLW1zLWZsZXgtZmxvdzogY29sdW1uO1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLmxlZnQtcGFuZWxfX2hlYWRlciB7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2hlYWRlcl9fd3JhcHBlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tcy1mbGV4LXBhY2s6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctYm90dG9tOiAxNnJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAubGVmdC1wYW5lbF9faGVhZGVyX193cmFwcGVyIHtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5sZWZ0LXBhbmVsX19mb290ZXIge1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICB9XG59XG5cbi5yaWdodC1wYW5lbCB7XG4gIHdpZHRoOiA0NyU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnJpZ2h0LXBhbmVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4uYnRuIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBwYWRkaW5nOiAxcmVtIDIuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cblxuLmJ0biBzdmcge1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cztcbn1cblxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tcHJpbWFyeTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJ0bi0tcHJpbWFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMzY2NiNmY7XG4gIGJveC1zaGFkb3c6IDAgNXB4IDIwcHggMCByZ2JhKDI5LCAyOSwgMzEsIDAuMDkpO1xuICBvcGFjaXR5OiAuOTtcbn1cblxuLmJ0bi0tcHJpbWFyeTphY3RpdmUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuOTIpO1xufVxuXG4uYnRuLS1kYXJrIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbn1cblxuLmJ0bi0tZGFyayBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZGFyazpob3ZlciwgLmJ0bi0tZGFyazphY3RpdmUsIC5idG4tLWRhcms6Zm9jdXMge1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xufVxuXG4uYnRuLS1kYXJrOmhvdmVyIHN2ZywgLmJ0bi0tZGFyazphY3RpdmUgc3ZnLCAuYnRuLS1kYXJrOmZvY3VzIHN2ZyB7XG4gIGZpbGw6IGJsYWNrO1xufVxuXG4uYnRuLS1kYXJrOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5idG4tLWdvb2dsZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI0RCMzIzNjtcbiAgYm9yZGVyLWNvbG9yOiAjREIzMjM2O1xuICB3aWR0aDogMzI0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0RCMzIzNjtcbn1cblxuLmJ0bi0tZ29vZ2xlIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIsIC5idG4tLWdvb2dsZTphY3RpdmUsIC5idG4tLWdvb2dsZTpmb2N1cyB7XG4gIGNvbG9yOiAjREIzMjM2O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyLWNvbG9yOiAjREIzMjM2O1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIgc3ZnLCAuYnRuLS1nb29nbGU6YWN0aXZlIHN2ZywgLmJ0bi0tZ29vZ2xlOmZvY3VzIHN2ZyB7XG4gIGZpbGw6ICNEQjMyMzY7XG59XG5cbi5idG4tLWdvb2dsZTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjREIzMjM2O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5idG4tLWdvb2dsZSB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICB9XG59XG5cbi5idG4tLWZhY2Vib29rIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjM0I1OTk4O1xuICBib3JkZXItY29sb3I6ICMzQjU5OTg7XG4gIHdpZHRoOiA2MHB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuXG4uYnRuLS1mYWNlYm9vayBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZmFjZWJvb2s6aG92ZXIsIC5idG4tLWZhY2Vib29rOmFjdGl2ZSwgLmJ0bi0tZmFjZWJvb2s6Zm9jdXMge1xuICBjb2xvcjogIzNCNTk5ODtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzNCNTk5ODtcbn1cblxuLmJ0bi0tZmFjZWJvb2s6aG92ZXIgc3ZnLCAuYnRuLS1mYWNlYm9vazphY3RpdmUgc3ZnLCAuYnRuLS1mYWNlYm9vazpmb2N1cyBzdmcge1xuICBmaWxsOiAjM0I1OTk4O1xufVxuXG4uYnRuLS1mYWNlYm9vazphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjM0I1OTk4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJ0bi0teWVsbG93IHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjNzY4MDkzO1xuICBib3JkZXItY29sb3I6ICM3NjgwOTM7XG59XG5cbi5idG4tLXllbGxvdyBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0teWVsbG93OmhvdmVyLCAuYnRuLS15ZWxsb3c6YWN0aXZlLCAuYnRuLS15ZWxsb3c6Zm9jdXMge1xuICBjb2xvcjogIzc2ODA5MztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzc2ODA5Mztcbn1cblxuLmJ0bi0teWVsbG93OmhvdmVyIHN2ZywgLmJ0bi0teWVsbG93OmFjdGl2ZSBzdmcsIC5idG4tLXllbGxvdzpmb2N1cyBzdmcge1xuICBmaWxsOiAjNzY4MDkzO1xufVxuXG4uYnRuLS15ZWxsb3c6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5idG4tLWdyZXkge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6ICM3NjgwOTM7XG4gIGJvcmRlci1jb2xvcjogIzc2ODA5Mztcbn1cblxuLmJ0bi0tZ3JleSBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZ3JleTpob3ZlciwgLmJ0bi0tZ3JleTphY3RpdmUsIC5idG4tLWdyZXk6Zm9jdXMge1xuICBjb2xvcjogIzc2ODA5MztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzc2ODA5Mztcbn1cblxuLmJ0bi0tZ3JleTpob3ZlciBzdmcsIC5idG4tLWdyZXk6YWN0aXZlIHN2ZywgLmJ0bi0tZ3JleTpmb2N1cyBzdmcge1xuICBmaWxsOiAjNzY4MDkzO1xufVxuXG4uYnRuLS1ncmV5OmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICM3NjgwOTM7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYnRuLS1iZWlnZTpob3ZlciwgLmJ0bi0tYmVpZ2U6YWN0aXZlLCAuYnRuLS1iZWlnZTpmb2N1cyB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG59XG5cbi5idG4tc2ltcGxlIHtcbiAgbWFyZ2luOiAycmVtIDFyZW0gMCAwO1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbi5idG4tc2ltcGxlLS1tdXRlZCB7XG4gIGNvbG9yOiAjRjNGM0Y0O1xufVxuXG4uYnRuLXNpbXBsZS0tcHJpbWFyeSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5idG4tZ3JheSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjI2LCAyMjQsIDIxOSwgMC41KTtcbn1cblxuLmJ0bi1ncmF5IHNwYW4ge1xuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT01QT05FTlQgdG9UT1AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi50b1RvcCB7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDMuNzJyZW07XG4gIHRvcDogODYlO1xuICByaWdodDogMnJlbTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5OTtcbiAgYmFja2dyb3VuZDogIzRiNDYzZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwYWRkaW5nOiAxLjJyZW0gMXJlbTtcbiAgb3BhY2l0eTogMC42O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLnRvVG9wOmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XG4gIG9wYWNpdHk6IDE7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW5wdXQtbm9ybWFsIHtcbiAgYmFja2dyb3VuZDogI0YzRjNGNDtcbiAgaGVpZ2h0OiA0cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LWZhbWlseTogXCJTYXJhYnVuXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLnVrLWlucHV0OmZvY3VzLCAudWstc2VsZWN0OmZvY3VzLCAudWstdGV4dGFyZWE6Zm9jdXMge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMjhDNjYwO1xufVxuXG4ubGluay10ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMyOEM2NjA7XG59XG5cbi5saW5rLXRleHQ6aG92ZXIge1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cztcbiAgY29sb3I6ICMzY2NiNmY7XG59XG5cbi5sb2dpbi1mb3JtIHtcbiAgd2lkdGg6IDQwMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMi40cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxvZ2luLWZvcm0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5sb2dpbi1mb3JtIGxhYmVsIHtcbiAgZm9udC1mYW1pbHk6IFwiU2FyYWJ1blwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxcmVtIDA7XG59XG5cbi5sb2dpbi1mb3JtX19wYXNzd29yZCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1mbGV4LXBhY2s6IHNwYWNlLWJldHdlZW47XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxvZ2luLWZvcm0gYnV0dG9uIHtcbiAgd2lkdGg6IDEyLjZyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW4tZm9ybSBidXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5sb2dpbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW4ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5sb2dpbiB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1vei1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW5fX3dyYXBwZXIge1xuICAgIGp1c3RpZnktY29udGVudDogdW5zZXQ7XG4gICAgaGVpZ2h0OiB1bnNldDtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciB7XG4gIHdpZHRoOiA0MDBweDtcbiAgcGFkZGluZzogMS40cmVtIDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW5fX3dyYXBwZXJfX2hlYWRlciB7XG4gICAgcGFkZGluZzogdW5zZXQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmxvZ2luX193cmFwcGVyX19oZWFkZXIgLmJ1c2luZXNzIHtcbiAgdG9wOiA0cmVtO1xuICByaWdodDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTIuNHJlbTtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW5fX3dyYXBwZXJfX2hlYWRlciAuYnVzaW5lc3Mge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBvc2l0aW9uOiB1bnNldDtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciBoMSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNhcmFidW5cIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciAuc29jaWFsLXNpZ25pbiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1mbGV4LXBhY2s6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDRyZW0gMCAwIDA7XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIC51ay1kaXZpZGVyLWljb24ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ucGFnZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8vIGluY2x1ZGUtbWVkaWEgYnJlYWtwb2ludHNcbiRicmVha3BvaW50czogKFxuICB4czogMzIwcHgsXG4gIHNtOiA3NjhweCxcbiAgbWQ6IDk5MnB4LFxuICBsZzogMTIwMHB4LFxuICB4bDogMTQ0MHB4LFxuKSAhZGVmYXVsdDtcblxuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKScsXG4gICdyZXRpbmEzeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpJ1xuKSAhZGVmYXVsdDsgXG5cbi8vIFNwYWNpbmcgdW5pdFxuJHN1OiA0cHggIWRlZmF1bHQ7XG5cbi8vIEdsb2JhbCBVbml0XG4keHM6IDFyZW07XG4kc206IDEuNXJlbTtcbiRtZDogMnJlbTtcbiRsZzogM3JlbTtcbiR4bDogNHJlbTtcblxuXG5cbi8vIExpbmUgSGVpZ2h0XG4vLyBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXIgPT4gJGxoLWJhc2U6ICgxICogMTApICsgcHg7IFxuJGxoLWJhc2U6IDFyZW07XG4kbGgteHM6IDEuOHJlbTtcbiRsaC1zOiAycmVtO1xuJGxoLXNtOiAyLjRyZW07XG4kbGgtc2w6IDIuNnJlbTtcbiRsaC1tZCA6IDIuOHJlbTtcbiRsaC1sZzogM3JlbTtcbiRsaC14bDogMy40cmVtO1xuJGxoLXh4bDogNC45cmVtO1xuXG4vLyBQYWRkaW5nIFVuaXRcbiRwdDogMnJlbTtcbiRwcjogMnJlbTtcbiRwYjogMnJlbTtcbiRwbDogMnJlbTtcblxuLy8gTWFyZ2luIFVuaXRcbiRtdDogMnJlbTtcbiRtcjogMnJlbTtcbiRtYjogMnJlbTtcbiRtbDogMnJlbTtcblxuLy8gTGV0dGVyIFNwYWNpbmdcbiRscy14eHM6IDAuNjk2MjU4cHg7XG4kbHMteHM6IDAuODgxMjAxcHg7XG4kbHMtc206IDAuOHB4O1xuJGxzOiAxcHg7XG4kbHMtbWQ6IDZweDtcblxuLy8gY29udGFpbmVyJ3Mgc2V0dGluZ3NcbiRjb250YWluZXItd2lkdGg6IChcbiAgc206IDc1MHB4LFxuICBtZDogOTcwcHgsXG4gIGxnOiAxMTcwcHgsXG4gIC8vIHhsOiAxNTYwcHgsXG4pICFkZWZhdWx0O1xuJGNvbnRhaW5lci1wYWQ6IDE1cHggIWRlZmF1bHQ7XG5cbi8vIEdyaWQgY2xhc3MgbmFtZVxuJGltLWdyaWQtY2xhc3M6ICdncmlkJztcbi8vIENlbGwgY2xhc3MgbmFtZVxuJGltLWdyaWQtY2VsbC1jbGFzczogJ2dyaWQtY2VsbCc7XG4vLyBTZXR0aW5nIGd1dHRlcnNcbiRpbS1ncmlkLWd1dHRlci1zaXplOiAzMHB4O1xuLy8gT3B0aW9uYWxseSBpbmNsdWRlIG1heC13aWR0aCB0byBmaXggSUUgaXNzdWVzXG4kaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aDogdHJ1ZTtcblxuLy8gY29sb3JzXG4kdGV4dC1jb2xvcjogYmxhY2s7XG5cbiRjb2xvcnM6IChcbiAgcHJpbWFyeTogKFxuICAgIDA6ICMyOEM2NjAsXG4gICAgMTogIzNjY2I2ZiwgLy9ob3ZlclxuICApLFxuICBiZzogKFxuICAgIDA6ICNGM0YzRjQsXG4gICAgMTogIzI4QzY2MCxcbiAgICAyOiByZ2IoMTksIDE2NywgNzEpLFxuICAgIDM6ICNEQjMyMzYsIC8vR29vZ2xlXG4gICAgNDogIzNCNTk5OCwgLy9GYWNlYm9va1xuICAgIDU6ICM3NjgwOTNcbiAgKSxcbiAgbW9kYWw6IChcbiAgICAwOiAjZmZmZmZmZjBcbiAgKVxuKTtcblxuLy8gTWFpbiBDb2xvcnNcbiRjb2xvci13ZWVkbHk6ICAgICMyOEM2NjAgIWRlZmF1bHQ7IC8vIHdlZWRseSBncmVlblxuJGNvbG9yLWluZm86ICAgICAgIzIwODNGRSAhZGVmYXVsdDsgLy8gYmx1ZVxuJGNvbG9yLXN1Y2Nlc3M6ICAgIzJGQ0E3NCAhZGVmYXVsdDsgLy8gZ3JlZW5cbiRjb2xvci13YXJuaW5nOiAgICNmNWI4NDggIWRlZmF1bHQ7IC8vIHllbGxvd1xuJGNvbG9yLWRhbmdlcjogICAgI0VENEQ0RCAhZGVmYXVsdDsgLy8gcmVkXG4kY29sb3ItZmFuY3k6IFx0ICAjNkYzNUYwICFkZWZhdWx0OyAvLyBwdXJwbGVcbiRjb2xvci1wcmltYXJ5OiAgICMyNTI1MjkgIWRlZmF1bHQ7IC8vIGJsYWNrXG4kY29sb3Itc2Vjb25kYXJ5OiAjNzY4MDkzICFkZWZhdWx0OyAvLyBncmV5XG5cbi8vIEV4dHJhIENvbG9yc1xuJGNvbG9yLXBpbms6ICNGNDRDNjcgIWRlZmF1bHQ7IC8vIHBpbmtcblxuLy8gTGlnaHQgQ29sb3JzXG4kY29sb3ItaW5mby1saWdodDogICAgICAjRTBFQkZGICFkZWZhdWx0OyAvLyBibHVlXG4kY29sb3Itc3VjY2Vzcy1saWdodDogICAjREFGNEU2ICFkZWZhdWx0OyAvLyBncmVlblxuJGNvbG9yLXdhcm5pbmctbGlnaHQ6ICAgI0ZGRUNEQSAhZGVmYXVsdDsgLy8geWVsbG93XG4kY29sb3ItZGFuZ2VyLWxpZ2h0OiAgICAjRkZFMkUyICFkZWZhdWx0OyAvLyByZWRcbiRjb2xvci1wcmltYXJ5LWxpZ2h0OiAgICNFOUVDRjIgIWRlZmF1bHQ7IC8vIGJsYWNrXG4kY29sb3ItZmFuY3ktbGlnaHQ6ICAgICAjRTlFMEZGICFkZWZhdWx0OyAvLyBwdXJwbGVcblxuLy8gQmFzaWMgQ29sb3JzXG4kY29sb3Itc2t5LWxpZ2h0OiAjRjRGNkY5ICFkZWZhdWx0O1xuJGNvbG9yLXNreTogICAgICAgI0VDRURGMiAhZGVmYXVsdDtcbiRjb2xvci1za3ktZGFyazogICNFMUUyRTggIWRlZmF1bHQ7XG5cbiRjb2xvci1pbmstbGlnaHQ6ICM5OUE1QkQgIWRlZmF1bHQ7XG4kY29sb3ItaW5rOiAgICAgICAjNzY4MDkzICFkZWZhdWx0O1xuJGNvbG9yLWluay1kYXJrOiAgIzI1MjUyOSAhZGVmYXVsdDtcblxuJGNvbG9yLXdoaXRlOiAjZmZmICFkZWZhdWx0O1xuXG4vLyBNYWluIEdyYWRpZW50c1xuJGdyYWRpZW50LWluZm86ICAgICAgIzFEN0JGMCwgIzIwODNGRSAhZGVmYXVsdDtcbiRncmFkaWVudC1zdWNjZXNzOiAgICMyOEM3NkYsICMyQ0NGNzUgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtd2FybmluZzogICAjRjVBMTU1LCAjRjVCODU1ICFkZWZhdWx0O1xuJGdyYWRpZW50LWRhbmdlcjogICAgI0VFNDM0MywgI0VDNUY1RiAhZGVmYXVsdDtcbiRncmFkaWVudC1wcmltYXJ5OiAgICMyNTI1MjksICM0NDQ0NDkgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtc2Vjb25kYXJ5OiAjNzY4MDkzLCAjOTY5RkIwICFkZWZhdWx0O1xuJGdyYWRpZW50LXdlZWRseTogICAgIzI4QzY2MCwgIzIwQkU1OCAhZGVmYXVsdDtcblxuLy8gRXh0cmEgR3JhZGllbnRzXG4kZ3JhZGllbnQtZmFuY3k6ICM0RjVFRjUsICM2QTc3RkY7IC8vIHB1cnBsZVxuXG5cbi8vIEJyYW5kIENvbG9yXG4vL1xuLy8gVGhlIGJyYW5kIGNvbG9yIG9mIHRoZSB3aG9sZSBraXQsIHdpbGwgYWZmZWN0IG1vc3QgVUkgY29tcG9uZW50cyBsaWtlIHRvZ2dsZXMsXG4vLyBidXR0b25zIGFuZCBzd2l0Y2hzLlxuLy9cblxuJGJyYW5kLWNvbG9yOiAkY29sb3Itd2VlZGx5ICFkZWZhdWx0O1xuJGJvZHktYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXNreS1saWdodCAhZGVmYXVsdDtcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZSAhZGVmYXVsdDtcblxuXG4vLyBmb250c1xuJGJhc2UtZm9udC1mYW1pbHk6ICdTYXJhYnVuJywgc2Fucy1zZXJpZjtcblxuJGJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xuJGJhc2UtbGluZS1oZWlnaHQ6IDI0cHggIWRlZmF1bHQ7XG5cbi8vIEZvbnQgV2VpZ2h0c1xuJGZvbnQtd2VpZ2h0LWxpZ2h0OiAzMDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtbm9ybWFsOiA0MDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDUwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1ib2xkOiA2MDAgIWRlZmF1bHQ7XG5cbi8vIFRleHRcbiR0ZXh0LXNtYWxsLWZvbnQtc2l6ZTogcmVtKDEycHgpICFkZWZhdWx0O1xuJHRleHQtZm9udC1zaXplOiByZW0oMTRweCkgIWRlZmF1bHQ7XG4kdGV4dC1sYXJnZS1mb250LXNpemU6IHJlbSgxNnB4KSAhZGVmYXVsdDtcblxuJHRleHQtY29sb3I6ICRjb2xvci1pbmsgIWRlZmF1bHQ7XG4kdGV4dC1pbnZlcnNlLWNvbG9yOiAkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kdGV4dC1zdHJvbmctY29sb3I6ICRjb2xvci1pbmsgIWRlZmF1bHQ7XG5cbi8vIEhlYWRpbmdzXG4kaGVhZGluZy1jb2xvcjogJGNvbG9yLWluay1kYXJrO1xuJGhlYWRpbmctbWFyZ2luOiAwO1xuJGhlYWRpbmctZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1zZW1pYm9sZDtcblxuJGgxLWZvbnQtc2l6ZTogcmVtKDM2cHgpICFkZWZhdWx0O1xuJGgyLWZvbnQtc2l6ZTogcmVtKDI4cHgpICFkZWZhdWx0O1xuJGgzLWZvbnQtc2l6ZTogcmVtKDI0cHgpICFkZWZhdWx0O1xuJGg0LWZvbnQtc2l6ZTogcmVtKDIwcHgpICFkZWZhdWx0O1xuJGg1LWZvbnQtc2l6ZTogcmVtKDE4cHgpICFkZWZhdWx0O1xuJGg2LWZvbnQtc2l6ZTogcmVtKDE2cHgpICFkZWZhdWx0O1xuXG4vLyBMaW5rc1xuJGxpbmstY29sb3I6ICRjb2xvci13ZWVkbHk7XG4kbGluay1ob3Zlci1jb2xvcjogJGNvbG9yLXdlZWRseTtcblxuLy8gVHJhbnNpdGlvbnNcbiR0dDogMC41czsiLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiKiwgKjo6YmVmb3JlLCAqOjphZnRlcntcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IocHJpbWFyeSwgMCk7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDEpO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW46IDA7XG59XG5cbmltZywgc3Zne1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBnZXQtY29sb3IocHJpbWFyeSwgMik7XG4gICY6aG92ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gICAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAyKTtcbiAgfVxufVxuXG5hZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uanMtYWxsY2xpY2ssIC5qcy10b2dnbGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59IiwiaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiAkdGV4dC1jb2xvcjtcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBsaW5lLWhlaWdodDogMS42O1xufVxuXG4udGlueXRleHQge1xuICBsaW5lLWhlaWdodDogMS42O1xuICBmb250LXNpemU6IG1zKDApO1xuICAmLS1zbWFsbCB7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gIH1cblxuICA+KiB7XG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDQqJHN1KTtcbiAgfVxuXG4gID4qOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG5cbiAgPio6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIGgxLCBoMiwgaDMsIGg0IHtcbiAgICBtYXJnaW46IHJlbSgyMHB4IDAgOHB4KTtcbiAgfVxuXG4gIHVsIGxpIHtcbiAgICBAaW5jbHVkZSBzZXQtZm9udDtcbiAgfVxuXG4gIGEge1xuICAgICZbaHJlZl49XCJtYWlsdG9cIl0ge1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIEBpbmNsdWRlIHJlbGF0aXZlO1xuICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMjhweCk7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9zdmcvZW52ZWxvcGUuc3ZnJykgY2VudGVyIGxlZnQgbm8tcmVwZWF0O1xuICAgIH1cbiAgfVxuXG4gIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgfVxuXG4gIGVtIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIH1cblxuICB1bCwgb2wge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogcmVtKDUqJHN1KTtcbiAgICBsaSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgLmVtYmVkZGVkLWVudGl0eSB7XG4gICAgQGluY2x1ZGUgbWVkaWEoJz49c20nKSB7XG4gICAgICBtYXgtd2lkdGg6IDQwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luOiAxcmVtIDFyZW0gMXJlbSAwO1xuICAgIH1cbiAgfVxuXG4gICYtLXNtYWxsIHtcbiAgICBmb250LXNpemU6IG1zKC0xKTtcbiAgfVxufVxuIiwiQGZ1bmN0aW9uIG1zLWZ1bmN0aW9uKCR2OiAwLCAkYmFzZTogZmFsc2UsICRyYXRpbzogZmFsc2UsICR0aHJlYWQ6IGZhbHNlLCAkc2V0dGluZ3M6ICRtb2R1bGFyc2NhbGUpIHtcblxuICAvLyBQYXJzZSBzZXR0aW5nc1xuICAkbXMtc2V0dGluZ3M6IG1zLXNldHRpbmdzKCRiYXNlLCRyYXRpbywkdGhyZWFkLCRzZXR0aW5ncyk7XG4gICRiYXNlOiBudGgoJG1zLXNldHRpbmdzLCAxKTtcbiAgJHJhdGlvOiBudGgoJG1zLXNldHRpbmdzLCAyKTtcblxuICAvLyBSZW5kZXIgdGFyZ2V0IHZhbHVlcyBmcm9tIHNldHRpbmdzLlxuICBAaWYgdW5pdCgkcmF0aW8pICE9ICcnIHtcbiAgICAkcmF0aW86IG1zLXRhcmdldCgkcmF0aW8sJGJhc2UpXG4gIH1cblxuICAvLyBGYXN0IGNhbGMgaWYgbm90IG11bHRpIHN0cmFuZGVkXG4gIEBpZihsZW5ndGgoJGJhc2UpID09IDEpIHtcbiAgICBAcmV0dXJuIG1zLXBvdygkcmF0aW8sICR2KSAqICRiYXNlO1xuICB9XG5cbiAgLy8gQ3JlYXRlIG5ldyBiYXNlIGFycmF5XG4gICRtcy1iYXNlczogbnRoKCRiYXNlLDEpO1xuXG4gIC8vIE5vcm1hbGl6ZSBiYXNlIHZhbHVlc1xuICBAZm9yICRpIGZyb20gMiB0aHJvdWdoIGxlbmd0aCgkYmFzZSkge1xuICAgIC8vIGluaXRpYWwgYmFzZSB2YWx1ZVxuICAgICRtcy1iYXNlOiBudGgoJGJhc2UsJGkpO1xuICAgIC8vIElmIHRoZSBiYXNlIGlzIGJpZ2dlciB0aGFuIHRoZSBtYWluIGJhc2VcbiAgICBAaWYoJG1zLWJhc2UgPiBudGgoJGJhc2UsMSkpIHtcbiAgICAgIC8vIGRpdmlkZSB0aGUgdmFsdWUgdW50aWwgaXQgYWxpZ25zIHdpdGggbWFpbiBiYXNlLlxuICAgICAgQHdoaWxlKCRtcy1iYXNlID4gbnRoKCRiYXNlLDEpKSB7XG4gICAgICAgICRtcy1iYXNlOiAkbXMtYmFzZSAvICRyYXRpbztcbiAgICAgIH1cbiAgICAgICRtcy1iYXNlOiAkbXMtYmFzZSAqICRyYXRpbztcbiAgICB9XG4gICAgLy8gSWYgdGhlIGJhc2UgaXMgc21hbGxlciB0aGFuIHRoZSBtYWluIGJhc2UuXG4gICAgQGVsc2UgaWYgKCRtcy1iYXNlIDwgbnRoKCRiYXNlLDEpKSB7XG4gICAgICAvLyBwdW1wIHVwIHRoZSB2YWx1ZSB1bnRpbCBpdCBhbGlnbnMgd2l0aCBtYWluIGJhc2UuXG4gICAgICBAd2hpbGUgJG1zLWJhc2UgPCBudGgoJGJhc2UsMSkge1xuICAgICAgICAkbXMtYmFzZTogJG1zLWJhc2UgKiAkcmF0aW87XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFB1c2ggaW50byBuZXcgYXJyYXlcbiAgICAkbXMtYmFzZXM6IGFwcGVuZCgkbXMtYmFzZXMsJG1zLWJhc2UpO1xuICB9XG5cbiAgLy8gU29ydCBhcnJheSBmcm9tIHNtYWxsZXN0IHRvIGxhcmdlc3QuXG4gICRtcy1iYXNlczogbXMtc29ydCgkbXMtYmFzZXMpO1xuXG4gIC8vIEZpbmQgc3RlcCB0byB1c2UgaW4gY2FsY3VsYXRpb25cbiAgJHZ0ZXA6IGZsb29yKCR2IC8gbGVuZ3RoKCRtcy1iYXNlcykpO1xuICAvLyBGaW5kIGJhc2UgdG8gdXNlIGluIGNhbGN1bGF0aW9uXG4gICRtcy1iYXNlOiByb3VuZCgoJHYgLyBsZW5ndGgoJG1zLWJhc2VzKSAtICR2dGVwKSAqIGxlbmd0aCgkbXMtYmFzZXMpKSArIDE7XG5cbiAgQHJldHVybiBtcy1wb3coJHJhdGlvLCAkdnRlcCkgKiBudGgoJG1zLWJhc2VzLCRtcy1iYXNlKTtcbn0iLCIkcmVtLWJhc2VsaW5lOiAxNnB4ICFkZWZhdWx0O1xuJHJlbS1mYWxsYmFjazogZmFsc2UgIWRlZmF1bHQ7XG4kcmVtLXB4LW9ubHk6IGZhbHNlICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gcmVtLXNlcGFyYXRvcigkbGlzdCwgJHNlcGFyYXRvcjogZmFsc2UpIHtcbiAgQGlmICRzZXBhcmF0b3IgPT0gXCJjb21tYVwiIG9yICRzZXBhcmF0b3IgPT0gXCJzcGFjZVwiIHtcbiAgICBAcmV0dXJuIGFwcGVuZCgkbGlzdCwgbnVsbCwgJHNlcGFyYXRvcik7XG4gIH0gXG4gIFxuICBAaWYgZnVuY3Rpb24tZXhpc3RzKFwibGlzdC1zZXBhcmF0b3JcIikgPT0gdHJ1ZSB7XG4gICAgQHJldHVybiBsaXN0LXNlcGFyYXRvcigkbGlzdCk7XG4gIH1cblxuICAvLyBsaXN0LXNlcGFyYXRvciBwb2x5ZmlsbCBieSBIdWdvIEdpcmF1ZGVsIChodHRwczovL3Nhc3MtY29tcGF0aWJpbGl0eS5naXRodWIuaW8vI2xpc3Rfc2VwYXJhdG9yX2Z1bmN0aW9uKVxuICAkdGVzdC1saXN0OiAoKTtcbiAgQGVhY2ggJGl0ZW0gaW4gJGxpc3Qge1xuICAgICR0ZXN0LWxpc3Q6IGFwcGVuZCgkdGVzdC1saXN0LCAkaXRlbSwgc3BhY2UpO1xuICB9XG5cbiAgQHJldHVybiBpZigkdGVzdC1saXN0ID09ICRsaXN0LCBzcGFjZSwgY29tbWEpO1xufVxuXG5AbWl4aW4gcmVtLWJhc2VsaW5lKCR6b29tOiAxMDAlKSB7XG4gIGZvbnQtc2l6ZTogJHpvb20gLyAxNnB4ICogJHJlbS1iYXNlbGluZTtcbn1cblxuQGZ1bmN0aW9uIHJlbS1jb252ZXJ0KCR0bywgJHZhbHVlcy4uLikge1xuICAkcmVzdWx0OiAoKTtcbiAgJHNlcGFyYXRvcjogcmVtLXNlcGFyYXRvcigkdmFsdWVzKTtcbiAgXG4gIEBlYWNoICR2YWx1ZSBpbiAkdmFsdWVzIHtcbiAgICBAaWYgdHlwZS1vZigkdmFsdWUpID09IFwibnVtYmVyXCIgYW5kIHVuaXQoJHZhbHVlKSA9PSBcInJlbVwiIGFuZCAkdG8gPT0gXCJweFwiIHtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUgLyAxcmVtICogJHJlbS1iYXNlbGluZSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gXCJudW1iZXJcIiBhbmQgdW5pdCgkdmFsdWUpID09IFwicHhcIiBhbmQgJHRvID09IFwicmVtXCIge1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSAvICRyZW0tYmFzZWxpbmUgKiAxcmVtLCAkc2VwYXJhdG9yKTtcbiAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcImxpc3RcIiB7XG4gICAgICAkdmFsdWUtc2VwYXJhdG9yOiByZW0tc2VwYXJhdG9yKCR2YWx1ZSk7XG4gICAgICAkdmFsdWU6IHJlbS1jb252ZXJ0KCR0bywgJHZhbHVlLi4uKTtcbiAgICAgICR2YWx1ZTogcmVtLXNlcGFyYXRvcigkdmFsdWUsICR2YWx1ZS1zZXBhcmF0b3IpO1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlLCAkc2VwYXJhdG9yKTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKGxlbmd0aCgkcmVzdWx0KSA9PSAxLCBudGgoJHJlc3VsdCwgMSksICRyZXN1bHQpO1xufVxuXG5AZnVuY3Rpb24gcmVtKCR2YWx1ZXMuLi4pIHtcbiAgQGlmICRyZW0tcHgtb25seSB7XG4gICAgQHJldHVybiByZW0tY29udmVydChweCwgJHZhbHVlcy4uLik7XG4gIH0gQGVsc2Uge1xuICAgIEByZXR1cm4gcmVtLWNvbnZlcnQocmVtLCAkdmFsdWVzLi4uKTtcbiAgfVxufVxuXG5AbWl4aW4gcmVtKCRwcm9wZXJ0aWVzLCAkdmFsdWVzLi4uKSB7XG4gIEBpZiB0eXBlLW9mKCRwcm9wZXJ0aWVzKSA9PSBcIm1hcFwiIHtcbiAgICBAZWFjaCAkcHJvcGVydHkgaW4gbWFwLWtleXMoJHByb3BlcnRpZXMpIHtcbiAgICAgIEBpbmNsdWRlIHJlbSgkcHJvcGVydHksIG1hcC1nZXQoJHByb3BlcnRpZXMsICRwcm9wZXJ0eSkpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGVhY2ggJHByb3BlcnR5IGluICRwcm9wZXJ0aWVzIHtcbiAgICAgIEBpZiAkcmVtLWZhbGxiYWNrIG9yICRyZW0tcHgtb25seSB7XG4gICAgICAgICN7JHByb3BlcnR5fTogcmVtLWNvbnZlcnQocHgsICR2YWx1ZXMuLi4pO1xuICAgICAgfVxuICAgICAgQGlmIG5vdCAkcmVtLXB4LW9ubHkge1xuICAgICAgICAjeyRwcm9wZXJ0eX06IHJlbS1jb252ZXJ0KHJlbSwgJHZhbHVlcy4uLik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vICAgICBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuLy8gICAgKF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuLy8gICAgIF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG4vLyAgICB8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuLy8gICAgfCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuLy8gICAgfF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcbi8vXG4vLyAgICAgIFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICB2MS40Ljlcbi8vXG4vLyAgICAgICAgICAgICAgICBodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cbi8vXG4vLyAgICAgICAgIEF1dGhvcnM6IEVkdWFyZG8gQm91Y2FzIChAZWR1YXJkb2JvdWNhcylcbi8vICAgICAgICAgICAgICAgICAgSHVnbyBHaXJhdWRlbCAoQGh1Z29naXJhdWRlbClcbi8vXG4vLyAgICAgIFRoaXMgcHJvamVjdCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIE1JVCBsaWNlbnNlXG5cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgbGlicmFyeSBwdWJsaWMgY29uZmlndXJhdGlvblxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4vLy8gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcbi8vL1xuJGJyZWFrcG9pbnRzOiAoXG4gICdwaG9uZSc6IDMyMHB4LFxuICAndGFibGV0JzogNzY4cHgsXG4gICdkZXNrdG9wJzogMTAyNHB4XG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbi8vLyAgICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbi8vLyAgKTtcbi8vL1xuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCknLFxuICAncmV0aW5hM3gnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCknXG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4xMjhweCcpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MjBlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+Mi4wcmVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG4vLy9cbiR1bml0LWludGVydmFsczogKFxuICAncHgnOiAxLFxuICAnZW0nOiAwLjAxLFxuICAncmVtJzogMC4xLFxuICAnJzogMFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyB3aGV0aGVyIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgYXZhaWxhYmxlLCB1c2VmdWwgZm9yIGNyZWF0aW5nIHNlcGFyYXRlIHN0eWxlc2hlZXRzXG4vLy8gZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIERpc2FibGVzIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4kaW0tbWVkaWEtc3VwcG9ydDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBicmVha3BvaW50IHRvIGVtdWxhdGUgd2hlbiBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGRpc2FibGVkLiBNZWRpYSBxdWVyaWVzIHRoYXQgc3RhcnQgYXQgb3Jcbi8vLyBpbnRlcmNlcHQgdGhlIGJyZWFrcG9pbnQgd2lsbCBiZSBkaXNwbGF5ZWQsIGFueSBvdGhlcnMgd2lsbCBiZSBpZ25vcmVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGRvZXMgbm90IGludGVyY2VwdCB0aGUgZGVza3RvcCBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICd0YWJsZXQnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj1kZXNrdG9wJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJyAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBtZWRpYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBpbiBhbiBleHByZXNzaW9uIGZvciBpdCB0byBiZSB1c2VkIHdoZW4gbWVkaWEgcXVlcmllc1xuLy8vIGFyZSBub3Qgc3VwcG9ydGVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYW5kIGNvbnRhaW5zIG9ubHkgYWNjZXB0ZWQgbWVkaWEgZXhwcmVzc2lvbnNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdzY3JlZW4nKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBidXQgY29udGFpbnMgYSBtZWRpYSBleHByZXNzaW9uIHRoYXQgaXMgbm90IGFjY2VwdGVkXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAncmV0aW5hMngnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJywgJ3BvcnRyYWl0JywgJ2xhbmRzY2FwZScpICFkZWZhdWx0O1xuXG4vLy8vXG4vLy8gQ3Jvc3MtZW5naW5lIGxvZ2dpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gTG9nIGEgbWVzc2FnZSBlaXRoZXIgd2l0aCBgQGVycm9yYCBpZiBzdXBwb3J0ZWRcbi8vLyBlbHNlIHdpdGggYEB3YXJuYCwgdXNpbmcgYGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpYFxuLy8vIHRvIGRldGVjdCBzdXBwb3J0LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQGZ1bmN0aW9uIGltLWxvZygkbWVzc2FnZSkge1xuICBAaWYgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJykge1xuICAgIEBlcnJvciAkbWVzc2FnZTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJG1lc3NhZ2U7XG4gICAgJF86IG5vb3AoKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1lc3NhZ2U7XG59XG5cblxuLy8vXG4vLy8gV3JhcHBlciBtaXhpbiBmb3IgdGhlIGxvZyBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGEgbW9yZSBmcmllbmRseVxuLy8vIEFQSSB0aGFuIGBAaWYgaW0tbG9nKCcuLicpIHt9YCBvciBgJF86IGltLWxvZygnLi4nKWAuIEJhc2ljYWxseSwgdXNlIHRoZSBmdW5jdGlvblxuLy8vIHdpdGhpbiBmdW5jdGlvbnMgYmVjYXVzZSBpdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluIGEgZnVuY3Rpb25cbi8vLyBhbmQgdXNlIHRoZSBtaXhpbiBldmVyeXdoZXJlIGVsc2UgYmVjYXVzZSBpdCdzIG11Y2ggbW9yZSBlbGVnYW50LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQG1peGluIGxvZygkbWVzc2FnZSkge1xuICBAaWYgaW0tbG9nKCRtZXNzYWdlKSB7fVxufVxuXG5cbi8vL1xuLy8vIEZ1bmN0aW9uIHdpdGggbm8gYEByZXR1cm5gIGNhbGxlZCBuZXh0IHRvIGBAd2FybmAgaW4gU2FzcyAzLjNcbi8vLyB0byB0cmlnZ2VyIGEgY29tcGlsaW5nIGVycm9yIGFuZCBzdG9wIHRoZSBwcm9jZXNzLlxuLy8vXG5AZnVuY3Rpb24gbm9vcCgpIHt9XG5cbi8vL1xuLy8vIERldGVybWluZXMgd2hldGhlciBhIGxpc3Qgb2YgY29uZGl0aW9ucyBpcyBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHJldHVybiB7Qm9vbGVhbn0gLSBSZXR1cm5zIHRydWUgaWYgdGhlIGNvbmRpdGlvbnMgYXJlIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vXG5AZnVuY3Rpb24gaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikge1xuICAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRpbS1uby1tZWRpYS1icmVha3BvaW50KTtcblxuICBAaWYgbm90ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlIHtcbiAgICBAaWYgaW0tbG9nKCdgI3skaW0tbm8tbWVkaWEtYnJlYWtwb2ludH1gIGlzIG5vdCBhIHZhbGlkIGJyZWFrcG9pbnQuJykge31cbiAgfVxuXG4gIEBlYWNoICRjb25kaXRpb24gaW4gJGNvbmRpdGlvbnMge1xuICAgIEBpZiBub3QgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRjb25kaXRpb24pO1xuICAgICAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICAgICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRjb25kaXRpb24sICRvcGVyYXRvcik7XG5cbiAgICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFNwYWNlQXJvdW5kT3BlcmF0b3JcbiAgICAgIEBpZiAoJHByZWZpeCA9PSAnbWF4JyBhbmQgJHZhbHVlIDw9ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSBvclxuICAgICAgICAgICgkcHJlZml4ID09ICdtaW4nIGFuZCAkdmFsdWUgPiAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkge1xuICAgICAgICBAcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgbm90IGluZGV4KCRpbS1uby1tZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgQHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8vLy9cbi8vLyBQYXJzaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIEdldCBvcGVyYXRvciBvZiBhbiBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3Qgb3BlcmF0b3IgZnJvbVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIEFueSBvZiBgPj1gLCBgPmAsIGA8PWAsIGA8YCwgYOKJpWAsIGDiiaRgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbikge1xuICBAZWFjaCAkb3BlcmF0b3IgaW4gKCc+PScsICc+JywgJzw9JywgJzwnLCAn4omlJywgJ+KJpCcpIHtcbiAgICBAaWYgc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgICAgIEByZXR1cm4gJG9wZXJhdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgJF86IGltLWxvZygnTm8gb3BlcmF0b3IgZm91bmQgaW4gYCN7JGV4cHJlc3Npb259YC4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBkaW1lbnNpb24gZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgd2lkdGhgIG9yIGBoZWlnaHRgIChvciBwb3RlbnRpYWxseSBhbnl0aGluZyBlbHNlKVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwYXJzZWQtZGltZW5zaW9uOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDAsICRvcGVyYXRvci1pbmRleCAtIDEpO1xuICAkZGltZW5zaW9uOiAnd2lkdGgnO1xuXG4gIEBpZiBzdHItbGVuZ3RoKCRwYXJzZWQtZGltZW5zaW9uKSA+IDAge1xuICAgICRkaW1lbnNpb246ICRwYXJzZWQtZGltZW5zaW9uO1xuICB9XG5cbiAgQHJldHVybiAkZGltZW5zaW9uO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gcHJlZml4IGJhc2VkIG9uIGFuIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3Jcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgbWluYCBvciBgbWF4YFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcikge1xuICBAcmV0dXJuIGlmKGluZGV4KCgnPCcsICc8PScsICfiiaQnKSwgJG9wZXJhdG9yKSwgJ21heCcsICdtaW4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgdmFsdWUgb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IHZhbHVlIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gQSBudW1lcmljIHZhbHVlXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yLWluZGV4ICsgc3RyLWxlbmd0aCgkb3BlcmF0b3IpKTtcblxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpIHtcbiAgICAkdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpO1xuICB9IEBlbHNlIHtcbiAgICAkdmFsdWU6IHRvLW51bWJlcigkdmFsdWUpO1xuICB9XG5cbiAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgdW5pdCgkdmFsdWUpKTtcblxuICBAaWYgbm90ICRpbnRlcnZhbCB7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAgIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gICAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gICAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICAgJF86IGltLWxvZygnVW5rbm93biB1bml0IGAje3VuaXQoJHZhbHVlKX1gLicpO1xuICB9XG5cbiAgQGlmICRvcGVyYXRvciA9PSAnPicge1xuICAgICR2YWx1ZTogJHZhbHVlICsgJGludGVydmFsO1xuICB9IEBlbHNlIGlmICRvcGVyYXRvciA9PSAnPCcge1xuICAgICR2YWx1ZTogJHZhbHVlIC0gJGludGVydmFsO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cblxuLy8vXG4vLy8gUGFyc2UgYW4gZXhwcmVzc2lvbiB0byByZXR1cm4gYSB2YWxpZCBtZWRpYS1xdWVyeSBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIHBhcnNlXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gVmFsaWQgbWVkaWEgcXVlcnlcbi8vL1xuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pIHtcbiAgLy8gSWYgaXQgaXMgcGFydCBvZiAkbWVkaWEtZXhwcmVzc2lvbnMsIGl0IGhhcyBubyBvcGVyYXRvclxuICAvLyB0aGVuIHRoZXJlIGlzIG5vIG5lZWQgdG8gZ28gYW55IGZ1cnRoZXIsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICBAaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbikge1xuICAgIEByZXR1cm4gbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKTtcbiAgfVxuXG4gICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pO1xuICAkZGltZW5zaW9uOiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuXG4gIEByZXR1cm4gJygjeyRwcmVmaXh9LSN7JGRpbWVuc2lvbn06ICN7JHZhbHVlfSknO1xufVxuXG4vLy9cbi8vLyBTbGljZSBgJGxpc3RgIGJldHdlZW4gYCRzdGFydGAgYW5kIGAkZW5kYCBpbmRleGVzXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNsaWNlXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRzdGFydCBbMV0gLSBTdGFydCBpbmRleFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZW5kIFtsZW5ndGgoJGxpc3QpXSAtIEVuZCBpbmRleFxuLy8vXG4vLy8gQHJldHVybiB7TGlzdH0gU2xpY2VkIGxpc3Rcbi8vL1xuQGZ1bmN0aW9uIHNsaWNlKCRsaXN0LCAkc3RhcnQ6IDEsICRlbmQ6IGxlbmd0aCgkbGlzdCkpIHtcbiAgQGlmIGxlbmd0aCgkbGlzdCkgPCAxIG9yICRzdGFydCA+ICRlbmQge1xuICAgIEByZXR1cm4gKCk7XG4gIH1cblxuICAkcmVzdWx0OiAoKTtcblxuICBAZm9yICRpIGZyb20gJHN0YXJ0IHRocm91Z2ggJGVuZCB7XG4gICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIG50aCgkbGlzdCwgJGkpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdDtcbn1cblxuLy8vL1xuLy8vIFN0cmluZyB0byBudW1iZXIgY29udmVydGVyXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gQ2FzdHMgYSBzdHJpbmcgaW50byBhIG51bWJlclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGJlIHBhcnNlZFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfVxuLy8vXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCR2YWx1ZSkge1xuICBAaWYgdHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgIT0gJ3N0cmluZycge1xuICAgICRfOiBpbS1sb2coJ1ZhbHVlIGZvciBgdG8tbnVtYmVyYCBzaG91bGQgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gIH1cblxuICAkZmlyc3QtY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAxLCAxKTtcbiAgJHJlc3VsdDogMDtcbiAgJGRpZ2l0czogMDtcbiAgJG1pbnVzOiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpO1xuICAkbnVtYmVyczogKCcwJzogMCwgJzEnOiAxLCAnMic6IDIsICczJzogMywgJzQnOiA0LCAnNSc6IDUsICc2JzogNiwgJzcnOiA3LCAnOCc6IDgsICc5JzogOSk7XG5cbiAgLy8gUmVtb3ZlICsvLSBzaWduIGlmIHByZXNlbnQgYXQgZmlyc3QgY2hhcmFjdGVyXG4gIEBpZiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnKycgb3IgJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpIHtcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkdmFsdWUsIDIpO1xuICB9XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBzdHItbGVuZ3RoKCR2YWx1ZSkge1xuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsICRpLCAkaSk7XG5cbiAgICBAaWYgbm90IChpbmRleChtYXAta2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gJy4nKSB7XG4gICAgICBAcmV0dXJuIHRvLWxlbmd0aChpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KSwgc3RyLXNsaWNlKCR2YWx1ZSwgJGkpKVxuICAgIH1cblxuICAgIEBpZiAkY2hhcmFjdGVyID09ICcuJyB7XG4gICAgICAkZGlnaXRzOiAxO1xuICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGRpZ2l0czogJGRpZ2l0cyAqIDEwO1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpIC8gJGRpZ2l0cztcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpO1xufVxuXG5cbi8vL1xuLy8vIEFkZCBgJHVuaXRgIHRvIGAkdmFsdWVgXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYWRkIHVuaXQgdG9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHVuaXQgLSBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHVuaXRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBgJHZhbHVlYCBleHByZXNzZWQgaW4gYCR1bml0YFxuLy8vXG5AZnVuY3Rpb24gdG8tbGVuZ3RoKCR2YWx1ZSwgJHVuaXQpIHtcbiAgJHVuaXRzOiAoJ3B4JzogMXB4LCAnY20nOiAxY20sICdtbSc6IDFtbSwgJyUnOiAxJSwgJ2NoJzogMWNoLCAncGMnOiAxcGMsICdpbic6IDFpbiwgJ2VtJzogMWVtLCAncmVtJzogMXJlbSwgJ3B0JzogMXB0LCAnZXgnOiAxZXgsICd2dyc6IDF2dywgJ3ZoJzogMXZoLCAndm1pbic6IDF2bWluLCAndm1heCc6IDF2bWF4KTtcblxuICBAaWYgbm90IGluZGV4KG1hcC1rZXlzKCR1bml0cyksICR1bml0KSB7XG4gICAgJF86IGltLWxvZygnSW52YWxpZCB1bml0IGAjeyR1bml0fWAuJyk7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZSAqIG1hcC1nZXQoJHVuaXRzLCAkdW5pdCk7XG59XG5cbi8vL1xuLy8vIFRoaXMgbWl4aW4gYWltcyBhdCByZWRlZmluaW5nIHRoZSBjb25maWd1cmF0aW9uIGp1c3QgZm9yIHRoZSBzY29wZSBvZlxuLy8vIHRoZSBjYWxsLiBJdCBpcyBoZWxwZnVsIHdoZW4gaGF2aW5nIGEgY29tcG9uZW50IG5lZWRpbmcgYW4gZXh0ZW5kZWRcbi8vLyBjb25maWd1cmF0aW9uIHN1Y2ggYXMgY3VzdG9tIGJyZWFrcG9pbnRzIChyZWZlcnJlZCB0byBhcyB0d2Vha3BvaW50cylcbi8vLyBmb3IgaW5zdGFuY2UuXG4vLy9cbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vL1xuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWtwb2ludHMgWygpXSAtIE1hcCBvZiB0d2Vha3BvaW50cyB0byBiZSBtZXJnZWQgd2l0aCBgJGJyZWFrcG9pbnRzYFxuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMgWygpXSAtIE1hcCBvZiB0d2Vha2VkIG1lZGlhIGV4cHJlc3Npb25zIHRvIGJlIG1lcmdlZCB3aXRoIGAkbWVkaWEtZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBicmVha3BvaW50cyB3aXRoIGEgdHdlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIG1lZGlhIGV4cHJlc3Npb25zIHdpdGggYSBjdXN0b20gb25lXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIGJvdGggY29uZmlndXJhdGlvbiBtYXBzXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCksICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuQG1peGluIG1lZGlhLWNvbnRleHQoJHR3ZWFrcG9pbnRzOiAoKSwgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoKSkge1xuICAvLyBTYXZlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRnbG9iYWwtYnJlYWtwb2ludHM6ICRicmVha3BvaW50cztcbiAgJGdsb2JhbC1tZWRpYS1leHByZXNzaW9uczogJG1lZGlhLWV4cHJlc3Npb25zO1xuXG4gIC8vIFVwZGF0ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6IG1hcC1tZXJnZSgkYnJlYWtwb2ludHMsICR0d2Vha3BvaW50cykgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiBtYXAtbWVyZ2UoJG1lZGlhLWV4cHJlc3Npb25zLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMpICFnbG9iYWw7XG5cbiAgQGNvbnRlbnQ7XG5cbiAgLy8gUmVzdG9yZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6ICRnbG9iYWwtYnJlYWtwb2ludHMgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zICFnbG9iYWw7XG59XG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIHB1YmxpYyBleHBvc2VkIEFQSVxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9dGFibGV0JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1OHB4JywgJzw4NTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPmRlc2t0b3AnLCAnPD0xMzUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbi8vLyAgQGluY2x1ZGUgbWVkaWEoJ3JldGluYTJ4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzUwcHgnLCAnPHRhYmxldCcsICdyZXRpbmEzeCcpIHsgfVxuLy8vXG5AbWl4aW4gbWVkaWEoJGNvbmRpdGlvbnMuLi4pIHtcbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgU3BhY2VBcm91bmRPcGVyYXRvclxuICBAaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID09IDApIG9yXG4gICAgICAobm90ICRpbS1tZWRpYS1zdXBwb3J0IGFuZCBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSkge1xuICAgIEBjb250ZW50O1xuICB9IEBlbHNlIGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA+IDApIHtcbiAgICBAbWVkaWEgI3t1bnF1b3RlKHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAxKSkpfSB7XG4gICAgICAvLyBSZWN1cnNpdmUgY2FsbFxuICAgICAgQGluY2x1ZGUgbWVkaWEoc2xpY2UoJGNvbmRpdGlvbnMsIDIpLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xufVxuXG4uY29udGVudC1sZWZ0IHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxufVxuLmNvbnRlbnQtY2VudGVyIHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cbn1cbi5jb250ZW50LXJpZ2h0IHtcbiAgPiAqIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn0iLCIubGVmdC1wYW5lbCB7XG5cdGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgMSk7XG5cdEBpbmNsdWRlIHNpemUoNDgwcHgsIDEwMHZoKTtcblx0XG5cdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdEBpbmNsdWRlIHNpemUoMTAwJSwgMTAwdmgpO1xuXHR9XG5cblx0Jl9fd3JhcHBlciB7XG5cdFx0aGVpZ2h0OjEwMCU7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHR9XG5cblx0Jl9fYm9keSB7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG5cblx0XHRwIHtcblx0XHRcdGNvbG9yOiB3aGl0ZTtcblx0XHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMi40cmVtKTtcdFxuXHRcdFx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdH1cblx0XHR9XG5cdFxuXHRcdGJ1dHRvbiwgaW5wdXQge1xuXHRcdFx0bWFyZ2luLXRvcDogMy4ycmVtO1xuXHRcdFx0d2lkdGg6IDE1cmVtO1xuXHRcdFx0cGFkZGluZzogMXJlbSAycmVtO1xuXG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0d2lkdGg6IDEwMCVcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQmX19oZWFkZXIge1xuXHRcdEBpbmNsdWRlIGZsZXhib3goKTtcblx0XHRAaW5jbHVkZSBmbGV4LWZsb3coY29sdW1uKTtcblx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0XG5cblx0XHRAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdH1cblxuXHRcdCZfX3dyYXBwZXIge1xuXHRcdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KGZsZXgtc3RhcnQpO1xuXHRcdFx0cGFkZGluZy1ib3R0b206MTZyZW07XG5cblx0XHRcdEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuXHRcdFx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblx0XHRcdFx0cGFkZGluZy1ib3R0b206MnJlbTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Jl9fZm9vdGVyIHtcblx0XHRAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXHRcdH1cblx0fVxufSIsIi5yaWdodC1wYW5lbCB7XG5cdHdpZHRoOiA0NyU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0d2lkdGg6MTAwJTtcblx0fVxufSIsIi8vIHZhcnNcbiRwOiByZW0oMTZweCA0MHB4KTtcbiRmdzogNTAwO1xuJGItcmFkOiA2cHg7XG4kbGg6IDEuNjtcbiRpY28tZGltOiByZW0oMzJweCk7XG5cbi8vIFN0cnVjdHVyZSBCdXR0b25cbi5idG4ge1xuICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgJGZ3LCBub3JtYWwsICRiYXNlLWZvbnQtc2l6ZSk7XG4gIEBpbmNsdWRlIHNpemUoMTAwJSwgYXV0byk7XG4gIHBhZGRpbmc6ICRwO1xuICBsaW5lLWhlaWdodDogJGxoO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgYm9yZGVyOm5vbmU7XG4gIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcblxuICBzdmcge1xuICAgIEBpbmNsdWRlIHNpemUoJGljby1kaW0sICRpY28tZGltKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICB9XG5cbiAgJi0tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xuICAgIGNvbG9yOndoaXRlO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDEpO1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggMjBweCAwIHJnYmEoMjksMjksMzEsLjA5KTtcbiAgICAgIG9wYWNpdHk6IC45O1xuICAgIH1cbiAgICAmOmFjdGl2ZSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC45Mik7XG4gICAgfVxuICB9XG4gICYtLWRhcmsge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgYmxhY2ssIGJsYWNrLCB3aGl0ZSwgYmxhY2ssIGJsYWNrKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSA7XG4gICAgICBjb2xvcjogYmxhY2s7XG4gICAgfVx0XG4gIH1cbiAgJi0tZ29vZ2xlIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIGdldC1jb2xvcihiZywgMyksIGdldC1jb2xvcihiZywgMyksIHdoaXRlLCBnZXQtY29sb3IoYmcsIDMpLCBnZXQtY29sb3IoYmcsIDMpKTtcbiAgICB3aWR0aDogMzI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogJGItcmFkO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdldC1jb2xvcihiZywgMyk7XG4gICAgJjphY3RpdmUge1xuICAgICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAzKTtcbiAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgfVx0XG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICB3aWR0aDogMjUwcHg7XG4gICAgfVxuICB9XG4gICYtLWZhY2Vib29rIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIGdldC1jb2xvcihiZywgNCksIGdldC1jb2xvcihiZywgNCksIHdoaXRlLCBnZXQtY29sb3IoYmcsIDQpLCBnZXQtY29sb3IoYmcsIDQpKTtcbiAgICB3aWR0aDogNjBweDtcbiAgICBmb250LXNpemU6MS42cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDQpO1xuICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICB9XHRcbiAgfVxuICAmLS15ZWxsb3cge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgZ2V0LWNvbG9yKGJnLCA1KSwgZ2V0LWNvbG9yKGJnLCA1KSwgd2hpdGUsIGdldC1jb2xvcihiZywgNSksIGdldC1jb2xvcihiZywgNSkpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgNik7XG4gICAgICBjb2xvcjokY29sb3Itd2hpdGU7XG4gICAgfVxuICB9XG4gICYtLWdyZXkge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgZ2V0LWNvbG9yKGJnLCA1KSwgZ2V0LWNvbG9yKGJnLCA1KSwgd2hpdGUsIGdldC1jb2xvcihiZywgNSksIGdldC1jb2xvcihiZywgNSkpO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgNSk7XG4gICAgICBjb2xvcjokY29sb3Itd2hpdGU7XG4gICAgfVxuICB9XG4gICYtLWJlaWdlIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUoZ2V0LWNvbG9yKGJlaWdlLWRhcmssIDEpLCBnZXQtY29sb3IoYmcsIDEwKSwgZ2V0LWNvbG9yKGJnLCAxMCksIGdldC1jb2xvcihwcmltYXJ5LCAwKSwgZ2V0LWNvbG9yKGJnLCAxMCksIGdldC1jb2xvcihiZywgMTApKTtcbiAgfVxufVxuXG4uYnRuLXNpbXBsZSB7XG4gIG1hcmdpbjogJG10IDFyZW0gMCAwO1xuICBAaW5jbHVkZSByZW0oZm9udC1zaXplLCAkYmFzZS1mb250LXNpemUpO1xuXG4gICYtLW11dGVkIHtcbiAgICBjb2xvcjpnZXQtY29sb3IoYmcsMCk7XG4gIH1cbiAgJi0tcHJpbWFyeSB7XG4gICAgY29sb3I6IGdldC1jb2xvcihiZWlnZS1kYXJrLDEpO1xuICAgIGZvbnQtd2VpZ2h0OiAkZnc7XG4gIH1cbn1cblxuLmJ0bi1ncmF5IHtcbiAgYmFja2dyb3VuZDogcmdiYSgyMjYsIDIyNCwgMjE5LCAwLjUpO1xuICAgc3BhbntcbiAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxufVxuXG4vLyAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKCcuJykge1xuLy8gICAgIEBpbmNsdWRlIHNpemUoMTAwJSwgYXV0byk7XG4vLyAgIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NUE9ORU5UIHRvVE9QICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi50b1RvcCB7XG4gICAgQGluY2x1ZGUgc2l6ZShhdXRvLCAzLjcycmVtKTtcbiAgICBAaW5jbHVkZSBmaXhlZCh0b3AgODYlIHJpZ2h0IDJyZW0pO1xuICAgIHotaW5kZXg6IDk5OTk5O1xuICAgIGJhY2tncm91bmQ6ICM0YjQ2M2U7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDEuMnJlbSAxcmVtO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgICAgICBvcGFjaXR5OjE7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgfVxufSIsIlx0LmlucHV0LW5vcm1hbCB7XG5cdFx0YmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAwKTtcblx0XHRoZWlnaHQ6IDRyZW07XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0Ym9yZGVyLXJhZGl1czogNHB4O1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMS42cmVtKTtcdFxuXHR9XG5cblx0LnVrLWlucHV0OmZvY3VzLCAudWstc2VsZWN0OmZvY3VzLCAudWstdGV4dGFyZWE6Zm9jdXMge1xuXHRcdGJvcmRlcjogMXB4IHNvbGlkIGdldC1jb2xvcihiZywgMSk7XG5cdH0iLCIubGluay10ZXh0IHtcbiAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAxLjRyZW0pO1x0XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICBjb2xvcjogZ2V0LWNvbG9yKHByaW1hcnksIDEpO1xuICB9XG59IiwiLmxvZ2luLWZvcm0ge1xuXHR3aWR0aDogNDAwcHg7XG5cdHBhZGRpbmctYm90dG9tOiAyLjRyZW07XG5cblx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0d2lkdGg6MTAwJTtcblx0fVxuXHRcblx0bGFiZWwge1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCA2MDAsIG5vcm1hbCwgMS42cmVtKTtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0bWFyZ2luOjFyZW0gMDtcblx0fVxuXG5cdCZfX3Bhc3N3b3JkIHtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuXHRcdEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG5cdH1cblxuXHRidXR0b24ge1xuXHRcdHdpZHRoOiAxMi42cmVtO1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHR9XG5cdH1cbn0iLCIubG9naW4ge1xuXHRcdEBpbmNsdWRlIHJlbGF0aXZlKCk7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKGNvbHVtbik7XG5cdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblx0XHRAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblx0XHRoZWlnaHQ6MTAwJTtcblxuXHRcdEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuXHRcdFx0d2lkdGg6IDkwJTtcblx0XHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdH1cdFxuXG5cdFx0QGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG5cdFx0XHR3aWR0aDogOTAlO1xuXHRcdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0fVxuXG5cdFx0Jl9fd3JhcHBlciB7XG5cdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRAaW5jbHVkZSBmbGV4LWRpcmVjdGlvbihjb2x1bW4pO1x0XG5cdFx0XHRAaW5jbHVkZSBzaXplKDEwMCUsIDEwMCUpO1xuXHRcdFx0QGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcblx0XHRcdEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXG5cdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0anVzdGlmeS1jb250ZW50OiB1bnNldDtcblx0XHRcdFx0aGVpZ2h0OiB1bnNldDtcblx0XHRcdH1cblxuXHRcdFx0Jl9faGVhZGVyIHtcblx0XHRcdFx0d2lkdGg6IDQwMHB4O1xuXHRcdFx0XHRwYWRkaW5nOiAxLjRyZW0gMDtcblxuXHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRwYWRkaW5nOiB1bnNldDtcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5idXNpbmVzcyB7XG5cdFx0XHRcdFx0QGluY2x1ZGUgYWJzb2x1dGUodG9wIDRyZW0gcmlnaHQgMCk7XG5cdFx0XHRcdFx0d2lkdGg6IDEyLjRyZW07XG5cdFx0XHRcdFx0cGFkZGluZy1ib3R0b206IDJyZW07XG5cblx0XHRcdFx0XHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdFx0XHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdFx0XHRcdFx0cG9zaXRpb246IHVuc2V0O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGgxIHtcblx0XHRcdFx0XHRAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDMuMnJlbSk7XG5cdFx0XHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5zb2NpYWwtc2lnbmluIHtcblx0XHRcdFx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0XHRcdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuXHRcdFx0XHRcdHBhZGRpbmc6IDRyZW0gMCAwIDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdC51ay1kaXZpZGVyLWljb24ge1xuXHRcdFx0XHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0iLCIkbWF4LXc6IHJlbSgxOTIwcHgpO1xuJGhlYWRlci1oOiByZW0oNjJweCk7XG5cbi5wYWdlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */
