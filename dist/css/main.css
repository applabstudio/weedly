/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS FLEXBOX CROSSBROWSER               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                         REUSABLE MIXINS BUTTON STYLE                       */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  REUSABLE SASS MIXINS ON-EVENT                                   */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN WHEN-INSIDE                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                  CONTAINER                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS POSITION                              */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXIN SIZE                                 */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXIN SET-FONT                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 REUSABLE SASS MIXINS REM UNITS             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                REUSABLE SASS MIXIN BORDER                                */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                               MIXINS PADDING                               */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                              REUSABLE SASS MIXINS BOX-SHADOW                             */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                            HIDING/SHOWING FADE TRANSITION                  */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/*                                 LIST RESET                                 */
/* -------------------------------------------------------------------------- */
/*
    Grid class name
*/
/*
    Cell class name
*/
/*
    Gutter size
*/
/*
    Optionally include max-width to fix IE issues
*/
/*
    Grid
*/
.grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
    Grid cell
*/
.grid-cell,
.grid--auto > * {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4;
}

/*
    Grid cell modifiers
 */
.grid-cell--auto-size {
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
}

.grid-cell--light {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.grid-cell--heavy {
  -webkit-box-flex: 8;
      -ms-flex-positive: 8;
          flex-grow: 8;
}

/*
    Grid gutters
*/
.grid--gutters {
  margin: -30px 0 0 -30px;
}

.grid--gutters > .grid-cell,
.grid--auto.grid--gutters > * {
  padding: 30px 0 0 30px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*
    Alignment per row
*/
.grid--top {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.grid--bottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

.grid--center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/*
    Flexible cells
*/
.grid--flex-grid-cell > .grid-cell,
.grid--flex > .grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/*
    Justify
*/
.grid--justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/*
    Alignment per cell
*/
.grid-cell--top {
  -ms-flex-item-align: start;
      align-self: flex-start;
}

.grid-cell--bottom {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.grid-cell--center {
  -ms-flex-item-align: center;
      align-self: center;
}

/*
    Generate grid classes
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*, *::before, *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

::-moz-selection {
  background: #28C660;
}

::selection {
  background: #28C660;
}

body {
  background: #28C660;
}

figure {
  margin: 0;
}

img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

a {
  text-decoration: none;
  color: #768093;
}

a:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  color: #768093;
}

address {
  font-style: normal;
}

h1, h2, h3, h4, h5, h6,
ul, ol, p {
  margin: 0;
}

.js-allclick, .js-toggle {
  cursor: pointer;
}

html, body {
  font-size: 10px;
}

body {
  color: black;
  font-family: "Karla", sans-serif;
  line-height: 1.6;
}

.tinytext {
  line-height: 1.6;
  font-size: 1rem;
}

.tinytext--small {
  font-size: 0.88889rem;
}

.tinytext > * {
  margin-bottom: 1rem;
}

.tinytext > *:first-child {
  margin-top: 0;
}

.tinytext > *:last-child {
  margin-bottom: 0;
}

.tinytext h1, .tinytext h2, .tinytext h3, .tinytext h4 {
  margin: 1.25rem 0 0.5rem;
}

.tinytext ul li {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

.tinytext a[href^="mailto"] {
  font-weight: 500;
  position: relative;
  padding-left: 1.75rem;
  background: url("../images/svg/envelope.svg") center left no-repeat;
}

.tinytext strong {
  font-weight: 800;
}

.tinytext em {
  font-style: italic;
}

.tinytext ul, .tinytext ol {
  margin-left: 0;
  padding-left: 1.25rem;
}

.tinytext ul li, .tinytext ol li {
  margin: 0;
}

@media (min-width: 768px) {
  .tinytext .embedded-entity {
    max-width: 40%;
    float: left;
    margin: 1rem 1rem 1rem 0;
  }
}

.tinytext--small {
  font-size: 0.88889rem;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.content-left > * {
  margin-left: 0;
}

.content-center > * {
  margin-left: auto;
  margin-right: auto;
}

.content-right > * {
  margin-right: 0;
}

.left-panel {
  background: #28C660;
  width: 480px;
  height: 100vh;
}

@media (max-width: 992px) {
  .left-panel {
    width: 100%;
    height: 50vh;
  }
}

.left-panel__wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.left-panel__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-flow: column;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .left-panel__header {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

@media (max-width: 992px) {
  .left-panel__header {
    -ms-flex-flow: row;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row;
    -moz-align-items: center;
    -ms-align-items: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media (max-width: 768px) {
  .left-panel__header {
    -ms-flex-flow: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-flow: column;
    padding: 0 15px;
  }
}

.left-panel__header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  padding-bottom: 13.5rem;
}

@media (max-width: 1200px) {
  .left-panel__header__wrapper {
    padding-bottom: 2rem;
  }
}

.left-panel__footer .welcome {
  padding-bottom: 4rem;
}

@media (max-width: 768px) {
  .left-panel__footer .welcome {
    text-align: center;
  }
}

.left-panel__footer .welcome__title {
  word-wrap: break-word;
  color: white;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

@media (max-width: 768px) {
  .left-panel__footer .welcome__title {
    font-size: 2rem;
  }
}

.left-panel__footer .welcome #tit-type {
  display: inline-block;
  padding-left: 8px;
  font-weight: 700;
}

@media (max-width: 992px) {
  .left-panel__footer .welcome #tit-type {
    display: block;
    padding-left: 0;
  }
}

@media (max-width: 768px) {
  .left-panel__footer .welcome #tit-type {
    display: inline-block;
    padding-left: 8px;
  }
}

@media (max-width: 768px) {
  .left-panel__footer .btn {
    width: 170px;
  }
}

@media (max-width: 1200px) {
  .left-panel__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

@media (max-width: 992px) {
  .left-panel__footer {
    width: 40rem;
    padding-left: 6rem;
  }
}

@media (max-width: 768px) {
  .left-panel__footer {
    width: unset;
    padding-left: unset;
    text-align: center;
  }
}

.right-panel {
  width: 47%;
  margin: 0 auto;
}

@media (max-width: 992px) {
  .right-panel {
    width: 100%;
  }
}

.logo {
  display: block;
}

.logo--small {
  max-height: 90px;
}

.btn {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  width: 12.6rem;
  height: 4rem;
  padding: 0.51875rem 2.5rem;
  line-height: 1.6;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  border: none;
  border-radius: 8px;
}

@media (max-width: 768px) {
  .btn {
    width: 100%;
  }
}

.btn svg {
  width: 2rem;
  height: 2rem;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--primary {
  background: #28C660;
  color: white;
}

.btn--primary:active {
  background: #28C660;
  color: #fff;
}

.btn--primary:hover {
  background: #3ccb6f;
  opacity: .9;
}

.btn--primary:active {
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

.btn--dark {
  color: white;
  background: black;
  border-color: white;
  width: 15rem;
  height: 4rem;
}

.btn--dark svg {
  fill: white;
}

.btn--dark:hover, .btn--dark:active, .btn--dark:focus {
  color: white;
  background: #252529;
  border-color: black;
}

.btn--dark:hover svg, .btn--dark:active svg, .btn--dark:focus svg {
  fill: white;
}

.btn--dark:active {
  background: black;
  color: white;
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

@media (max-width: 768px) {
  .btn--dark {
    width: 100%;
  }
}

.btn--google {
  color: white;
  background: #DB3236;
  border-color: #de4649;
  width: 324px;
  border-radius: 8px;
  border: 1px solid #DB3236;
}

.btn--google svg {
  fill: white;
}

.btn--google:hover, .btn--google:active, .btn--google:focus {
  color: white;
  background: #de4649;
  border-color: #de4649;
}

.btn--google:hover svg, .btn--google:active svg, .btn--google:focus svg {
  fill: white;
}

.btn--google:active {
  background: #DB3236;
  color: #fff;
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

@media (max-width: 992px) {
  .btn--google {
    width: 80%;
  }
}

.btn--google i {
  font-size: 1.6rem;
  margin: 0.2rem 0.2rem;
}

.btn--facebook {
  color: white;
  background: #3B5998;
  border-color: #4e69a2;
  width: 60px;
  font-size: 1.6rem;
  border-radius: 8px;
  border: 1px solid #3B5998;
  cursor: pointer;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.btn--facebook svg {
  fill: white;
}

.btn--facebook:hover, .btn--facebook:active, .btn--facebook:focus {
  color: white;
  background: #4e69a2;
  border-color: #4e69a2;
}

.btn--facebook:hover svg, .btn--facebook:active svg, .btn--facebook:focus svg {
  fill: white;
}

.btn--facebook:active {
  background: #3B5998;
  color: #fff;
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

@media (max-width: 992px) {
  .btn--facebook {
    width: 15%;
  }
}

.btn--grey {
  color: white;
  background: #768093;
  border-color: #768093;
  border-radius: 8px;
}

.btn--grey svg {
  fill: white;
}

.btn--grey:hover, .btn--grey:active, .btn--grey:focus {
  color: white;
  background: #969FB0;
  border-color: #768093;
}

.btn--grey:hover svg, .btn--grey:active svg, .btn--grey:focus svg {
  fill: white;
}

.btn--grey:active {
  background: #768093;
  color: #fff;
  -webkit-transform: scale(0.92);
      -ms-transform: scale(0.92);
          transform: scale(0.92);
}

.btn-large {
  width: 21.4rem;
}

@media (max-width: 768px) {
  .btn-large {
    width: 100%;
  }
}

/* -------------------------------------------------------------------------- */
/*                               COMPONENT toTOP                              */
/* -------------------------------------------------------------------------- */
.toTop {
  width: auto;
  height: 3.72rem;
  top: 86%;
  right: 2rem;
  position: fixed;
  z-index: 99999;
  background: #4b463e;
  border-radius: 50%;
  padding: 1.2rem 1rem;
  opacity: 0.6;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
}

.toTop:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  opacity: 1;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.6);
  color: white;
}

.input-normal {
  background: #F3F3F4;
  height: 4rem;
  border: 1px solid transparent;
  border-radius: 4px;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
  display: block;
}

.uk-input:focus,
.uk-select:focus,
.uk-textarea:focus {
  border: 1px solid #28C660;
}

.link-text {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  text-decoration: none;
  color: #28C660;
}

.link-text:hover {
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
  color: #3ccb6f;
}

.login-form {
  width: 400px;
  padding-bottom: 2.4rem;
}

@media (max-width: 992px) {
  .login-form {
    width: 100%;
  }
}

.login-form label {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 1.6rem;
  display: inline-block;
  margin: 1rem 0;
}

.login-form__password {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.login-form__password label:last-child {
  width: 45%;
}

.login-form .privacy-policy {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: baseline;
  -ms-align-items: baseline;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
}

.login-form .privacy-policy label {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  padding-left: 1rem;
}

.change-words {
  width: 50%;
  word-wrap: break-word;
  font-size: 3em;
  display: inline-block;
  position: relative;
  top: -2.7rem;
  color: white;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2.4rem;
}

@media (max-width: 768px) {
  .change-words {
    display: block;
    width: 100%;
    text-align: center;
    padding-top: 30px;
  }
}

.change-words span {
  position: absolute;
  opacity: 0;
  overflow: hidden;
  -webkit-animation: animateWord 18s linear infinite 0s;
  animation: changeWord 18s linear infinite 0s;
  font-weight: 700;
}

@media (max-width: 768px) {
  .change-words span {
    display: block;
    width: 100%;
    text-align: center;
  }
}

.change-words span:nth-child(2) {
  -webkit-animation-delay: 3s;
  animation-delay: 3s;
  color: white;
}

.change-words span:nth-child(3) {
  -webkit-animation-delay: 6s;
  animation-delay: 6s;
  color: white;
}

.change-words span:nth-child(4) {
  -webkit-animation-delay: 9s;
  animation-delay: 9s;
  color: white;
}

.change-words span:nth-child(5) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
  color: white;
}

.change-words span:nth-child(6) {
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
  color: white;
}

@-webkit-keyframes changeWord {
  0% {
    opacity: 0;
  }
  2% {
    opacity: 0;
    -webkit-transform: translateY(-30px);
  }
  5% {
    opacity: 1;
    -webkit-transform: translateY(0px);
  }
  17% {
    opacity: 1;
    -webkit-transform: translateY(0px);
  }
  20% {
    opacity: 0;
    -webkit-transform: translateY(30px);
  }
  80% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

.cards-container .card {
  height: 100vh;
}

.cards-container .card .uk-card-body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 100%;
  padding: 40px 200px;
}

@media (max-width: 1440px) {
  .cards-container .card .uk-card-body {
    padding: 0 120px;
  }
}

@media (max-width: 1200px) {
  .cards-container .card .uk-card-body {
    padding: 0 80px;
  }
}

@media (max-width: 768px) {
  .cards-container .card .uk-card-body {
    padding: 0 40px;
  }
}

.cards-container .card .uk-card-body #tit-type {
  display: block;
  font-weight: 700;
}

.cards-container .card .uk-card-body h3 {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 4rem;
  line-height: 1.2;
}

@media (max-width: 992px) {
  .cards-container .card .uk-card-body h3 {
    font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 2.4rem;
  }
}

.cards-container .card .uk-card-body p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 2rem;
  color: #99A5BD;
  padding: 2rem 0;
}

@media (max-width: 992px) {
  .cards-container .card .uk-card-body p {
    font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 1.6rem;
  }
}

.cards-container .card .uk-card-body__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -ms-flex-pack: flex-start;
  width: 100%;
}

@media (max-width: 768px) {
  .cards-container .card .uk-card-body__buttons {
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

.cards-container .card .uk-card-body__buttons a {
  padding: 2rem 2rem 0 0;
}

@media (max-width: 768px) {
  .cards-container .card .uk-card-body__buttons a {
    padding: 2rem 0 0 0;
  }
}

.band-footer {
  background: #28C660;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 5rem;
}

@media (max-width: 992px) {
  .band-footer {
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

.band-footer__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 992px) {
  .band-footer__wrapper {
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

.band-footer p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 4.2rem;
  color: #fff;
  padding-right: 4rem;
}

@media (max-width: 992px) {
  .band-footer p {
    font-size: 3.2rem;
    padding: 2rem 0;
  }
}

@media (max-width: 992px) {
  .band-footer button {
    width: 19.7rem;
  }
}

@media (max-width: 768px) {
  .band-footer button {
    width: 100%;
  }
}

.login {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .login {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 992px) {
  .login {
    width: 60%;
  }
}

@media (max-width: 768px) {
  .login {
    width: 85%;
  }
}

.login__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100vh;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .login__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.login__wrapper__header {
  width: 40rem;
  padding: 1.4rem 0;
}

@media (max-width: 992px) {
  .login__wrapper__header {
    padding: unset;
    width: 100%;
  }
}

.login__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .login__wrapper__header .business {
    display: none;
  }
}

.login__wrapper__header h1 {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

@media (max-width: 992px) {
  .login__wrapper__header h1 {
    text-align: center;
  }
}

@media (max-width: 768px) {
  .login__wrapper__header h1 {
    font-size: 2.4rem;
  }
}

.login__wrapper__header p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  color: #768093;
  padding: 2rem 0;
}

.login__wrapper__header .social-signin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-pack: space-between;
  padding: 2rem 0 0 0;
}

.login__wrapper__header .uk-divider-icon {
  margin-bottom: 0;
}

.login__footer {
  width: 40rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: -6rem;
  padding-bottom: 0rem;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

@media (max-width: 992px) {
  .login__footer {
    width: 100%;
    -moz-justify-content: flex-start;
    -ms-justify-content: flex-start;
    -webkit-box-pack: start;
            justify-content: flex-start;
    -ms-flex-pack: flex-start;
    padding: 0 0 2.4rem 0;
    margin: unset;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

@media (max-width: 768px) {
  .login__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.login__footer__account {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
}

.login__footer .business-mobile {
  padding-top: 2rem;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-justify-content: flex-end;
  -ms-justify-content: flex-end;
  -webkit-box-pack: end;
          justify-content: flex-end;
  -ms-flex-pack: flex-end;
}

@media (min-width: 992px) {
  .login__footer .business-mobile {
    display: none;
  }
}

.password-recovery {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
  height: 100%;
}

@media (max-width: 1200px) {
  .password-recovery {
    width: 90%;
    margin: 0 auto;
  }
}

@media (max-width: 992px) {
  .password-recovery {
    width: 60%;
  }
}

@media (max-width: 768px) {
  .password-recovery {
    width: 90%;
  }
}

.password-recovery__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  height: 100vh;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-pack: center;
}

@media (max-width: 992px) {
  .password-recovery__wrapper {
    -webkit-box-pack: unset;
        -ms-flex-pack: unset;
            justify-content: unset;
    height: unset;
  }
}

.password-recovery__wrapper__header {
  width: 40rem;
  padding: 1.4rem 0;
}

@media (max-width: 768px) {
  .password-recovery__wrapper__header {
    width: 100%;
  }
}

.password-recovery__wrapper__header .business {
  top: 4rem;
  right: 0;
  position: absolute;
  width: 12.4rem;
  padding-bottom: 2rem;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header .business {
    margin: 0 auto;
    position: unset;
  }
}

@media (max-width: 768px) {
  .password-recovery__wrapper__header .business {
    width: unset;
    display: none;
  }
}

.password-recovery__wrapper__header h1 {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 3.2rem;
  text-align: left;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header h1 {
    text-align: center;
  }
}

.password-recovery__wrapper__header p {
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.4rem;
  color: #768093;
  padding: 2rem 0;
}

@media (max-width: 992px) {
  .password-recovery__wrapper__header {
    text-align: center;
  }
}

.password-recovery__footer {
  width: 40rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: -10rem;
  padding-bottom: 7rem;
  font-family: "Karla", sans-serif, "Arial", "Helvetica", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 1.6rem;
}

@media (max-width: 992px) {
  .password-recovery__footer {
    width: 100%;
    -moz-justify-content: flex-start;
    -ms-justify-content: flex-start;
    -webkit-box-pack: start;
            justify-content: flex-start;
    -ms-flex-pack: flex-start;
    padding: 0 0 2.4rem 0;
    margin: unset;
  }
}

@media (max-width: 768px) {
  .password-recovery__footer {
    -moz-justify-content: center;
    -ms-justify-content: center;
    -webkit-box-pack: center;
            justify-content: center;
    -ms-flex-pack: center;
  }
}

.page {
  background: white;
  margin: 0 auto;
  overflow: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2ZsZXguc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2J1dHRvbi1zdHlsZS5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fb24tZXZlbnQuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3doZW4taW5zaWRlLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19jb250YWluZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zaXplLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19zZXQtZm9udC5zY3NzIiwicGFydHMvYWJzdHJhY3RzL21peGlucy9fcmVtLnNjc3MiLCJwYXJ0cy9hYnN0cmFjdHMvbWl4aW5zL19ib3JkZXIuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3BhZGRpbmcuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2JveC1zaGFkb3cuc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX3RyYW5zaXRpb24uc2NzcyIsInBhcnRzL2Fic3RyYWN0cy9taXhpbnMvX2xpc3RyZXNldC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEtZ3JpZC9faW5jbHVkZS1tZWRpYS1ncmlkLnNjc3MiLCJtYWluLmNzcyIsInBhcnRzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwicGFydHMvYmFzZS9fYmFzZS5zY3NzIiwicGFydHMvYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJzY2FsZS1zYXNzL3N0eWxlc2hlZXRzL21vZHVsYXJzY2FsZS9fZnVuY3Rpb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlbS9fcmVtLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvaW5jbHVkZS1tZWRpYS9kaXN0L19pbmNsdWRlLW1lZGlhLnNjc3MiLCJwYXJ0cy9iYXNlL19oZWxwZXJzLnNjc3MiLCJwYXJ0cy9sYXlvdXQvX2xlZnQtcGFuZWwuc2NzcyIsInBhcnRzL2xheW91dC9fcmlnaHQtcGFuZWwuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2xvZ28uc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2J1dHRvbi5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMS1hdG9tcy9fdG9Ub3Auc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2lucHV0LnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAxLWF0b21zL19hbmNob3Iuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDEtYXRvbXMvX2Zvcm0uc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDItbW9sZWN1bGVzL19jaGFuZ2Utd29yZC5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMi1tb2xlY3VsZXMvX2NhcmRzLnNjc3MiLCJwYXJ0cy9jb21wb25lbnRzLzAyLW1vbGVjdWxlcy9fYmFuZC1mb290ZXIuc2NzcyIsInBhcnRzL2NvbXBvbmVudHMvMDMtb3JnYW5pc21zL19sb2dpbi5zY3NzIiwicGFydHMvY29tcG9uZW50cy8wMy1vcmdhbmlzbXMvX3Bhc3N3b3JkLXJlY292ZXJ5LnNjc3MiLCJwYXJ0cy9wYWdlcy9fcGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EscUdBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsbUdBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsNkZBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsNkZBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsNkZBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0ZBLCtFQUFBO0FBQ0EsK0VBQUE7QUFDQSwrRUFBQTtBQ0FBOztDQzBDQztBRHJDRDs7Q0N3Q0M7QURuQ0Q7O0NDc0NDO0FEakNEOztDQ29DQztBRC9CRDs7Q0NrQ0M7QUQvQkQ7RUFDSSxvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtFQUNiLG1CQUFlO01BQWYsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixTQUFTO0VBQ1QsVUFBVTtBQ2lDZDs7QUQ5QkE7O0NDa0NDO0FEL0JEOztFQUVJLG1CQUFPO01BQVAsV0FBTztVQUFQLE9BQU87RUFDUCxtQkFBWTtNQUFaLG9CQUFZO1VBQVosWUFBWTtBQ2lDaEI7O0FEOUJBOztFQ2tDRTtBRC9CRjtFQUNJLG1CQUFVO01BQVYsY0FBVTtVQUFWLFVBQVU7QUNpQ2Q7O0FEOUJBO0VBQ0ksbUJBQVk7TUFBWixvQkFBWTtVQUFaLFlBQVk7QUNpQ2hCOztBRDlCQTtFQUNJLG1CQUFZO01BQVosb0JBQVk7VUFBWixZQUFZO0FDaUNoQjs7QUQ5QkE7O0NDa0NDO0FEL0JEO0VBQ0ksdUJFZXNCO0FEa0IxQjs7QUQvQkE7O0VBRUksc0JFV3NCO0VGVnRCLDhCQUFzQjtVQUF0QixzQkFBc0I7QUNrQzFCOztBRC9CQTs7Q0NtQ0M7QURoQ0Q7RUFDSSx3QkFBdUI7TUFBdkIscUJBQXVCO1VBQXZCLHVCQUF1QjtBQ2tDM0I7O0FEaENBO0VBQ0ksc0JBQXFCO01BQXJCLG1CQUFxQjtVQUFyQixxQkFBcUI7QUNtQ3pCOztBRGpDQTtFQUNJLHlCQUFtQjtNQUFuQixzQkFBbUI7VUFBbkIsbUJBQW1CO0FDb0N2Qjs7QURqQ0E7O0NDcUNDO0FEbENEOztFQUVJLG9CQUFhO0VBQWIsb0JBQWE7RUFBYixhQUFhO0FDb0NqQjs7QURqQ0E7O0NDcUNDO0FEbENEO0VBQ0ksd0JBQXVCO01BQXZCLHFCQUF1QjtVQUF2Qix1QkFBdUI7QUNvQzNCOztBRGpDQTs7Q0NxQ0M7QURsQ0Q7RUFDSSwwQkFBc0I7TUFBdEIsc0JBQXNCO0FDb0MxQjs7QURsQ0E7RUFDSSx3QkFBb0I7TUFBcEIsb0JBQW9CO0FDcUN4Qjs7QURuQ0E7RUFDSSwyQkFBa0I7TUFBbEIsa0JBQWtCO0FDc0N0Qjs7QURuQ0E7O0NDdUNDO0FFckpELDJFQUFBO0FBRUE7K0VGc0orRTtBRW5KL0U7OztFRnVKRTtBRWxKRjtFQUNFLGlCQUFpQjtFQUFFLE1BQUE7RUFDbkIsOEJBQThCO0VBQUUsTUFBQTtBRnNKbEM7O0FFbkpBOytFRnNKK0U7QUVuSi9FOztFRnNKRTtBRWxKRjtFQUNFLFNBQVM7QUZvSlg7O0FFakpBOztFRnFKRTtBRWpKRjtFQUNFLGNBQWM7QUZtSmhCOztBRWhKQTs7O0VGcUpFO0FFaEpGO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBRmtKbEI7O0FFL0lBOytFRmtKK0U7QUUvSS9FOzs7RUZtSkU7QUU5SUY7RUFDRSwrQkFBdUI7VUFBdkIsdUJBQXVCO0VBQUUsTUFBQTtFQUN6QixTQUFTO0VBQUUsTUFBQTtFQUNYLGlCQUFpQjtFQUFFLE1BQUE7QUZtSnJCOztBRWhKQTs7O0VGcUpFO0FFaEpGO0VBQ0UsaUNBQWlDO0VBQUUsTUFBQTtFQUNuQyxjQUFjO0VBQUUsTUFBQTtBRm9KbEI7O0FFakpBOytFRm9KK0U7QUVqSi9FOztFRm9KRTtBRWhKRjtFQUNFLDZCQUE2QjtBRmtKL0I7O0FFL0lBOzs7RUZvSkU7QUUvSUY7RUFDRSxtQkFBbUI7RUFBRSxNQUFBO0VBQ3JCLDBCQUEwQjtFQUFFLE1BQUE7RUFDNUIseUNBQWlDO1VBQWpDLGlDQUFpQztFQUFFLE1BQUE7QUZvSnJDOztBRWpKQTs7RUZxSkU7QUVqSkY7O0VBRUUsbUJBQW1CO0FGbUpyQjs7QUVoSkE7OztFRnFKRTtBRWhKRjs7O0VBR0UsaUNBQWlDO0VBQUUsTUFBQTtFQUNuQyxjQUFjO0VBQUUsTUFBQTtBRm9KbEI7O0FFakpBOztFRnFKRTtBRWpKRjtFQUNFLGNBQWM7QUZtSmhCOztBRWhKQTs7O0VGcUpFO0FFaEpGOztFQUVFLGNBQWM7RUFDZCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLHdCQUF3QjtBRmtKMUI7O0FFL0lBO0VBQ0UsZUFBZTtBRmtKakI7O0FFL0lBO0VBQ0UsV0FBVztBRmtKYjs7QUUvSUE7K0VGa0orRTtBRS9JL0U7O0VGa0pFO0FFOUlGO0VBQ0Usa0JBQWtCO0FGZ0pwQjs7QUU3SUE7K0VGZ0orRTtBRTdJL0U7OztFRmlKRTtBRTVJRjs7Ozs7RUFLRSxvQkFBb0I7RUFBRSxNQUFBO0VBQ3RCLGVBQWU7RUFBRSxNQUFBO0VBQ2pCLGlCQUFpQjtFQUFFLE1BQUE7RUFDbkIsU0FBUztFQUFFLE1BQUE7QUZrSmI7O0FFL0lBOzs7RUZvSkU7QUUvSUY7O0VBQ1EsTUFBQTtFQUNOLGlCQUFpQjtBRmtKbkI7O0FFL0lBOzs7RUZvSkU7QUUvSUY7O0VBQ1MsTUFBQTtFQUNQLG9CQUFvQjtBRmtKdEI7O0FFL0lBOztFRm1KRTtBRS9JRjs7OztFQUlFLDBCQUEwQjtBRmlKNUI7O0FFOUlBOztFRmtKRTtBRTlJRjs7OztFQUlFLGtCQUFrQjtFQUNsQixVQUFVO0FGZ0paOztBRTdJQTs7RUZpSkU7QUU3SUY7Ozs7RUFJRSw4QkFBOEI7QUYrSWhDOztBRTVJQTs7RUZnSkU7QUU1SUY7RUFDRSw4QkFBOEI7QUY4SWhDOztBRTNJQTs7Ozs7RUZrSkU7QUUzSUY7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0VBQUUsTUFBQTtFQUN4QixjQUFjO0VBQUUsTUFBQTtFQUNoQixjQUFjO0VBQUUsTUFBQTtFQUNoQixlQUFlO0VBQUUsTUFBQTtFQUNqQixVQUFVO0VBQUUsTUFBQTtFQUNaLG1CQUFtQjtFQUFFLE1BQUE7QUZtSnZCOztBRWhKQTs7RUZvSkU7QUVoSkY7RUFDRSx3QkFBd0I7QUZrSjFCOztBRS9JQTs7RUZtSkU7QUUvSUY7RUFDRSxjQUFjO0FGaUpoQjs7QUU5SUE7OztFRm1KRTtBQUNGOztFRTdJRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0VBQUUsTUFBQTtFQUN4QixVQUFVO0VBQUUsTUFBQTtBRmtKZDs7QUUvSUE7O0VGbUpFO0FBQ0Y7O0VFOUlFLFlBQVk7QUZpSmQ7O0FFOUlBOzs7RUZtSkU7QUFDRjtFRTlJRSw2QkFBNkI7RUFBRSxNQUFBO0VBQy9CLG9CQUFvQjtFQUFFLE1BQUE7QUZrSnhCOztBRS9JQTs7RUZtSkU7QUFDRjtFRS9JRSx3QkFBd0I7QUZpSjFCOztBRTlJQTs7O0VGbUpFO0FFOUlGO0VBQ0UsMEJBQTBCO0VBQUUsTUFBQTtFQUM1QixhQUFhO0VBQUUsTUFBQTtBRmtKakI7O0FFL0lBOytFRmtKK0U7QUUvSS9FOztFRmtKRTtBRTlJRjtFQUNFLGNBQWM7QUZnSmhCOztBRTdJQTs7RUZpSkU7QUU3SUY7RUFDRSxrQkFBa0I7QUYrSXBCOztBRTVJQTsrRUYrSStFO0FFNUkvRTs7RUYrSUU7QUUzSUY7RUFDRSxhQUFhO0FGNklmOztBRTFJQTs7RUY4SUU7QUFDRjtFRTFJRSxhQUFhO0FGNElmOztBR3ZlQTtFQUNFLDhCQUFzQjtVQUF0QixzQkFBc0I7QUgwZXhCOztBR3ZlQTtFQUNFLG1CRmdGWTtBRDBaZDs7QUczZUE7RUFDRSxtQkZnRlk7QUQwWmQ7O0FHdmVBO0VBQ0UsbUJGa0ZZO0FEd1pkOztBR3ZlQTtFQUNFLFNBQVM7QUgwZVg7O0FHdmVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixjQUFjO0FIMGVoQjs7QUd2ZUE7RUFDRSxxQkFBcUI7RUFDckIsY0YrRFk7QUQyYWQ7O0FHNWVBO0VBSUksNEJGOEpLO0VFOUpMLHVCRjhKSztFRTlKTCxvQkY4Sks7RUU3SkwsY0Y0RFU7QURnYmQ7O0FHeGVBO0VBQ0Usa0JBQWtCO0FIMmVwQjs7QUd4ZUE7O0VBRUUsU0FBUztBSDJlWDs7QUd4ZUE7RUFDRSxlQUFlO0FIMmVqQjs7QUlwaEJBO0VBQ0UsZUFBZTtBSnVoQmpCOztBSXBoQkE7RUFDRSxZSDRFZ0I7RUczRWhCLGdDSGdKb0M7RUcvSXBDLGdCQUFnQjtBSnVoQmxCOztBSXBoQkE7RUFDRSxnQkFBZ0I7RUFDaEIsZUNFb0M7QUxxaEJ0Qzs7QUl0aEJFO0VBQ0UscUJDQWtDO0FMeWhCdEM7O0FJN2hCQTtFQVFJLG1CRWdCd0Q7QU55Z0I1RDs7QUlqaUJBO0VBWUksYUFBYTtBSnloQmpCOztBSXJpQkE7RUFnQkksZ0JBQWdCO0FKeWhCcEI7O0FJemlCQTtFQW9CSSx3QkVJd0Q7QU5xaEI1RDs7QUk3aUJBO0VaTkMsa0VBQXVEO0VBQ3ZELGtCQUY2RTtFQUc3RSxtQkFINEQ7RUFJNUQsaUJTaUpzQjtBRHNhdkI7O0FJcGpCQTtFQTZCTSxnQkFBZ0I7RWRmckIsa0JBWDBCO0VjNEJyQixxQkVQc0Q7RUZRdEQsbUVBQW1FO0FKMmhCekU7O0FJM2pCQTtFQXFDSSxnQkFBZ0I7QUowaEJwQjs7QUkvakJBO0VBeUNJLGtCQUFrQjtBSjBoQnRCOztBSW5rQkE7RUE2Q0ksY0FBYztFQUNkLHFCRXRCd0Q7QU5nakI1RDs7QUl4a0JBO0VBZ0RNLFNBQVM7QUo0aEJmOztBT3JDSTtFSHZpQko7SUFzRE0sY0FBYztJQUNkLFdBQVc7SUFDWCx3QkFBd0I7RUoyaEI1QjtBQUNGOztBSXhoQkU7RUFDRSxxQkN6RGtDO0FMb2xCdEM7O0FRbG1CQTtFQUNFLFNBQVM7RUFDVCxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixVQUFVO0FScW1CWjs7QVFsbUJBO0VBRUksY0FBYztBUm9tQmxCOztBUWptQkE7RUFFSSxpQkFBaUI7RUFDakIsa0JBQWtCO0FSbW1CdEI7O0FRaG1CQTtFQUVJLGVBQWU7QVJrbUJuQjs7QVMxbkJBO0VBQ0UsbUJSMEZZO0VWdkZiLFlrQkZvQjtFbEJHcEIsYWtCSDJCO0FUOG5CNUI7O0FPL0VJO0VFampCSjtJbEJJQyxXa0JDcUI7SWxCQXJCLFlrQkEyQjtFVGlvQjFCO0FBQ0Y7O0FTL25CRTtFQUNFLFlBQVk7RXhCSGYsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBZ0hWLHdCd0IvRzJCO0V4QmdIN0IsdUJ3QmhINkI7RXhCaUg1Qix5QndCakg0QjtNeEJpSDVCLHNCd0JqSDRCO1V4QmlINUIsbUJ3QmpINEI7QVR5b0IvQjs7QVN0b0JFO0V4QlJELG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGViw0QndCckYrQjtFeEJzRmpDLDJCd0J0RmlDO0V4QnVGaEMsd0J3QnZGZ0M7VXhCdUZoQyx1QndCdkZnQztFeEJ3RjlCLHFCd0J4RjhCO0V4QjBHL0Isd0J3QnpHMkI7RXhCMEc3Qix1QndCMUc2QjtFeEIyRzVCLHlCd0IzRzRCO014QjJHNUIsc0J3QjNHNEI7VXhCMkc1QixtQndCM0c0QjtBVG9wQi9COztBU2pwQkU7RXhCZEQsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBd0NaLHFCd0I1QjJCO0V4QjZCMUIsNEJ3QjdCMEI7RXhCNkIxQiw2QndCN0IwQjtVeEI2QjFCLGlCd0I3QjBCO0V4QitFekIsNEJ3QjlFK0I7RXhCK0VqQywyQndCL0VpQztFeEJnRmhDLHdCd0JoRmdDO1V4QmdGaEMsdUJ3QmhGZ0M7RXhCaUY5QixxQndCakY4QjtFQUMvQixZQUFZO0FUK3BCaEI7O0FPdElJO0VFN2hCRjtJeEJpRkUsNEJ3QnpFaUM7SXhCMEVuQywyQndCMUVtQztJeEIyRWxDLHdCd0IzRWtDO1l4QjJFbEMsdUJ3QjNFa0M7SXhCNEVoQyxxQndCNUVnQztFVG9xQm5DO0FBQ0Y7O0FPaEpJO0VFN2hCRjtJeEI4QkEsa0J3QmxCMEI7SXhCbUJ6Qiw4QndCbkJ5QjtJeEJtQnpCLDZCd0JuQnlCO1l4Qm1CekIsY3dCbkJ5QjtJeEIwRnhCLHdCd0J6RjZCO0l4QjBGL0IsdUJ3QjFGK0I7SXhCMkY5Qix5QndCM0Y4QjtReEIyRjlCLHNCd0IzRjhCO1l4QjJGOUIsbUJ3QjNGOEI7RVQ0cUIvQjtBQUNGOztBTzdKSTtFRTdoQkY7SXhCOEJBLHFCd0JiNkI7SXhCYzVCLDRCd0JkNEI7SXhCYzVCLDZCd0JkNEI7WXhCYzVCLGlCd0JkNEI7SUFDekIsZUFBZTtFVGlyQm5CO0FBQ0Y7O0FTL3FCSTtFeEJuQ0gsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLGdDd0IxRHFDO0V4QjJEdkMsK0J3QjNEdUM7RXhCNER0Qyx1QndCNURzQztVeEI0RHRDLDJCd0I1RHNDO0V4QjZEcEMseUJ3QjdEb0M7RUFDbkMsdUJBQXVCO0FUMHJCN0I7O0FPckxJO0VFeGdCQTtJQU9JLG9CQUFvQjtFVDJyQjFCO0FBQ0Y7O0FTdnJCRztFQUdHLG9CQUFvQjtBVHdyQjFCOztBTy9MSTtFRTVmRDtJQU1LLGtCQUFrQjtFVDByQnhCO0FBQ0Y7O0FTanNCRztFQVVLLHFCQUFxQjtFQUNyQixZQUFZO0VqQjVEbkIsa0VBQXVEO0VBQ3ZELGtCaUI0RDBEO0VqQjNEMUQsbUJpQjJEa0Q7RWpCMURsRCxpQmlCMERrRTtBVDhyQm5FOztBTzlNSTtFRTVmRDtJQWVPLGVBQWU7RVRnc0J2QjtBQUNGOztBU2h0Qkc7RUFvQksscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixnQkFBZ0I7QVRnc0J4Qjs7QU8xTkk7RUU1ZkQ7SUF5Qk8sY0FBYztJQUNkLGVBQWU7RVRrc0J2QjtBQUNGOztBT2pPSTtFRTVmRDtJQThCTyxxQkFBcUI7SUFDckIsaUJBQWlCO0VUb3NCekI7QUFDRjs7QU94T0k7RUU1ZkQ7SUFzQ0ssWUFBWTtFVG1zQmxCO0FBQ0Y7O0FPOU9JO0VFNWZGO0l4QmdERSw0QndCTGlDO0l4Qk1uQywyQndCTm1DO0l4Qk9sQyx3QndCUGtDO1l4Qk9sQyx1QndCUGtDO0l4QlFoQyxxQndCUmdDO0VUd3NCbkM7QUFDRjs7QU94UEk7RUU1ZkY7SUErQ0ksWUFBWTtJQUNaLGtCQUFrQjtFVDBzQnRCO0FBQ0Y7O0FPL1BJO0VFNWZGO0lBb0RJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCO0VUNHNCdEI7QUFDRjs7QVV4ekJBO0VBQ0MsVUFBVTtFQUNWLGNBQWM7QVYyekJmOztBTzVRSTtFR2pqQko7SUFLRyxXQUFVO0VWNnpCWDtBQUNGOztBV2owQkE7RUFDRSxjQUFjO0FYbzBCaEI7O0FXaDBCRTtFQUNFLGdCQUFnQjtBWG0wQnBCOztBWXAwQkE7RXBCSEMsa0VBQXVEO0VBQ3ZELGtCb0JHb0Q7RXBCRnBELG1Cb0JFNEM7RXBCRDVDLGlCU21KdUI7RVZ0SnZCLGNxQktzQjtFckJKdEIsWXFCSTRCO0VBQzNCLDBCTndCMEQ7RU12QjFELGdCQVJNO0VBU04scUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixlQUFlO0VBQ2YsNEJYeUtPO0VXektQLHVCWHlLTztFV3pLUCxvQlh5S087RVd4S1AsWUFBVztFQUNYLGtCQWZTO0FaMDFCWDs7QU8zU0k7RUsxaUJKO0lBWUksV0FDRjtFWjYwQkE7QUFDRjs7QVkzMUJBO0VyQkhDLFdlOEIyRDtFZjdCM0QsWWU2QjJEO0VNVnhELDRCWGdLSztFV2hLTCx1QlhnS0s7RVdoS0wsb0JYZ0tLO0FEZ3JCVDs7QVk3MEJFO0VBQ0UsbUJYeURVO0VXeERWLFlBQVc7QVpnMUJmOztBWWwxQkc7RUFJRyxtQlhzRFE7RVdyRFIsV1hvR1k7QUQ4dUJsQjs7QVl2MUJHO0VBUUcsbUJYbURRO0VXbERSLFdBQVc7QVptMUJqQjs7QVk1MUJHO0VBWUcsOEJBQXFCO01BQXJCLDBCQUFxQjtVQUFyQixzQkFBcUI7QVpvMUIzQjs7QVloMUJFO0UxQnRDRCxZMEJ1QzhCO0UxQnRDOUIsaUIwQnNDNEM7RTFCckM1QyxtQjBCcUM0RDtFckJ4QzVELFlxQnlDc0I7RXJCeEN0QixZcUJ3QzRCO0FaczFCN0I7O0FkMTNCQztFQUNFLFcwQmtDNEI7QVoyMUIvQjs7QWIzM0JHO0VERUEsWTBCOEJtQztFMUI3Qm5DLG1CMEI2Qm1EO0UxQjVCbkQsbUIwQjRCaUU7QVppMkJwRTs7QWQzM0JHO0VBQ0QsVzBCeUJvQztBWnEyQnRDOztBWXQyQkc7RUFJRyxpQkFBa0I7RUFDbEIsWUFBWTtFQUNaLDhCQUFxQjtNQUFyQiwwQkFBcUI7VUFBckIsc0JBQXFCO0FaczJCM0I7O0FPdFdJO0VLdGdCRjtJQVNJLFdBQVc7RVp3MkJmO0FBQ0Y7O0FZcjJCRTtFMUJuREQsWTBCb0Q4QjtFMUJuRDlCLG1CZXVGYTtFZnRGYixxQmV5RmE7RVd0Q1YsWUFBWTtFQUNaLGtCQXpETztFQTBEUCx5QlhpQ1U7QUR5MEJkOztBZDc1QkM7RUFDRSxXMEIrQzRCO0FaaTNCL0I7O0FiOTVCRztFREVBLFkwQjJDbUM7RTFCMUNuQyxtQmVpRlc7RWZoRlgscUJlZ0ZXO0FEZzFCZDs7QWQ5NUJHO0VBQ0QsVzBCc0NvQztBWjIzQnRDOztBWTUzQkc7RUFNRyxtQlgrQlE7RVc5QlIsV1hxRVk7RVdwRVosOEJBQXFCO01BQXJCLDBCQUFxQjtVQUFyQixzQkFBcUI7QVowM0IzQjs7QU96WUk7RUt6ZkY7SUFZSSxVQUFVO0VaMjNCZDtBQUNGOztBWXg0Qkc7RUFnQkcsaUJYZ0ZpQjtFVy9FakIscUJBQXFCO0FaNDNCM0I7O0FZeDNCRTtFMUJ4RUQsWTBCeUU4QjtFMUJ4RTlCLG1CZXdGYTtFZnZGYixxQmUwRmE7RVdsQlYsV0FBVztFQUNYLGlCWHdFbUI7RVd2RW5CLGtCQS9FTztFQWdGUCx5QlhZVTtFV1hWLGVBQWU7RUFDZiw0QlhvR0s7RVdwR0wsdUJYb0dLO0VXcEdMLG9CWG9HSztBRHl4QlQ7O0FkeDhCQztFQUNFLFcwQm9FNEI7QVp1NEIvQjs7QWJ6OEJHO0VERUEsWTBCZ0VtQztFMUIvRG5DLG1CZWtGVztFZmpGWCxxQmVpRlc7QUQwM0JkOztBZHo4Qkc7RUFDRCxXMEIyRG9DO0FaaTVCdEM7O0FZbDVCRztFQVNHLG1CWFFRO0VXUFIsV1g2Q1k7RVc1Q1osOEJBQXFCO01BQXJCLDBCQUFxQjtVQUFyQixzQkFBcUI7QVo2NEIzQjs7QU9wYkk7RUtwZUY7SUFlSSxVQUFVO0VaODRCZDtBQUNGOztBWTM0QkU7RTFCM0ZELFkwQjRGOEI7RTFCM0Y5QixtQmV5RmE7RWZ4RmIscUJld0ZhO0VXR1Ysa0JBaEdPO0FaZy9CWDs7QWR6K0JDO0VBQ0UsVzBCdUY0QjtBWnE1Qi9COztBYjErQkc7RURFQSxZMEJtRm1DO0UxQmxGbkMsbUIwQmtGOEQ7RTFCakY5RCxxQmUrRVc7QUQ2NUJkOztBZDErQkc7RUFDRCxXMEI4RW9DO0FaKzVCdEM7O0FZaDZCRztFQUlHLG1CWExRO0VXTVIsV1grQlk7RVc5QlosOEJBQXFCO01BQXJCLDBCQUFxQjtVQUFyQixzQkFBcUI7QVpnNkIzQjs7QVl6NUJBO0VBQ0UsY0FBYztBWjQ1QmhCOztBT3pkSTtFS3BjSjtJQUdJLFdBQVc7RVorNUJiO0FBQ0Y7O0FhaGhDQSwrRUFBQTtBQUNBLCtFQUFBO0FBQ0EsK0VBQUE7QUFFQTtFdEJBQyxXc0JDcUI7RXRCQXJCLGVzQkE4QjtFdkJnQjdCLFF1QmZ3QjtFdkJleEIsV3VCZm1DO0V2QmtCcEMsZUFmdUI7RXVCRnBCLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osZUFBZTtFQUNmLGtEQUEwQztVQUExQywwQ0FBMEM7QWJxaEM5Qzs7QWE5aENBO0VBWVEsNEJad0tDO0VZeEtELHVCWndLQztFWXhLRCxvQlp3S0M7RVl2S0QsVUFBUztFQUNULGtEQUEwQztVQUExQywwQ0FBMEM7RUFDMUMsWUFBVztBYnNoQ25COztBY3ppQ0M7RUFDRSxtQmJ5Rlc7RWF4RlgsWUFBWTtFQUNaLDZCQUE2QjtFQUM3QixrQkFBa0I7RXRCQXBCLGtFQUF1RDtFQUN2RCxrQnNCQXFEO0V0QkNyRCxtQnNCRDZDO0V0QkU3QyxpQnNCRjZEO0VBQzNELGNBQWM7QWQraUNqQjs7QWM1aUNDOzs7RUFHRSx5QmIrRVc7QURnK0JkOztBZTNqQ0E7RXZCSUMsa0VBQXVEO0VBQ3ZELGtCdUJKb0Q7RXZCS3BELG1CdUJMNEM7RXZCTTVDLGlCdUJONEQ7RUFDM0QscUJBQXFCO0VBQ3JCLGNka0ZZO0FEKytCZDs7QWVwa0NBO0VBTUksNEJka0xLO0VjbExMLHVCZGtMSztFY2xMTCxvQmRrTEs7RWNqTEwsY2QrRVU7QURtL0JkOztBZ0J6a0NBO0VBQ0MsWUFBWTtFQUNaLHNCQUFzQjtBaEI0a0N2Qjs7QU83aEJJO0VTampCSjtJQUtFLFdBQVU7RWhCOGtDVjtBQUNGOztBZ0JwbENBO0V4QklDLGtFQUF1RDtFQUN2RCxrQndCSWlEO0V4QkhqRCxnQndCR3lDO0V4QkZ6QyxpQndCRXlEO0VBQ3hELHFCQUFxQjtFQUNyQixjQUFhO0FoQmtsQ2Y7O0FnQi9rQ0M7RS9CUkEsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DK0JyRm9DO0UvQnNGdEMsa0MrQnRGc0M7RS9CdUZyQyx5QitCdkZxQztVL0J1RnJDLDhCK0J2RnFDO0UvQndGbkMsNEIrQnhGbUM7RS9CMEdwQyx3QitCekd5QjtFL0IwRzNCLHVCK0IxRzJCO0UvQjJHMUIseUIrQjNHMEI7TS9CMkcxQixzQitCM0cwQjtVL0IyRzFCLG1CK0IzRzBCO0FoQjZsQzdCOztBZ0JobUNFO0VBS0MsVUFBVTtBaEIrbENiOztBZ0JsbkNBO0UvQk1DLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQWdIViwwQitCakcyQjtFL0JrRzdCLHlCK0JsRzZCO0UvQm1HNUIsMkIrQm5HNEI7TS9CbUc1Qix3QitCbkc0QjtVL0JtRzVCLHFCK0JuRzRCO0FoQnFtQy9COztBZ0I5bkNBO0V4QklDLGtFQUF1RDtFQUN2RCxrQndCc0JxRDtFeEJyQnJELG1Cd0JxQjZDO0V4QnBCN0MsaUJTbUp1QjtFZTlIckIsa0JBQWtCO0FoQjBtQ3JCOztBaUJ0b0NBO0VBQ0UsVUFBVTtFQUNWLHFCQUFxQjtFQUNyQixjQUFjO0VBQ2QscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUFBWTtFekJIYixrRUFBdUQ7RUFDdkQsa0J5QkdvRDtFekJGcEQsbUJ5QkU0QztFekJENUMsaUJ5QkM0RDtBakI0b0M3RDs7QU9ubUJJO0VVampCSjtJQVdJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtFakI4b0NuQjtBQUNGOztBaUIxb0NBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIscURBQXFEO0VBRXJELDRDQUE0QztFQUM1QyxnQkFBZ0I7QWpCNm9DbEI7O0FPdG5CSTtFVTloQko7SUFVSSxjQUFjO0lBQ2QsV0FBVztJQUNYLGtCQUFrQjtFakIrb0NwQjtBQUNGOztBaUI1b0NBO0VBQ0UsMkJBQTJCO0VBRTNCLG1CQUFtQjtFQUNuQixZQUFZO0FqQitvQ2Q7O0FpQjVvQ0E7RUFDRSwyQkFBMkI7RUFFM0IsbUJBQW1CO0VBQ25CLFlBQVk7QWpCK29DZDs7QWlCNW9DQTtFQUNFLDJCQUEyQjtFQUUzQixtQkFBbUI7RUFDbkIsWUFBWTtBakIrb0NkOztBaUI1b0NBO0VBQ0UsNEJBQTRCO0VBRTVCLG9CQUFvQjtFQUNwQixZQUFZO0FqQitvQ2Q7O0FpQjVvQ0E7RUFDRSwyQkFBMkI7RUFFM0IsbUJBQW1CO0VBQ25CLFlBQVk7QWpCK29DZDs7QWlCMW9DQTtFQUNFO0lBQ0UsVUFBVTtFakI2b0NaO0VpQjFvQ0E7SUFDRSxVQUFVO0lBQ1Ysb0NBQW9DO0VqQjRvQ3RDO0VpQnpvQ0E7SUFDRSxVQUFVO0lBQ1Ysa0NBQWtDO0VqQjJvQ3BDO0VpQnhvQ0E7SUFDRSxVQUFVO0lBQ1Ysa0NBQWtDO0VqQjBvQ3BDO0VpQnZvQ0E7SUFDRSxVQUFVO0lBQ1YsbUNBQW1DO0VqQnlvQ3JDO0VpQnRvQ0E7SUFDRSxVQUFVO0VqQndvQ1o7RWlCcm9DQTtJQUNFLFVBQVU7RWpCdW9DWjtBQUNGOztBa0I5dUNBO0VBRUksYUFBYTtBbEJndkNqQjs7QWtCbHZDQTtFQUtNLG9CQUFhO0VBQWIsb0JBQWE7RUFBYixhQUFhO0VBQ2IsNEJBQXNCO0VBQXRCLDZCQUFzQjtNQUF0QiwwQkFBc0I7VUFBdEIsc0JBQXNCO0VBQ3RCLHdCQUF1QjtNQUF2QixxQkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixtQkFBbUI7QWxCaXZDekI7O0FPenNCSTtFV2pqQko7SUFZUSxnQkFBZ0I7RWxCbXZDdEI7QUFDRjs7QU8vc0JJO0VXampCSjtJQWdCUSxlQUFlO0VsQnF2Q3JCO0FBQ0Y7O0FPcnRCSTtFV2pqQko7SUFvQlEsZUFBZTtFbEJ1dkNyQjtBQUNGOztBa0I1d0NBO0VBd0JRLGNBQWM7RUFDZCxnQkFBZ0I7QWxCd3ZDeEI7O0FrQmp4Q0E7RTFCSUMsa0VBQXVEO0VBQ3ZELGtCMEJ5QjBEO0UxQnhCMUQsbUIwQndCa0Q7RTFCdkJsRCxlMEJ1QmdFO0VBQ3pELGdCQUFnQjtBbEIwdkN4Qjs7QU94dUJJO0VXampCSjtJMUJJQyxrRUFBdUQ7SUFDdkQsa0IwQjZCNEQ7STFCNUI1RCxtQjBCNEJvRDtJMUIzQnBELGlCMEIyQm9FO0VsQit2Q25FO0FBQ0Y7O0FrQmx5Q0E7RTFCSUMsa0VBQXVEO0VBQ3ZELGtCMEJrQzBEO0UxQmpDMUQsbUIwQmlDa0Q7RTFCaENsRCxlMEJnQ2dFO0VBQ3pELGNqQndGaUI7RWlCdkZqQixlQUFlO0FsQmt3Q3ZCOztBTzF2Qkk7RVdqakJKO0kxQklDLGtFQUF1RDtJQUN2RCxrQjBCdUM0RDtJMUJ0QzVELG1CMEJzQ29EO0kxQnJDcEQsaUJTaUpzQjtFRDJwQ3JCO0FBQ0Y7O0FrQnB6Q0E7RWpDTUMsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLGdDaUNuRHVDO0VqQ29EekMsK0JpQ3BEeUM7RWpDcUR4Qyx1QmlDckR3QztVakNxRHhDLDJCaUNyRHdDO0VqQ3NEdEMseUJpQ3REc0M7RUFDbkMsV0FBVztBbEIrd0NuQjs7QU9qeEJJO0VXampCSjtJakM2QkksMkJpQ3lCb0M7SWpDeEJ0QywwQmlDd0JzQztJakN2QnJDLDRCaUN1QnFDO0lqQ3ZCckMsNkJpQ3VCcUM7WWpDdkJyQyxzQmlDdUJxQztFbEJveEN0QztBQUNGOztBa0IzMENBO0VBMERVLHNCQUFzQjtBbEJxeENoQzs7QU85eEJJO0VXampCSjtJQTZEWSxtQkFBbUI7RWxCdXhDN0I7QUFDRjs7QW1CcjFDQTtFQUNFLG1CbEJvRlk7RVZqRmIsVzRCRm1CO0U1QkduQixZNEJIeUI7RWxDSXpCLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQTJGViw0QmtDakc2QjtFbENrRy9CLDJCa0NsRytCO0VsQ21HOUIsd0JrQ25HOEI7VWxDbUc5Qix1QmtDbkc4QjtFbENvRzVCLHFCa0NwRzRCO0VsQ3NIN0Isd0JrQ3JIeUI7RWxDc0gzQix1QmtDdEgyQjtFbEN1SDFCLHlCa0N2SDBCO01sQ3VIMUIsc0JrQ3ZIMEI7VWxDdUgxQixtQmtDdkgwQjtFQUMzQixhQUFhO0FuQm8yQ2Y7O0FPenpCSTtFWWpqQko7SWxDNkJJLDJCa0NwQjhCO0lsQ3FCaEMsMEJrQ3JCZ0M7SWxDc0IvQiw0QmtDdEIrQjtJbENzQi9CLDZCa0N0QitCO1lsQ3NCL0Isc0JrQ3RCK0I7RW5CeTJDaEM7QUFDRjs7QW1CdjJDRTtFQUNFLG9CQUFhO0VBQWIsb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO01BQW5CLHNCQUFtQjtVQUFuQixtQkFBbUI7RUFDbkIsd0JBQXVCO01BQXZCLHFCQUF1QjtVQUF2Qix1QkFBdUI7QW5CMDJDM0I7O0FPeDBCSTtFWXJpQkY7SWxDaUJFLDJCa0NYZ0M7SWxDWWxDLDBCa0Naa0M7SWxDYWpDLDRCa0NiaUM7SWxDYWpDLDZCa0NiaUM7WWxDYWpDLHNCa0NiaUM7RW5CKzJDbEM7QUFDRjs7QW1CbDRDQTtFM0JJQyxrRUFBdUQ7RUFDdkQsa0IyQmtCc0Q7RTNCakJ0RCxtQjJCaUI4QztFM0JoQjlDLGlCMkJnQjhEO0VBQzNELFdsQjRHYztFa0IzR2QsbUJBQW1CO0FuQmszQ3ZCOztBTzExQkk7RVlqakJKO0lBNEJNLGlCQUFpQjtJQUNqQixlQUFlO0VuQm8zQ25CO0FBQ0Y7O0FPajJCSTtFWWpqQko7SUFtQ00sY0FBYztFbkJvM0NsQjtBQUNGOztBT3YyQkk7RVlqakJKO0lBdUNNLFdBQVc7RW5CczNDZjtBQUNGOztBb0I5NUNBO0U5QndCQyxrQkFYMEI7RUxQMUIsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBbUJWLDJCbUMxQjRCO0VuQzJCOUIsMEJtQzNCOEI7RW5DNEI3Qiw0Qm1DNUI2QjtFbkM0QjdCLDZCbUM1QjZCO1VuQzRCN0Isc0JtQzVCNkI7RW5DdUg1Qix3Qm1DdEh5QjtFbkN1SDNCLHVCbUN2SDJCO0VuQ3dIMUIseUJtQ3hIMEI7TW5Dd0gxQixzQm1DeEgwQjtVbkN3SDFCLG1CbUN4SDBCO0VuQ2lHekIsNEJtQ2hHNkI7RW5DaUcvQiwyQm1DakcrQjtFbkNrRzlCLHdCbUNsRzhCO1VuQ2tHOUIsdUJtQ2xHOEI7RW5DbUc1QixxQm1Dbkc0QjtFQUMvQixZQUFZO0FwQis2Q2Q7O0FPcDRCSTtFYWpqQko7SUFTSSxVQUFVO0lBQ1YsY0FBYztFcEJpN0NoQjtBQUNGOztBTzM0Qkk7RWFqakJKO0lBY0ksVUFBVTtFcEJtN0NaO0FBQ0Y7O0FPajVCSTtFYWpqQko7SUFrQkksVUFBVTtFcEJxN0NaO0FBQ0Y7O0FvQm43Q0U7RW5DZkQsb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBbUJWLDJCbUNOOEI7RW5DT2hDLDBCbUNQZ0M7RW5DUS9CLDRCbUNSK0I7RW5DUS9CLDZCbUNSK0I7VW5DUS9CLHNCbUNSK0I7RTdCbkJqQyxXNkJvQnFCO0U3Qm5CckIsYTZCbUI0QjtFbkNrR3pCLHdCbUNqRzJCO0VuQ2tHN0IsdUJtQ2xHNkI7RW5DbUc1Qix5Qm1Dbkc0QjtNbkNtRzVCLHNCbUNuRzRCO1VuQ21HNUIsbUJtQ25HNEI7RW5DNEUzQiw0Qm1DM0UrQjtFbkM0RWpDLDJCbUM1RWlDO0VuQzZFaEMsd0JtQzdFZ0M7VW5DNkVoQyx1Qm1DN0VnQztFbkM4RTlCLHFCbUM5RThCO0FwQnE4Q25DOztBTzk2Qkk7RWE1aEJGO0lBUUksdUJBQXNCO1FBQXRCLG9CQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIsYUFBYTtFcEJ1OENqQjtBQUNGOztBb0JyOENJO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQjtBcEJ3OEN2Qjs7QU8xN0JJO0VhaGhCQTtJQUtJLGNBQWM7SUFDZCxXQUFXO0VwQjA4Q2pCO0FBQ0Y7O0FvQmo5Q0s7RTlCWkgsUzhCc0JnQztFOUJ0QmhDLFE4QnNCd0M7RTlCbkJ6QyxrQkFuQjBCO0U4QnVDbkIsY0FBYztFQUNkLG9CQUFvQjtBcEI2OEM1Qjs7QU96OEJJO0VhaGhCQztJQWVLLGFBQWE7RXBCKzhDckI7QUFDRjs7QW9CLzlDSztFNUI3Qkosa0VBQXVEO0VBQ3ZELGtCNEJnRDBEO0U1Qi9DMUQsbUI0QitDa0Q7RTVCOUNsRCxpQjRCOENrRTtFQUMzRCxnQkFBZ0I7QXBCazlDeEI7O0FPdjlCSTtFYWhoQkM7SUF3Qkssa0JBQWtCO0VwQm85QzFCO0FBQ0Y7O0FPNzlCSTtFYWhoQkM7SUE0QkssaUJBQWlCO0VwQnM5Q3pCO0FBQ0Y7O0FvQm4vQ0s7RTVCN0JKLGtFQUF1RDtFQUN2RCxrQjRCNkQwRDtFNUI1RDFELG1CNEI0RGtEO0U1QjNEbEQsaUJTbUp1QjtFbUJ2RmhCLGNuQm9CTTtFbUJuQk4sZUFBZTtBcEJ5OUN2Qjs7QW9CNS9DSztFbkMzQkosb0JBQW9CO0VBRXBCLG9CQUFvQjtFQUVwQixhQUFhO0VBMkZWLG1DbUM1QjBDO0VuQzZCNUMsa0NtQzdCNEM7RW5DOEIzQyx5Qm1DOUIyQztVbkM4QjNDLDhCbUM5QjJDO0VuQytCekMsNEJtQy9CeUM7RUFDdEMsbUJBQW1CO0FwQmkrQzNCOztBb0IxZ0RLO0VBNkNHLGdCQUFnQjtBcEJpK0N4Qjs7QW9CNTlDRTtFQUNFLFlBQVk7RW5DOUVmLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQWdIVix3Qm1DcEMyQjtFbkNxQzdCLHVCbUNyQzZCO0VuQ3NDNUIseUJtQ3RDNEI7TW5Dc0M1QixzQm1DdEM0QjtVbkNzQzVCLG1CbUN0QzRCO0VBQzNCLGlCQUFpQjtFQUNqQixvQkFBb0I7RTVCcEZ2QixrRUFBdUQ7RUFDdkQsa0I0Qm9Gc0Q7RTVCbkZ0RCxtQjRCbUY4QztFNUJsRjlDLGlCU2lKc0I7QUQwNkN2Qjs7QU9qaENJO0VhOWRGO0lBU0ksV0FBVztJbkNTYixnQ21DUnFDO0luQ1N2QywrQm1DVHVDO0luQ1V0Qyx1Qm1DVnNDO1luQ1V0QywyQm1DVnNDO0luQ1dwQyx5Qm1DWG9DO0lBQ25DLHFCQUFxQjtJQUNyQixhQUFhO0luQ2xFZiwyQm1DbUVnQztJbkNsRWxDLDBCbUNrRWtDO0luQ2pFakMsNEJtQ2lFaUM7SW5DakVqQyw2Qm1DaUVpQztZbkNqRWpDLHNCbUNpRWlDO0VwQmsvQ2xDO0FBQ0Y7O0FPbGlDSTtFYTlkRjtJbkNrQkUsNEJtQ0RpQztJbkNFbkMsMkJtQ0ZtQztJbkNHbEMsd0JtQ0hrQztZbkNHbEMsdUJtQ0hrQztJbkNJaEMscUJtQ0pnQztFcEJ3L0NuQztBQUNGOztBb0J0L0NJO0VuQ2pHSCxvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RW1DK0ZSLHlCQUFtQjtNQUFuQixzQkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLFdBQVc7QXBCNi9DakI7O0FvQnBoREc7RUEyQkcsaUJBQWlCO0VBQ2pCLFdBQVc7RW5DekdoQixvQkFBb0I7RUFFcEIsb0JBQW9CO0VBRXBCLGFBQWE7RUEyRlYsOEJtQ1ltQztFbkNYckMsNkJtQ1dxQztFbkNWcEMscUJtQ1VvQztVbkNWcEMseUJtQ1VvQztFbkNUbEMsdUJtQ1NrQztBcEJxZ0R2Qzs7QU9ya0NJO0VhOWREO0lBaUNLLGFBQWE7RXBCdWdEbkI7QUFDRjs7QXFCNW5EQTtFL0J3QkMsa0JBWDBCO0VMUDFCLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQW1CViwyQm9DMUI0QjtFcEMyQjlCLDBCb0MzQjhCO0VwQzRCN0IsNEJvQzVCNkI7RXBDNEI3Qiw2Qm9DNUI2QjtVcEM0QjdCLHNCb0M1QjZCO0VwQ3VINUIsd0JvQ3RIeUI7RXBDdUgzQix1Qm9DdkgyQjtFcEN3SDFCLHlCb0N4SDBCO01wQ3dIMUIsc0JvQ3hIMEI7VXBDd0gxQixtQm9DeEgwQjtFcENpR3pCLDRCb0NoRzZCO0VwQ2lHL0IsMkJvQ2pHK0I7RXBDa0c5Qix3Qm9DbEc4QjtVcENrRzlCLHVCb0NsRzhCO0VwQ21HNUIscUJvQ25HNEI7RUFDL0IsWUFBWTtBckI2b0RkOztBT2xtQ0k7RWNqakJKO0lBU0ksVUFBVTtJQUNWLGNBQWM7RXJCK29EaEI7QUFDRjs7QU96bUNJO0VjampCSjtJQWNJLFVBQVU7RXJCaXBEWjtBQUNGOztBTy9tQ0k7RWNqakJKO0lBa0JJLFVBQVU7RXJCbXBEWjtBQUNGOztBcUJqcERFO0VwQ2ZELG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQW1CViwyQm9DTjhCO0VwQ09oQywwQm9DUGdDO0VwQ1EvQiw0Qm9DUitCO0VwQ1EvQiw2Qm9DUitCO1VwQ1EvQixzQm9DUitCO0U5Qm5CakMsVzhCb0JxQjtFOUJuQnJCLGE4Qm1CNEI7RXBDa0d6Qix3Qm9DakcyQjtFcENrRzdCLHVCb0NsRzZCO0VwQ21HNUIseUJvQ25HNEI7TXBDbUc1QixzQm9Dbkc0QjtVcENtRzVCLG1Cb0NuRzRCO0VwQzRFM0IsNEJvQzNFK0I7RXBDNEVqQywyQm9DNUVpQztFcEM2RWhDLHdCb0M3RWdDO1VwQzZFaEMsdUJvQzdFZ0M7RXBDOEU5QixxQm9DOUU4QjtBckJtcURuQzs7QU81b0NJO0VjNWhCRjtJQVFJLHVCQUFzQjtRQUF0QixvQkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLGFBQWE7RXJCcXFEakI7QUFDRjs7QXFCbnFESTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QXJCc3FEdkI7O0FPeHBDSTtFY2hoQkE7SUFLSSxXQUFXO0VyQndxRGpCO0FBQ0Y7O0FxQjlxREs7RS9CWkgsUytCcUJnQztFL0JyQmhDLFErQnFCd0M7RS9CbEJ6QyxrQkFuQjBCO0UrQnNDbkIsY0FBYztFQUNkLG9CQUFvQjtBckIycUQ1Qjs7QU90cUNJO0VjaGhCQztJQWNLLGNBQWM7SUFDZCxlQUFlO0VyQjZxRHZCO0FBQ0Y7O0FPN3FDSTtFY2hoQkM7SUFtQkssWUFBWTtJQUNaLGFBQWE7RXJCK3FEckI7QUFDRjs7QXFCcHNESztFN0I3Qkosa0VBQXVEO0VBQ3ZELGtCNkJxRDBEO0U3QnBEMUQsbUI2Qm9Ea0Q7RTdCbkRsRCxpQjZCbURrRTtFQUMzRCxnQkFBZ0I7QXJCa3JEeEI7O0FPNXJDSTtFY2hoQkM7SUE2Qkssa0JBQWtCO0VyQm9yRDFCO0FBQ0Y7O0FxQmx0REs7RTdCN0JKLGtFQUF1RDtFQUN2RCxrQjZCOEQwRDtFN0I3RDFELG1CNkI2RGtEO0U3QjVEbEQsaUJTbUp1QjtFb0J0RmhCLGNwQm1CTTtFb0JsQk4sZUFBZTtBckJ1ckR2Qjs7QU8zc0NJO0VjaGhCQTtJQXdDSSxrQkFBa0I7RXJCd3JEeEI7QUFDRjs7QXFCcHJERTtFQUNFLFlBQVk7RXBDekVmLG9CQUFvQjtFQUVwQixvQkFBb0I7RUFFcEIsYUFBYTtFQWdIVix3Qm9DekMyQjtFcEMwQzdCLHVCb0MxQzZCO0VwQzJDNUIseUJvQzNDNEI7TXBDMkM1QixzQm9DM0M0QjtVcEMyQzVCLG1Cb0MzQzRCO0VBQzNCLGtCQUFrQjtFQUNsQixvQkFBb0I7RTdCL0V2QixrRUFBdUQ7RUFDdkQsa0I2QitFc0Q7RTdCOUV0RCxtQjZCOEU4QztFN0I3RTlDLGlCU2lKc0I7QUQ2bkR2Qjs7QU9wdUNJO0VjbmVGO0lBU0ksV0FBVztJcENjYixnQ29DYnFDO0lwQ2N2QywrQm9DZHVDO0lwQ2V0Qyx1Qm9DZnNDO1lwQ2V0QywyQm9DZnNDO0lwQ2dCcEMseUJvQ2hCb0M7SUFDbkMscUJBQXFCO0lBQ3JCLGFBQWE7RXJCdXNEakI7QUFDRjs7QU9qdkNJO0VjbmVGO0lwQ3VCRSw0Qm9DUGlDO0lwQ1FuQywyQm9DUm1DO0lwQ1NsQyx3Qm9DVGtDO1lwQ1NsQyx1Qm9DVGtDO0lwQ1VoQyxxQm9DVmdDO0VyQjZzRG5DO0FBQ0Y7O0FzQnp5REE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGdCQUFnQjtBdEI0eURsQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBNSVhJTlMgRkxFWEJPWCBDUk9TU0JST1dTRVIgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gRmxleGJveCBkaXNwbGF5XG5AbWl4aW4gZmxleGJveCgpIHtcblx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XG5cdGRpc3BsYXk6IC1tb3otYm94O1xuXHRkaXNwbGF5OiAtbXMtZmxleGJveDtcblx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuXHRkaXNwbGF5OiBmbGV4O1xuICB9XG4gIFxuICAvLyBUaGUgJ2ZsZXgnIHNob3J0aGFuZFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gPHBvc2l0aXZlLW51bWJlcj4sIGluaXRpYWwsIGF1dG8sIG9yIG5vbmVcbiAgQG1peGluIGZsZXgoJHZhbHVlcykge1xuXHQtd2Via2l0LWJveC1mbGV4OiAkdmFsdWVzO1xuXHQgICAtbW96LWJveC1mbGV4OiAkdmFsdWVzO1xuXHRcdC13ZWJraXQtZmxleDogJHZhbHVlcztcblx0XHQgIC1tcy1mbGV4OiAkdmFsdWVzO1xuXHRcdFx0ICBmbGV4OiAkdmFsdWVzO1xuICB9XG4gIFxuICAvLyBGbGV4IEZsb3cgRGlyZWN0aW9uXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2VcbiAgQG1peGluIGZsZXgtZGlyZWN0aW9uKCRkaXJlY3Rpb24pIHtcblx0LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0ICAgLW1vei1mbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcblx0XHQtbXMtZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcbiAgfVxuICBcbiAgLy8gRmxleCBMaW5lIFdyYXBwaW5nXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIG5vd3JhcCB8IHdyYXAgfCB3cmFwLXJldmVyc2VcbiAgQG1peGluIGZsZXgtd3JhcCgkd3JhcCkge1xuXHQtd2Via2l0LWZsZXgtd3JhcDogJHdyYXA7XG5cdCAgIC1tb3otZmxleC13cmFwOiAkd3JhcDtcblx0XHQtbXMtZmxleC13cmFwOiAkd3JhcDtcblx0XHRcdGZsZXgtd3JhcDogJHdyYXA7XG4gIH1cbiAgXG4gIC8vIEZsZXggRGlyZWN0aW9uIGFuZCBXcmFwXG4gIC8vIC0gYXBwbGllcyB0bzogZmxleCBjb250YWluZXJzXG4gIC8vIDxmbGV4LWRpcmVjdGlvbj4gfHwgPGZsZXgtd3JhcD5cbiAgQG1peGluIGZsZXgtZmxvdygkZmxvdykge1xuXHQtd2Via2l0LWZsZXgtZmxvdzogJGZsb3c7XG5cdCAgIC1tb3otZmxleC1mbG93OiAkZmxvdztcblx0XHQtbXMtZmxleC1mbG93OiAkZmxvdztcblx0XHRcdGZsZXgtZmxvdzogJGZsb3c7XG4gIH1cbiAgXG4gIC8vIERpc3BsYXkgT3JkZXJcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxpbnRlZ2VyPlxuICBAbWl4aW4gb3JkZXIoJHZhbCkge1xuXHQtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAkdmFsOyAgXG5cdCAgIC1tb3otYm94LW9yZGluYWwtZ3JvdXA6ICR2YWw7ICAgICBcblx0XHRcdCAtbXMtZmxleC1vcmRlcjogJHZhbDsgICAgIFxuXHRcdFx0ICAtd2Via2l0LW9yZGVyOiAkdmFsOyAgXG5cdFx0XHRcdCAgb3JkZXI6ICR2YWw7XG4gIH1cbiAgXG4gIC8vIEZsZXggZ3JvdyBmYWN0b3JcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zXG4gIC8vIDxudW1iZXI+XG4gIEBtaXhpbiBmbGV4LWdyb3coJGdyb3cpIHtcblx0LXdlYmtpdC1mbGV4LWdyb3c6ICRncm93O1xuXHQgICAtbW96LWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0LW1zLWZsZXgtZ3JvdzogJGdyb3c7XG5cdFx0XHRmbGV4LWdyb3c6ICRncm93O1xuICB9XG4gIFxuICAvLyBGbGV4IHNocmlua1xuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbSBzaHJpbmsgZmFjdG9yXG4gIC8vIDxudW1iZXI+IFxuICBAbWl4aW4gZmxleC1zaHJpbmsoJHNocmluaykge1xuXHQtd2Via2l0LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHQgICAtbW96LWZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuXHRcdC1tcy1mbGV4LXNocmluazogJHNocmluaztcblx0XHRcdGZsZXgtc2hyaW5rOiAkc2hyaW5rO1xuICB9XG4gIFxuICAvLyBGbGV4IGJhc2lzXG4gIC8vIC0gdGhlIGluaXRpYWwgbWFpbiBzaXplIG9mIHRoZSBmbGV4IGl0ZW1cbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGl0ZW1zbml0aWFsIG1haW4gc2l6ZSBvZiB0aGUgZmxleCBpdGVtXG4gIC8vIDx3aWR0aD4gXG4gIEBtaXhpbiBmbGV4LWJhc2lzKCR3aWR0aCkge1xuXHQtd2Via2l0LWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0ICAgLW1vei1mbGV4LWJhc2lzOiAkd2lkdGg7XG5cdFx0LW1zLWZsZXgtYmFzaXM6ICR3aWR0aDtcblx0XHRcdGZsZXgtYmFzaXM6ICR3aWR0aDtcbiAgfVxuICBcbiAgLy8gQXhpcyBBbGlnbm1lbnRcbiAgLy8gLSBhcHBsaWVzIHRvOiBmbGV4IGNvbnRhaW5lcnNcbiAgLy8gZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCBcbiAgQG1peGluIGp1c3RpZnktY29udGVudCgkanVzdGlmeSkge1xuXHQtd2Via2l0LWp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdCAgIC1tb3otanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHQtbXMtanVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcblx0XHRcdGp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XG5cdFx0XHQgIC1tcy1mbGV4LXBhY2s6ICRqdXN0aWZ5O1xuICB9XG4gIFxuICAvLyBQYWNraW5nIEZsZXggTGluZXNcbiAgLy8gLSBhcHBsaWVzIHRvOiBtdWx0aS1saW5lIGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLWNvbnRlbnQoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWNvbnRlbnQ6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tY29udGVudDogJGFsaWduO1xuXHRcdFx0YWxpZ24tY29udGVudDogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggY29udGFpbmVyc1xuICAvLyBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2ggXG4gIEBtaXhpbiBhbGlnbi1pdGVtcygkYWxpZ24pIHtcblx0LXdlYmtpdC1hbGlnbi1pdGVtczogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0LW1zLWFsaWduLWl0ZW1zOiAkYWxpZ247XG5cdFx0XHRhbGlnbi1pdGVtczogJGFsaWduO1xuICB9XG4gIFxuICAvLyBDcm9zcy1heGlzIEFsaWdubWVudFxuICAvLyAtIGFwcGxpZXMgdG86IGZsZXggaXRlbXNcbiAgLy8gYXV0byB8IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IGJhc2VsaW5lIHwgc3RyZXRjaCBcbiAgQG1peGluIGFsaWduLXNlbGYoJGFsaWduKSB7XG5cdC13ZWJraXQtYWxpZ24tc2VsZjogJGFsaWduO1xuXHQgICAtbW96LWFsaWduLXNlbGY6ICRhbGlnbjtcblx0XHQtbXMtYWxpZ24tc2VsZjogJGFsaWduO1xuXHRcdFx0YWxpZ24tc2VsZjogJGFsaWduO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5AbWl4aW4gYnV0dG9uLXN0eWxlKCRjLCAkYy1ob3ZlciwgJGJnLCAkYmctaG92ZXIsICRib3JkZXIsICRib3JkZXItaG92ZXIpIHtcblx0Y29sb3I6ICRjO1xuXHRiYWNrZ3JvdW5kOiAkYmc7XG5cdGJvcmRlci1jb2xvcjogJGJvcmRlcjtcbiAgXG5cdHN2ZyB7XG5cdCAgZmlsbDogJGM7XG5cdH1cbiAgXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHQgIGNvbG9yOiAkYy1ob3Zlcjtcblx0ICBiYWNrZ3JvdW5kOiAkYmctaG92ZXI7XG5cdCAgYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWhvdmVyO1xuICBcblx0ICBzdmcge1xuXHRcdGZpbGw6ICRjLWhvdmVyO1xuXHQgIH1cblx0fTtcbn0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgT04tRVZFTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIG9uLWV2ZW50KCRzZWxmOiBmYWxzZSkge1xuXHRAaWYgJHNlbGYge1xuXHQgICYsXG5cdCAgJjpob3Zlcixcblx0ICAmOmFjdGl2ZSxcblx0ICAmOmZvY3VzIHtcblx0XHRAY29udGVudDtcblx0ICB9XG5cdH0gQGVsc2Uge1xuXHQgICY6aG92ZXIsXG5cdCAgJjphY3RpdmUsXG5cdCAgJjpmb2N1cyB7XG5cdFx0QGNvbnRlbnQ7XG5cdCAgfVxuXHR9XG4gIH0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOIFdIRU4tSU5TSURFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbkBtaXhpbiB3aGVuLWluc2lkZSgkY29udGV4dCkge1xuXHQjeyRjb250ZXh0fSAmIHtcblx0ICBAY29udGVudDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGNvbnRhaW5lcigkZmx1aWQ6IGZhbHNlKSB7XG5cdHBhZGRpbmctbGVmdDogJGNvbnRhaW5lci1wYWQ7XG5cdHBhZGRpbmctcmlnaHQ6ICRjb250YWluZXItcGFkO1xuXHRtYXJnaW46IDAgYXV0bztcblx0d2lkdGg6IDEwMCU7XG5cdEBpZiBub3QgJGZsdWlkIHtcblx0ICBAZWFjaCAkYnAsICR3aWR0aCBpbiAkY29udGFpbmVyLXdpZHRoIHtcblx0XHRAaW5jbHVkZSBtZWRpYShcIj49I3skYnB9XCIpIHtcblx0XHQgIHdpZHRoOiAkd2lkdGg7XG5cdFx0fTtcblx0ICB9XG5cdH1cbn0gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUE9TSVRJT04gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8vIFBvc2l0aW9uaW5nIGhlbHBlcnNcbkBtaXhpbiBhYnNvbHV0ZSgkYXJnczogJycpIHtcblx0QGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsICRhcmdzKTtcbiAgfVxuICBcbiAgQG1peGluIGZpeGVkKCRhcmdzOiAnJykge1xuXHRAaW5jbHVkZSBwb3NpdGlvbihmaXhlZCwgJGFyZ3MpO1xuICB9XG4gIFxuICBAbWl4aW4gcmVsYXRpdmUoJGFyZ3M6ICcnKSB7XG5cdEBpbmNsdWRlIHBvc2l0aW9uKHJlbGF0aXZlLCAkYXJncyk7XG4gIH1cbiAgXG4gIC8vIFBvc2l0aW9uaW5nXG4gIEBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb24sICRhcmdzKSB7XG5cdEBlYWNoICRvIGluIHRvcCByaWdodCBib3R0b20gbGVmdCB7XG5cdCAgJGk6IGluZGV4KCRhcmdzLCAkbyk7XG5cdCAgQGlmICRpIGFuZCAkaSArIDEgPD0gbGVuZ3RoKCRhcmdzKSBhbmQgdHlwZS1vZihudGgoJGFyZ3MsICRpICsgMSkpID09IG51bWJlciB7XG5cdFx0I3skb306IG50aCgkYXJncywgJGkgKyAxKTtcblx0ICB9XG5cdH1cblx0cG9zaXRpb246ICRwb3NpdGlvbjtcbiAgfSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gU0laRSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcblx0d2lkdGg6ICR3aWR0aDtcblx0aGVpZ2h0OiAkaGVpZ2h0O1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOIFNFVC1GT05UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIHNldC1mb250KCAkZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseSAsICR3ZWlnaHQ6IG5vcm1hbCAsICRzdHlsZTogbm9ybWFsLCAkZm9udHNpemU6ICRiYXNlLWZvbnQtc2l6ZSApIHtcblx0Zm9udC1mYW1pbHk6ICRmYW1pbHkgLCAnQXJpYWwnLCAnSGVsdmV0aWNhJywgc2Fucy1zZXJpZjtcblx0Zm9udC1zdHlsZTogJHN0eWxlO1xuXHRmb250LXdlaWdodDogJHdlaWdodDtcblx0Zm9udC1zaXplOiAkZm9udHNpemU7XG5cdFxuICB9XG4gIEBtaXhpbiBzZXQtZm9udDIoICRmYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5ICwgJHdlaWdodDogbm9ybWFsKSB7XG5cdGZvbnQtZmFtaWx5OiAkZmFtaWx5ICwgJ0FyaWFsJywgJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XG5cdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICB9XG4gICIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIFJFTSBVTklUUyAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLy8gVWx0aW1hdGUgUmVtIFVuaXRzXG5AZnVuY3Rpb24gcGFyc2VJbnQoJG4pIHtcblx0LyogMiAqL1xuXHRAcmV0dXJuICRuIC8gKCRuICogMCArIDEpO1xuICB9XG4gIEBtaXhpbiByZW0oJHByb3BlcnR5LCAkdmFsdWVzKSB7XG5cdCRweDogKCk7IC8qIDMgKi9cblx0JHJlbTogKCk7IC8qIDMgKi9cblx0QGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuXHQgIC8qIDQgKi9cblx0ICBAaWYgJHZhbHVlID09IDAgb3IgJHZhbHVlID09IGF1dG8ge1xuXHRcdC8qIDUgKi9cblx0XHQkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0JHJlbTogYXBwZW5kKCRyZW0sICR2YWx1ZSk7XG5cdCAgfSBAZWxzZSB7XG5cdFx0JHVuaXQ6IHVuaXQoJHZhbHVlKTsgLyogNiAqL1xuXHRcdCR2YWw6IHBhcnNlSW50KCR2YWx1ZSk7IC8qIDYgKi9cblx0XHRAaWYgJHVuaXQgPT0gJ3B4JyB7XG5cdFx0ICAvKiA3ICovXG5cdFx0ICAkcHg6IGFwcGVuZCgkcHgsICR2YWx1ZSk7XG5cdFx0ICAkcmVtOiBhcHBlbmQoJHJlbSwgKCR2YWwgLyAxMCArIHJlbSkpO1xuXHRcdH1cblx0XHRAaWYgJHVuaXQgPT0gJ3JlbScge1xuXHRcdCAgLyogNyAqL1xuXHRcdCAgJHB4OiBhcHBlbmQoJHB4LCAoJHZhbCAqIDEwICsgcHgpKTtcblx0XHQgICRyZW06IGFwcGVuZCgkcmVtLCAkdmFsdWUpO1xuXHRcdH1cblx0ICB9XG5cdH1cblx0QGlmICRweCA9PSAkcmVtIHtcblx0ICAvKiA4ICovXG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0fSBAZWxzZSB7XG5cdCAgI3skcHJvcGVydHl9OiAkcHg7IC8qIDkgKi9cblx0ICAjeyRwcm9wZXJ0eX06ICRyZW07IC8qIDkgKi9cblx0fVxuICB9XG5cblxuXG5cbiAgQG1peGluIHgtcmVtICgkcHJvcGVydHksICR2YWx1ZXMsICRtYWluLWZvbnQtc2l6ZTogMTBweCkge1xuXG5cdC8vIEVtcHR5IGxpc3QgZm9yIGFsbCB2YWx1ZXMgaW4gcHhcblx0JHB4LXZhbHVlczogKCk7XG5cdCRyZW0tdmFsdWVzOiAoKTtcblxuXHQvLyBJdGVyYXRlIG92ZXIgZW50cmllc1xuXHRAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG5cblx0XHQvLyBJZiB0aGUgdmFsdWUgaXMgemVybyBvciBvZiBhIHR5cGUgdGhhdCBkb2VzbuKAmXQgbmVlZCBjb252ZXJzaW9uLCByZXR1cm4gdGhlIHZhbHVlIHVudG91Y2hlZFxuXHRcdEBpZiBpbmRleChhdXRvIGluaGVyaXQgaW5pdGlhbCBub25lIDAsICR2YWx1ZSkgb3IgdHlwZS1vZigkdmFsdWUpICE9IFwibnVtYmVyXCIge1xuXHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICR2YWx1ZSk7XG5cdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAkdmFsdWUpO1xuXG5cdFx0Ly8gT3RoZXJ3aXNlIGNvbnZlcnQgaXQgcHJvcGVybHlcblx0XHR9IEBlbHNlIHtcblx0XHRcdCR1bml0OiB1bml0KCR2YWx1ZSk7XG5cblx0XHRcdEBpZiAkdW5pdCA9PSAncHgnIHtcblx0XHRcdFx0JHB4LXZhbHVlczogYXBwZW5kKCRweC12YWx1ZXMsICN7c3RyaXAtdW5pdCgkdmFsdWUpfSAqIDFweCApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAoc3RyaXAtdW5pdCgkdmFsdWUpIC8gc3RyaXAtdW5pdCgkbWFpbi1mb250LXNpemUpICogMXJlbSkpO1xuXHRcdFx0fSBAZWxzZSB7XG5cdFx0XHRcdCRweC12YWx1ZXM6IGFwcGVuZCgkcHgtdmFsdWVzLCAoJHZhbHVlICogJG1haW4tZm9udC1zaXplKSApO1xuXHRcdFx0XHQkcmVtLXZhbHVlczogYXBwZW5kKCRyZW0tdmFsdWVzLCAjeyR2YWx1ZX0gKiAxcmVtKTtcblx0XHRcdH1cblxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcHJvcGVydHkgYW5kIGl0cyBsaXN0IG9mIGNvbnZlcnRlZCB2YWx1ZXNcblx0I3skcHJvcGVydHl9OiAjeyRweC12YWx1ZXN9O1xuXHQjeyRwcm9wZXJ0eX06ICN7JHJlbS12YWx1ZXN9O1xufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBCT1JERVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGJvcmRlcigkZGlyZWN0aW9uLCAkd2lkdGgsICRzdHlsZSwgJGNvbG9yKSB7XG5cdGJvcmRlci0jeyRkaXJlY3Rpb259OiAkd2lkdGggJHN0eWxlICRjb2xvcjtcbiAgfVxuICAiLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU5TIFBBRERJTkcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gcGFkZGluZygkdG9wLCAkcmlnaHQsICRib3R0b20sICRsZWZ0KSB7IFxuXHRwYWRkaW5nOiAkdG9wICRyaWdodCAkYm90dG9tICRsZWZ0O1xuICB9XG4gIFxuICBAbWl4aW4gcGFkZGluZy1jb21wb25lbnQoJHNwYWNlOiAkc20pIHtcblx0cGFkZGluZzogJHNwYWNlO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTlMgQk9YLVNIQURPVyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5AbWl4aW4gc2hhZG93LWxvZ28oJHgtYXhpczogMnB4LCAkeS1heGlzOiAycHgsICRibHVyOiAycHgsICRjb2xvcjogIzAyMDIwMikge1xuXHRmaWx0ZXI6ZHJvcC1zaGFkb3coICR4LWF4aXMgJHktYXhpcyAkYmx1ciAkY29sb3IgKTtcblx0LXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggMnB4ICMwMjAyMDIpO1xuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuQG1peGluIGZhZGUoJHR5cGUpIHtcblx0QGlmICR0eXBlID09ICdoaWRlJyB7XG5cdCAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXHQgIG9wYWNpdHk6IDA7XG5cdCAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAkdHQsIG9wYWNpdHkgJHR0O1xuXHR9XG5cdEBlbHNlIGlmICR0eXBlID09ICdzaG93JyB7XG5cdCAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0ICBvcGFjaXR5OiAxO1xuXHQgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgJHR0LCBvcGFjaXR5ICR0dDtcblx0fVxuICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJWxpc3RyZXNldCB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0bGlzdC1zdHlsZTogbm9uZTtcbiAgfSIsIkBjaGFyc2V0ICdVVEYtOCc7XG5cbi8qXG4gICAgR3JpZCBjbGFzcyBuYW1lXG4qL1xuJGltLWdyaWQtY2xhc3M6ICdncmlkJyAhZGVmYXVsdDtcblxuLypcbiAgICBDZWxsIGNsYXNzIG5hbWVcbiovXG4kaW0tZ3JpZC1jZWxsLWNsYXNzOiAnZ3JpZC1jZWxsJyAhZGVmYXVsdDtcblxuLypcbiAgICBHdXR0ZXIgc2l6ZVxuKi9cbiRpbS1ncmlkLWd1dHRlci1zaXplOiAwICFkZWZhdWx0O1xuXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbiRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoOiBmYWxzZSAhZGVmYXVsdDtcblxuLypcbiAgICBHcmlkXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4vKlxuICAgIEdyaWQgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvID4gKiB7XG4gICAgZmxleDogMTtcbiAgICBmbGV4LWdyb3c6IDQ7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsIG1vZGlmaWVyc1xuICovXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYXV0by1zaXplIHtcbiAgICBmbGV4OiBub25lO1xufVxuXG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tbGlnaHQge1xuICAgIGZsZXgtZ3JvdzogMjtcbn1cblxuLiN7JGltLWdyaWQtY2VsbC1jbGFzc30tLWhlYXZ5IHtcbiAgICBmbGV4LWdyb3c6IDg7XG59XG5cbi8qXG4gICAgR3JpZCBndXR0ZXJzXG4qL1xuLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzIHtcbiAgICBtYXJnaW46ICgtJGltLWdyaWQtZ3V0dGVyLXNpemUpIDAgMCAoLSRpbS1ncmlkLWd1dHRlci1zaXplKTtcbn1cbi4jeyRpbS1ncmlkLWNsYXNzfS0tZ3V0dGVycyA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LFxuLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLiN7JGltLWdyaWQtY2xhc3N9LS1ndXR0ZXJzID4gKiB7XG4gICAgcGFkZGluZzogJGltLWdyaWQtZ3V0dGVyLXNpemUgMCAwICRpbS1ncmlkLWd1dHRlci1zaXplO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLXRvcCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jbGFzc30tLWJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuLiN7JGltLWdyaWQtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgRmxleGlibGUgY2VsbHNcbiovXG4uI3skaW0tZ3JpZC1jbGFzc30tLWZsZXgtZ3JpZC1jZWxsID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30sIC8vIE9sZGVyIHNlbGVjdG9yIGtlcHQgZm9yIGJhY2t3YXJkcyBjb21wYXRhYmlsaXR5LlxuLiN7JGltLWdyaWQtY2xhc3N9LS1mbGV4ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi4jeyRpbS1ncmlkLWNsYXNzfS0tanVzdGlmeS1jZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS10b3Age1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG4uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tYm90dG9tIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cbi4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS1jZW50ZXIge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuLypcbiAgICBHZW5lcmF0ZSBncmlkIGNsYXNzZXNcbiovXG5AbWl4aW4gaW0tZ3JpZC1jb2x1bW5zKCRjb2x1bW5zLi4uKSB7XG4gICAgQGVhY2ggJGkgaW4gJGNvbHVtbnMge1xuICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tZml0ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGwgPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfSB7XG4gICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC4jeyRpbS1ncmlkLWNsYXNzfS0tI3skbn0tI3skaX0gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfTpub3QoW2NsYXNzKj0nI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tJ10pIHtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSk7IH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30uI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS0tI3skbn0tI3skaX0ge1xuXG4gICAgICAgICAgICAgICAgZmxleDogMCAwICgoJG4gLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9ID4gKiB7XG4gICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgIEBpZiAkaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aFxuICAgICAgICAgICAgeyBtYXgtd2lkdGg6ICgoMSAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7IH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBlYWNoICRicmVha3BvaW50IGluICRicmVha3BvaW50cyB7XG4gICAgICAgICRicmVha3BvaW50LW5hbWU6IG50aCgkYnJlYWtwb2ludCwgMSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoI3snPj0nICsgJGJyZWFrcG9pbnQtbmFtZX0pIHtcbiAgICAgICAgICAgIEBlYWNoICRpIGluICRjb2x1bW5zIHtcbiAgICAgICAgICAgICAgICBAZm9yICRuIGZyb20gMSB0aHJvdWdoICRpIHtcbiAgICAgICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1maXRcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLWZ1bGxcXEAjeyRicmVha3BvaW50LW5hbWV9ID4gLiN7JGltLWdyaWQtY2VsbC1jbGFzc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30tLSN7JG59LSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+IC4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9Om5vdChbY2xhc3MqPScjeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0nXSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICB7IG1heC13aWR0aDogKCgkbiAvICRpKSAqIDEwMCUpOyB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAuI3skaW0tZ3JpZC1jbGFzc30gPiAuI3skaW0tZ3JpZC1jZWxsLWNsYXNzfS4jeyRpbS1ncmlkLWNlbGwtY2xhc3N9LS0jeyRufS0jeyRpfVxcQCN7JGJyZWFrcG9pbnQtbmFtZX0ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgkbiAvICRpKSAqIDEwMCUpICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBAaWYgJGltLWdyaWQtaW5jbHVkZS1tYXgtd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKCRuIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDsgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLiN7JGltLWdyaWQtY2xhc3N9LS1hdXRvLSN7JGl9XFxAI3skYnJlYWtwb2ludC1uYW1lfSA+ICoge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OiAwIDAgKCgxIC8gJGkpICogMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgQGlmICRpbS1ncmlkLWluY2x1ZGUtbWF4LXdpZHRoXG4gICAgICAgICAgICAgICAgICAgIHsgbWF4LXdpZHRoOiAoKDEgLyAkaSkgKiAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBGTEVYQk9YIENST1NTQlJPV1NFUiAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIE1JWElOUyBCVVRUT04gU1RZTEUgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIE9OLUVWRU5UICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gV0hFTi1JTlNJREUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTlRBSU5FUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1JWElOUyBQT1NJVElPTiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVVU0FCTEUgU0FTUyBNSVhJTiBTSVpFICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTUlYSU4gU0VULUZPTlQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVVTQUJMRSBTQVNTIE1JWElOUyBSRU0gVU5JVFMgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU4gQk9SREVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNSVhJTlMgUEFERElORyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJFVVNBQkxFIFNBU1MgTUlYSU5TIEJPWC1TSEFET1cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhJRElORy9TSE9XSU5HIEZBREUgVFJBTlNJVElPTiAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTElTVCBSRVNFVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLypcbiAgICBHcmlkIGNsYXNzIG5hbWVcbiovXG4vKlxuICAgIENlbGwgY2xhc3MgbmFtZVxuKi9cbi8qXG4gICAgR3V0dGVyIHNpemVcbiovXG4vKlxuICAgIE9wdGlvbmFsbHkgaW5jbHVkZSBtYXgtd2lkdGggdG8gZml4IElFIGlzc3Vlc1xuKi9cbi8qXG4gICAgR3JpZFxuKi9cbi5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qXG4gICAgR3JpZCBjZWxsXG4qL1xuLmdyaWQtY2VsbCxcbi5ncmlkLS1hdXRvID4gKiB7XG4gIGZsZXg6IDE7XG4gIGZsZXgtZ3JvdzogNDtcbn1cblxuLypcbiAgICBHcmlkIGNlbGwgbW9kaWZpZXJzXG4gKi9cbi5ncmlkLWNlbGwtLWF1dG8tc2l6ZSB7XG4gIGZsZXg6IG5vbmU7XG59XG5cbi5ncmlkLWNlbGwtLWxpZ2h0IHtcbiAgZmxleC1ncm93OiAyO1xufVxuXG4uZ3JpZC1jZWxsLS1oZWF2eSB7XG4gIGZsZXgtZ3JvdzogODtcbn1cblxuLypcbiAgICBHcmlkIGd1dHRlcnNcbiovXG4uZ3JpZC0tZ3V0dGVycyB7XG4gIG1hcmdpbjogLTMwcHggMCAwIC0zMHB4O1xufVxuXG4uZ3JpZC0tZ3V0dGVycyA+IC5ncmlkLWNlbGwsXG4uZ3JpZC0tYXV0by5ncmlkLS1ndXR0ZXJzID4gKiB7XG4gIHBhZGRpbmc6IDMwcHggMCAwIDMwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gICAgQWxpZ25tZW50IHBlciByb3dcbiovXG4uZ3JpZC0tdG9wIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLS1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi5ncmlkLS1jZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKlxuICAgIEZsZXhpYmxlIGNlbGxzXG4qL1xuLmdyaWQtLWZsZXgtZ3JpZC1jZWxsID4gLmdyaWQtY2VsbCxcbi5ncmlkLS1mbGV4ID4gLmdyaWQtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qXG4gICAgSnVzdGlmeVxuKi9cbi5ncmlkLS1qdXN0aWZ5LWNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKlxuICAgIEFsaWdubWVudCBwZXIgY2VsbFxuKi9cbi5ncmlkLWNlbGwtLXRvcCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi5ncmlkLWNlbGwtLWJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uZ3JpZC1jZWxsLS1jZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi8qXG4gICAgR2VuZXJhdGUgZ3JpZCBjbGFzc2VzXG4qL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzI4QzY2MDtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcsIHN2ZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICM3NjgwOTM7XG59XG5cbmE6aG92ZXIge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgY29sb3I6ICM3NjgwOTM7XG59XG5cbmFkZHJlc3Mge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG51bCwgb2wsIHAge1xuICBtYXJnaW46IDA7XG59XG5cbi5qcy1hbGxjbGljaywgLmpzLXRvZ2dsZSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuLnRpbnl0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4udGlueXRleHQtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjg4ODg5cmVtO1xufVxuXG4udGlueXRleHQgPiAqIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLnRpbnl0ZXh0ID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi50aW55dGV4dCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi50aW55dGV4dCBoMSwgLnRpbnl0ZXh0IGgyLCAudGlueXRleHQgaDMsIC50aW55dGV4dCBoNCB7XG4gIG1hcmdpbjogMS4yNXJlbSAwIDAuNXJlbTtcbn1cblxuLnRpbnl0ZXh0IHVsIGxpIHtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4udGlueXRleHQgYVtocmVmXj1cIm1haWx0b1wiXSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAxLjc1cmVtO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvc3ZnL2VudmVsb3BlLnN2Z1wiKSBjZW50ZXIgbGVmdCBuby1yZXBlYXQ7XG59XG5cbi50aW55dGV4dCBzdHJvbmcge1xuICBmb250LXdlaWdodDogODAwO1xufVxuXG4udGlueXRleHQgZW0ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi50aW55dGV4dCB1bCwgLnRpbnl0ZXh0IG9sIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMS4yNXJlbTtcbn1cblxuLnRpbnl0ZXh0IHVsIGxpLCAudGlueXRleHQgb2wgbGkge1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGlueXRleHQgLmVtYmVkZGVkLWVudGl0eSB7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luOiAxcmVtIDFyZW0gMXJlbSAwO1xuICB9XG59XG5cbi50aW55dGV4dC0tc21hbGwge1xuICBmb250LXNpemU6IDAuODg4ODlyZW07XG59XG5cbi52aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbn1cblxuLmNvbnRlbnQtbGVmdCA+ICoge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLmNvbnRlbnQtY2VudGVyID4gKiB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5jb250ZW50LXJpZ2h0ID4gKiB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLmxlZnQtcGFuZWwge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xuICB3aWR0aDogNDgwcHg7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA1MHZoO1xuICB9XG59XG5cbi5sZWZ0LXBhbmVsX193cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxlZnQtcGFuZWxfX2JvZHkge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubGVmdC1wYW5lbF9faGVhZGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZmxvdzogY29sdW1uO1xuICAtbW96LWZsZXgtZmxvdzogY29sdW1uO1xuICAtbXMtZmxleC1mbG93OiBjb2x1bW47XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAubGVmdC1wYW5lbF9faGVhZGVyIHtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxlZnQtcGFuZWxfX2hlYWRlciB7XG4gICAgLXdlYmtpdC1mbGV4LWZsb3c6IHJvdztcbiAgICAtbW96LWZsZXgtZmxvdzogcm93O1xuICAgIC1tcy1mbGV4LWZsb3c6IHJvdztcbiAgICBmbGV4LWZsb3c6IHJvdztcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5sZWZ0LXBhbmVsX19oZWFkZXIge1xuICAgIC13ZWJraXQtZmxleC1mbG93OiBjb2x1bW47XG4gICAgLW1vei1mbGV4LWZsb3c6IGNvbHVtbjtcbiAgICAtbXMtZmxleC1mbG93OiBjb2x1bW47XG4gICAgZmxleC1mbG93OiBjb2x1bW47XG4gICAgcGFkZGluZzogMCAxNXB4O1xuICB9XG59XG5cbi5sZWZ0LXBhbmVsX19oZWFkZXJfX3dyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbW96LWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgLW1zLWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtZmxleC1wYWNrOiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nLWJvdHRvbTogMTMuNXJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAubGVmdC1wYW5lbF9faGVhZGVyX193cmFwcGVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgfVxufVxuXG4ubGVmdC1wYW5lbF9fZm9vdGVyIC53ZWxjb21lIHtcbiAgcGFkZGluZy1ib3R0b206IDRyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIC53ZWxjb21lIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxlZnQtcGFuZWxfX2Zvb3RlciAud2VsY29tZV9fdGl0bGUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmxlZnQtcGFuZWxfX2Zvb3RlciAud2VsY29tZV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuXG4ubGVmdC1wYW5lbF9fZm9vdGVyIC53ZWxjb21lICN0aXQtdHlwZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIC53ZWxjb21lICN0aXQtdHlwZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIC53ZWxjb21lICN0aXQtdHlwZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIC5idG4ge1xuICAgIHdpZHRoOiAxNzBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5sZWZ0LXBhbmVsX19mb290ZXIge1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIHtcbiAgICB3aWR0aDogNDByZW07XG4gICAgcGFkZGluZy1sZWZ0OiA2cmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubGVmdC1wYW5lbF9fZm9vdGVyIHtcbiAgICB3aWR0aDogdW5zZXQ7XG4gICAgcGFkZGluZy1sZWZ0OiB1bnNldDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLnJpZ2h0LXBhbmVsIHtcbiAgd2lkdGg6IDQ3JTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAucmlnaHQtcGFuZWwge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5sb2dvIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5sb2dvLS1zbWFsbCB7XG4gIG1heC1oZWlnaHQ6IDkwcHg7XG59XG5cbi5idG4ge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHdpZHRoOiAxMi42cmVtO1xuICBoZWlnaHQ6IDRyZW07XG4gIHBhZGRpbmc6IDAuNTE4NzVyZW0gMi41cmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmJ0biB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmJ0biBzdmcge1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbn1cblxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tcHJpbWFyeTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMjhDNjYwO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJ0bi0tcHJpbWFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMzY2NiNmY7XG4gIG9wYWNpdHk6IC45O1xufVxuXG4uYnRuLS1wcmltYXJ5OmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG59XG5cbi5idG4tLWRhcmsge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xuICBib3JkZXItY29sb3I6IHdoaXRlO1xuICB3aWR0aDogMTVyZW07XG4gIGhlaWdodDogNHJlbTtcbn1cblxuLmJ0bi0tZGFyayBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmJ0bi0tZGFyazpob3ZlciwgLmJ0bi0tZGFyazphY3RpdmUsIC5idG4tLWRhcms6Zm9jdXMge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6ICMyNTI1Mjk7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG59XG5cbi5idG4tLWRhcms6aG92ZXIgc3ZnLCAuYnRuLS1kYXJrOmFjdGl2ZSBzdmcsIC5idG4tLWRhcms6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWRhcms6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5idG4tLWRhcmsge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5idG4tLWdvb2dsZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI0RCMzIzNjtcbiAgYm9yZGVyLWNvbG9yOiAjZGU0NjQ5O1xuICB3aWR0aDogMzI0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0RCMzIzNjtcbn1cblxuLmJ0bi0tZ29vZ2xlIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIsIC5idG4tLWdvb2dsZTphY3RpdmUsIC5idG4tLWdvb2dsZTpmb2N1cyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI2RlNDY0OTtcbiAgYm9yZGVyLWNvbG9yOiAjZGU0NjQ5O1xufVxuXG4uYnRuLS1nb29nbGU6aG92ZXIgc3ZnLCAuYnRuLS1nb29nbGU6YWN0aXZlIHN2ZywgLmJ0bi0tZ29vZ2xlOmZvY3VzIHN2ZyB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uYnRuLS1nb29nbGU6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI0RCMzIzNjtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuYnRuLS1nb29nbGUge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuLmJ0bi0tZ29vZ2xlIGkge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgbWFyZ2luOiAwLjJyZW0gMC4ycmVtO1xufVxuXG4uYnRuLS1mYWNlYm9vayB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogIzNCNTk5ODtcbiAgYm9yZGVyLWNvbG9yOiAjNGU2OWEyO1xuICB3aWR0aDogNjBweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzNCNTk5ODtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbn1cblxuLmJ0bi0tZmFjZWJvb2sgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWZhY2Vib29rOmhvdmVyLCAuYnRuLS1mYWNlYm9vazphY3RpdmUsIC5idG4tLWZhY2Vib29rOmZvY3VzIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjNGU2OWEyO1xuICBib3JkZXItY29sb3I6ICM0ZTY5YTI7XG59XG5cbi5idG4tLWZhY2Vib29rOmhvdmVyIHN2ZywgLmJ0bi0tZmFjZWJvb2s6YWN0aXZlIHN2ZywgLmJ0bi0tZmFjZWJvb2s6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWZhY2Vib29rOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMzQjU5OTg7XG4gIGNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuOTIpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmJ0bi0tZmFjZWJvb2sge1xuICAgIHdpZHRoOiAxNSU7XG4gIH1cbn1cblxuLmJ0bi0tZ3JleSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogIzc2ODA5MztcbiAgYm9yZGVyLWNvbG9yOiAjNzY4MDkzO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbi5idG4tLWdyZXkgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWdyZXk6aG92ZXIsIC5idG4tLWdyZXk6YWN0aXZlLCAuYnRuLS1ncmV5OmZvY3VzIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjOTY5RkIwO1xuICBib3JkZXItY29sb3I6ICM3NjgwOTM7XG59XG5cbi5idG4tLWdyZXk6aG92ZXIgc3ZnLCAuYnRuLS1ncmV5OmFjdGl2ZSBzdmcsIC5idG4tLWdyZXk6Zm9jdXMgc3ZnIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5idG4tLWdyZXk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzc2ODA5MztcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG59XG5cbi5idG4tbGFyZ2Uge1xuICB3aWR0aDogMjEuNHJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5idG4tbGFyZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT01QT05FTlQgdG9UT1AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi50b1RvcCB7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDMuNzJyZW07XG4gIHRvcDogODYlO1xuICByaWdodDogMnJlbTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5OTtcbiAgYmFja2dyb3VuZDogIzRiNDYzZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwYWRkaW5nOiAxLjJyZW0gMXJlbTtcbiAgb3BhY2l0eTogMC42O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLnRvVG9wOmhvdmVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gIG9wYWNpdHk6IDE7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW5wdXQtbm9ybWFsIHtcbiAgYmFja2dyb3VuZDogI0YzRjNGNDtcbiAgaGVpZ2h0OiA0cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udWstaW5wdXQ6Zm9jdXMsXG4udWstc2VsZWN0OmZvY3VzLFxuLnVrLXRleHRhcmVhOmZvY3VzIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzI4QzY2MDtcbn1cblxuLmxpbmstdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiBcIkthcmxhXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzI4QzY2MDtcbn1cblxuLmxpbmstdGV4dDpob3ZlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzO1xuICBjb2xvcjogIzNjY2I2Zjtcbn1cblxuLmxvZ2luLWZvcm0ge1xuICB3aWR0aDogNDAwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyLjRyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAubG9naW4tZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmxvZ2luLWZvcm0gbGFiZWwge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxcmVtIDA7XG59XG5cbi5sb2dpbi1mb3JtX19wYXNzd29yZCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1mbGV4LXBhY2s6IHNwYWNlLWJldHdlZW47XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxvZ2luLWZvcm1fX3Bhc3N3b3JkIGxhYmVsOmxhc3QtY2hpbGQge1xuICB3aWR0aDogNDUlO1xufVxuXG4ubG9naW4tZm9ybSAucHJpdmFjeS1wb2xpY3kge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xuICAtbW96LWFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgLW1zLWFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xufVxuXG4ubG9naW4tZm9ybSAucHJpdmFjeS1wb2xpY3kgbGFiZWwge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbn1cblxuLmNoYW5nZS13b3JkcyB7XG4gIHdpZHRoOiA1MCU7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgZm9udC1zaXplOiAzZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0yLjdyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNoYW5nZS13b3JkcyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICB9XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3BhY2l0eTogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLXdlYmtpdC1hbmltYXRpb246IGFuaW1hdGVXb3JkIDE4cyBsaW5lYXIgaW5maW5pdGUgMHM7XG4gIC1tcy1hbmltYXRpb246IGNoYW5nZVdvcmQgMThzIGxpbmVhciBpbmZpbml0ZSAwcztcbiAgYW5pbWF0aW9uOiBjaGFuZ2VXb3JkIDE4cyBsaW5lYXIgaW5maW5pdGUgMHM7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2hhbmdlLXdvcmRzIHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4uY2hhbmdlLXdvcmRzIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDNzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAzcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAzcztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2hhbmdlLXdvcmRzIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDZzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiA2cztcbiAgYW5pbWF0aW9uLWRlbGF5OiA2cztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2hhbmdlLXdvcmRzIHNwYW46bnRoLWNoaWxkKDQpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDlzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiA5cztcbiAgYW5pbWF0aW9uLWRlbGF5OiA5cztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2hhbmdlLXdvcmRzIHNwYW46bnRoLWNoaWxkKDUpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgLW1zLWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICBhbmltYXRpb24tZGVsYXk6IDEycztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2hhbmdlLXdvcmRzIHNwYW46bnRoLWNoaWxkKDYpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDFzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAxcztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgY2hhbmdlV29yZCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDIlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zMHB4KTtcbiAgfVxuICA1JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG4gIDE3JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG4gIDIwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMHB4KTtcbiAgfVxuICA4MCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4uY2FyZHMtY29udGFpbmVyIC5jYXJkIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogNDBweCAyMDBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE0NDBweCkge1xuICAuY2FyZHMtY29udGFpbmVyIC5jYXJkIC51ay1jYXJkLWJvZHkge1xuICAgIHBhZGRpbmc6IDAgMTIwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAuY2FyZHMtY29udGFpbmVyIC5jYXJkIC51ay1jYXJkLWJvZHkge1xuICAgIHBhZGRpbmc6IDAgODBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5IHtcbiAgICBwYWRkaW5nOiAwIDQwcHg7XG4gIH1cbn1cblxuLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5ICN0aXQtdHlwZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uY2FyZHMtY29udGFpbmVyIC5jYXJkIC51ay1jYXJkLWJvZHkgaDMge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiA0cmVtO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5IGgzIHtcbiAgICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAyLjRyZW07XG4gIH1cbn1cblxuLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5IHAge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAycmVtO1xuICBjb2xvcjogIzk5QTVCRDtcbiAgcGFkZGluZzogMnJlbSAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNhcmRzLWNvbnRhaW5lciAuY2FyZCAudWstY2FyZC1ib2R5IHAge1xuICAgIGZvbnQtZmFtaWx5OiBcIkthcmxhXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxufVxuXG4uY2FyZHMtY29udGFpbmVyIC5jYXJkIC51ay1jYXJkLWJvZHlfX2J1dHRvbnMge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbW96LWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgLW1zLWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtZmxleC1wYWNrOiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jYXJkcy1jb250YWluZXIgLmNhcmQgLnVrLWNhcmQtYm9keV9fYnV0dG9ucyB7XG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5jYXJkcy1jb250YWluZXIgLmNhcmQgLnVrLWNhcmQtYm9keV9fYnV0dG9ucyBhIHtcbiAgcGFkZGluZzogMnJlbSAycmVtIDAgMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jYXJkcy1jb250YWluZXIgLmNhcmQgLnVrLWNhcmQtYm9keV9fYnV0dG9ucyBhIHtcbiAgICBwYWRkaW5nOiAycmVtIDAgMCAwO1xuICB9XG59XG5cbi5iYW5kLWZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICMyOEM2NjA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDVyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuYmFuZC1mb290ZXIge1xuICAgIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtbW96LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuXG4uYmFuZC1mb290ZXJfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5iYW5kLWZvb3Rlcl9fd3JhcHBlciB7XG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5iYW5kLWZvb3RlciBwIHtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogNC4ycmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZy1yaWdodDogNHJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5iYW5kLWZvb3RlciBwIHtcbiAgICBmb250LXNpemU6IDMuMnJlbTtcbiAgICBwYWRkaW5nOiAycmVtIDA7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5iYW5kLWZvb3RlciBidXR0b24ge1xuICAgIHdpZHRoOiAxOS43cmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuYmFuZC1mb290ZXIgYnV0dG9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubG9naW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbW96LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5sb2dpbiB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxvZ2luIHtcbiAgICB3aWR0aDogNjAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubG9naW4ge1xuICAgIHdpZHRoOiA4NSU7XG4gIH1cbn1cblxuLmxvZ2luX193cmFwcGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlciB7XG4gICAganVzdGlmeS1jb250ZW50OiB1bnNldDtcbiAgICBoZWlnaHQ6IHVuc2V0O1xuICB9XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIHtcbiAgd2lkdGg6IDQwcmVtO1xuICBwYWRkaW5nOiAxLjRyZW0gMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIHtcbiAgICBwYWRkaW5nOiB1bnNldDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciAuYnVzaW5lc3Mge1xuICB0b3A6IDRyZW07XG4gIHJpZ2h0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMi40cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIC5idXNpbmVzcyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciBoMSB7XG4gIGZvbnQtZmFtaWx5OiBcIkthcmxhXCIsIHNhbnMtc2VyaWYsIFwiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDMuMnJlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIGgxIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIGgxIHtcbiAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgfVxufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciBwIHtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBjb2xvcjogIzc2ODA5MztcbiAgcGFkZGluZzogMnJlbSAwO1xufVxuXG4ubG9naW5fX3dyYXBwZXJfX2hlYWRlciAuc29jaWFsLXNpZ25pbiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC1tcy1mbGV4LXBhY2s6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDJyZW0gMCAwIDA7XG59XG5cbi5sb2dpbl9fd3JhcHBlcl9faGVhZGVyIC51ay1kaXZpZGVyLWljb24ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubG9naW5fX2Zvb3RlciB7XG4gIHdpZHRoOiA0MHJlbTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1zLWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IC02cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmxvZ2luX19mb290ZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IGZsZXgtc3RhcnQ7XG4gICAgcGFkZGluZzogMCAwIDIuNHJlbSAwO1xuICAgIG1hcmdpbjogdW5zZXQ7XG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubG9naW5fX2Zvb3RlciB7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbW96LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIH1cbn1cblxuLmxvZ2luX19mb290ZXJfX2FjY291bnQge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubG9naW5fX2Zvb3RlciAuYnVzaW5lc3MtbW9iaWxlIHtcbiAgcGFkZGluZy10b3A6IDJyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgLW1zLWZsZXgtcGFjazogZmxleC1lbmQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAubG9naW5fX2Zvb3RlciAuYnVzaW5lc3MtbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5wYXNzd29yZC1yZWNvdmVyeSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tb3otZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLnBhc3N3b3JkLXJlY292ZXJ5IHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAucGFzc3dvcmQtcmVjb3Zlcnkge1xuICAgIHdpZHRoOiA2MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5wYXNzd29yZC1yZWNvdmVyeSB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4ucGFzc3dvcmQtcmVjb3ZlcnlfX3dyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLW1vei1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnBhc3N3b3JkLXJlY292ZXJ5X193cmFwcGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHVuc2V0O1xuICAgIGhlaWdodDogdW5zZXQ7XG4gIH1cbn1cblxuLnBhc3N3b3JkLXJlY292ZXJ5X193cmFwcGVyX19oZWFkZXIge1xuICB3aWR0aDogNDByZW07XG4gIHBhZGRpbmc6IDEuNHJlbSAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnBhc3N3b3JkLXJlY292ZXJ5X193cmFwcGVyX19oZWFkZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wYXNzd29yZC1yZWNvdmVyeV9fd3JhcHBlcl9faGVhZGVyIC5idXNpbmVzcyB7XG4gIHRvcDogNHJlbTtcbiAgcmlnaHQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEyLjRyZW07XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnBhc3N3b3JkLXJlY292ZXJ5X193cmFwcGVyX19oZWFkZXIgLmJ1c2luZXNzIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwb3NpdGlvbjogdW5zZXQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5wYXNzd29yZC1yZWNvdmVyeV9fd3JhcHBlcl9faGVhZGVyIC5idXNpbmVzcyB7XG4gICAgd2lkdGg6IHVuc2V0O1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnBhc3N3b3JkLXJlY292ZXJ5X193cmFwcGVyX19oZWFkZXIgaDEge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAzLjJyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAucGFzc3dvcmQtcmVjb3ZlcnlfX3dyYXBwZXJfX2hlYWRlciBoMSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbi5wYXNzd29yZC1yZWNvdmVyeV9fd3JhcHBlcl9faGVhZGVyIHAge1xuICBmb250LWZhbWlseTogXCJLYXJsYVwiLCBzYW5zLXNlcmlmLCBcIkFyaWFsXCIsIFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGNvbG9yOiAjNzY4MDkzO1xuICBwYWRkaW5nOiAycmVtIDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAucGFzc3dvcmQtcmVjb3ZlcnlfX3dyYXBwZXJfX2hlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbi5wYXNzd29yZC1yZWNvdmVyeV9fZm9vdGVyIHtcbiAgd2lkdGg6IDQwcmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1vei1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogLTEwcmVtO1xuICBwYWRkaW5nLWJvdHRvbTogN3JlbTtcbiAgZm9udC1mYW1pbHk6IFwiS2FybGFcIiwgc2Fucy1zZXJpZiwgXCJBcmlhbFwiLCBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnBhc3N3b3JkLXJlY292ZXJ5X19mb290ZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IGZsZXgtc3RhcnQ7XG4gICAgcGFkZGluZzogMCAwIDIuNHJlbSAwO1xuICAgIG1hcmdpbjogdW5zZXQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5wYXNzd29yZC1yZWNvdmVyeV9fZm9vdGVyIHtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tb3otanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgfVxufVxuXG4ucGFnZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8vIGluY2x1ZGUtbWVkaWEgYnJlYWtwb2ludHNcbiRicmVha3BvaW50czogKFxuICB4czogMzIwcHgsXG4gIHNtOiA3NjhweCxcbiAgbWQ6IDk5MnB4LFxuICBsZzogMTIwMHB4LFxuICB4bDogMTQ0MHB4LFxuKSAhZGVmYXVsdDtcblxuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKScsXG4gICdyZXRpbmEzeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpJ1xuKSAhZGVmYXVsdDsgXG5cbi8vIFNwYWNpbmcgdW5pdFxuJHN1OiA0cHggIWRlZmF1bHQ7XG5cbi8vIEdsb2JhbCBVbml0XG4keHM6IDFyZW07XG4kc206IDEuNXJlbTtcbiRtZDogMnJlbTtcbiRsZzogM3JlbTtcbiR4bDogNHJlbTtcblxuXG5cbi8vIExpbmUgSGVpZ2h0XG4vLyBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXIgPT4gJGxoLWJhc2U6ICgxICogMTApICsgcHg7IFxuJGxoLWJhc2U6IDFyZW07XG4kbGgteHM6IDEuOHJlbTtcbiRsaC1zOiAycmVtO1xuJGxoLXNtOiAyLjRyZW07XG4kbGgtc2w6IDIuNnJlbTtcbiRsaC1tZCA6IDIuOHJlbTtcbiRsaC1sZzogM3JlbTtcbiRsaC14bDogMy40cmVtO1xuJGxoLXh4bDogNC45cmVtO1xuXG4vLyBQYWRkaW5nIFVuaXRcbiRwdDogMnJlbTtcbiRwcjogMnJlbTtcbiRwYjogMnJlbTtcbiRwbDogMnJlbTtcblxuLy8gTWFyZ2luIFVuaXRcbiRtdDogMnJlbTtcbiRtcjogMnJlbTtcbiRtYjogMnJlbTtcbiRtbDogMnJlbTtcblxuLy8gTGV0dGVyIFNwYWNpbmdcbiRscy14eHM6IDAuNjk2MjU4cHg7XG4kbHMteHM6IDAuODgxMjAxcHg7XG4kbHMtc206IDAuOHB4O1xuJGxzOiAxcHg7XG4kbHMtbWQ6IDZweDtcblxuLy8gY29udGFpbmVyJ3Mgc2V0dGluZ3NcbiRjb250YWluZXItd2lkdGg6IChcbiAgc206IDc1MHB4LFxuICBtZDogOTcwcHgsXG4gIGxnOiAxMTcwcHgsXG4gIC8vIHhsOiAxNTYwcHgsXG4pICFkZWZhdWx0O1xuJGNvbnRhaW5lci1wYWQ6IDE1cHggIWRlZmF1bHQ7XG5cbi8vIEdyaWQgY2xhc3MgbmFtZVxuJGltLWdyaWQtY2xhc3M6ICdncmlkJztcbi8vIENlbGwgY2xhc3MgbmFtZVxuJGltLWdyaWQtY2VsbC1jbGFzczogJ2dyaWQtY2VsbCc7XG4vLyBTZXR0aW5nIGd1dHRlcnNcbiRpbS1ncmlkLWd1dHRlci1zaXplOiAzMHB4O1xuLy8gT3B0aW9uYWxseSBpbmNsdWRlIG1heC13aWR0aCB0byBmaXggSUUgaXNzdWVzXG4kaW0tZ3JpZC1pbmNsdWRlLW1heC13aWR0aDogdHJ1ZTtcblxuLy8gY29sb3JzXG4kdGV4dC1jb2xvcjogYmxhY2s7XG5cbiRjb2xvcnM6IChcbiAgcHJpbWFyeTogKFxuICAgIDA6ICMyOEM2NjAsIC8vUHJpbWFyeVxuICAgIDE6ICMzY2NiNmYsIC8vaG92ZXJcbiAgICAyOiAjNzY4MDkzLCAvL1NlY29uZGFyeVxuICApLFxuICBiZzogKFxuICAgIDA6ICNGM0YzRjQsXG4gICAgMTogIzI4QzY2MCwgLy8gd2VlZGx5IGdyZWVuXG4gICAgMjogcmdiKDE5LCAxNjcsIDcxKSxcbiAgICAzOiAjREIzMjM2LCAvL0dvb2dsZVxuICAgIDQ6ICMzQjU5OTgsIC8vRmFjZWJvb2tcbiAgICA1OiAjNzY4MDkzLFxuICAgIDY6ICNkZTQ2NDksIC8vR29vZ2xlIGhvdmVyXG4gICAgNzogIzRlNjlhMiwgLy9GYWNlYm9vayBob3ZlclxuICApLFxuICBtb2RhbDogKFxuICAgIDA6ICNmZmZmZmZmMFxuICApXG4pO1xuXG4vLyBNYWluIENvbG9yc1xuJGNvbG9yLWluZm86ICAgICAgIzIwODNGRSAhZGVmYXVsdDsgLy8gYmx1ZVxuJGNvbG9yLXN1Y2Nlc3M6ICAgIzJGQ0E3NCAhZGVmYXVsdDsgLy8gZ3JlZW5cbiRjb2xvci13YXJuaW5nOiAgICNmNWI4NDggIWRlZmF1bHQ7IC8vIHllbGxvd1xuJGNvbG9yLWRhbmdlcjogICAgI0VENEQ0RCAhZGVmYXVsdDsgLy8gcmVkXG4kY29sb3ItZmFuY3k6IFx0ICAjNkYzNUYwICFkZWZhdWx0OyAvLyBwdXJwbGVcbiRjb2xvci1wcmltYXJ5OiAgICMyNTI1MjkgIWRlZmF1bHQ7IC8vIGJsYWNrXG5cbi8vIEV4dHJhIENvbG9yc1xuJGNvbG9yLXBpbms6ICNGNDRDNjcgIWRlZmF1bHQ7IC8vIHBpbmtcblxuLy8gTGlnaHQgQ29sb3JzXG4kY29sb3ItaW5mby1saWdodDogICAgICAjRTBFQkZGICFkZWZhdWx0OyAvLyBibHVlXG4kY29sb3Itc3VjY2Vzcy1saWdodDogICAjREFGNEU2ICFkZWZhdWx0OyAvLyBncmVlblxuJGNvbG9yLXdhcm5pbmctbGlnaHQ6ICAgI0ZGRUNEQSAhZGVmYXVsdDsgLy8geWVsbG93XG4kY29sb3ItZGFuZ2VyLWxpZ2h0OiAgICAjRkZFMkUyICFkZWZhdWx0OyAvLyByZWRcbiRjb2xvci1wcmltYXJ5LWxpZ2h0OiAgICNFOUVDRjIgIWRlZmF1bHQ7IC8vIGJsYWNrXG4kY29sb3ItZmFuY3ktbGlnaHQ6ICAgICAjRTlFMEZGICFkZWZhdWx0OyAvLyBwdXJwbGVcblxuLy8gQmFzaWMgQ29sb3JzXG4kY29sb3Itc2t5LWxpZ2h0OiAjRjRGNkY5ICFkZWZhdWx0O1xuJGNvbG9yLXNreTogICAgICAgI0VDRURGMiAhZGVmYXVsdDtcbiRjb2xvci1za3ktZGFyazogICNFMUUyRTggIWRlZmF1bHQ7XG5cbiRjb2xvci1pbmstbGlnaHQ6ICM5OUE1QkQgIWRlZmF1bHQ7XG4kY29sb3ItaW5rOiAgICAgICAjNzY4MDkzICFkZWZhdWx0O1xuJGNvbG9yLWluay1kYXJrOiAgIzI1MjUyOSAhZGVmYXVsdDtcblxuJGNvbG9yLXdoaXRlOiAjZmZmICFkZWZhdWx0O1xuXG4vLyBNYWluIEdyYWRpZW50c1xuJGdyYWRpZW50LWluZm86ICAgICAgIzFEN0JGMCwgIzIwODNGRSAhZGVmYXVsdDtcbiRncmFkaWVudC1zdWNjZXNzOiAgICMyOEM3NkYsICMyQ0NGNzUgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtd2FybmluZzogICAjRjVBMTU1LCAjRjVCODU1ICFkZWZhdWx0O1xuJGdyYWRpZW50LWRhbmdlcjogICAgI0VFNDM0MywgI0VDNUY1RiAhZGVmYXVsdDtcbiRncmFkaWVudC1wcmltYXJ5OiAgICMyNTI1MjksICM0NDQ0NDkgIWRlZmF1bHQ7XG4kZ3JhZGllbnQtc2Vjb25kYXJ5OiAjNzY4MDkzLCAjOTY5RkIwICFkZWZhdWx0O1xuJGdyYWRpZW50LXdlZWRseTogICAgIzI4QzY2MCwgIzIwQkU1OCAhZGVmYXVsdDtcblxuLy8gRXh0cmEgR3JhZGllbnRzXG4kZ3JhZGllbnQtZmFuY3k6ICM0RjVFRjUsICM2QTc3RkY7IC8vIHB1cnBsZVxuXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itc2t5LWxpZ2h0ICFkZWZhdWx0O1xuJGJhc2UtYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuXG4vLyBmb250c1xuJGJhc2UtZm9udC1mYW1pbHk6ICdLYXJsYScsIHNhbnMtc2VyaWY7XG5cbiRiYXNlLWZvbnQtc2l6ZTogMS42cmVtICFkZWZhdWx0O1xuJGJhc2UtbGluZS1oZWlnaHQ6IDIuNHJlbSAhZGVmYXVsdDtcbiRzbWFsbC1mb250LXNpemU6IDEuNHJlbSAhZGVmYXVsdDtcblxuLy8gRm9udCBXZWlnaHRzXG4kZm9udC13ZWlnaHQtbGlnaHQ6IDMwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1zZW1pYm9sZDogNTAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWJvbGQ6IDYwMCAhZGVmYXVsdDtcblxuLy8gVGV4dFxuJHRleHQtc21hbGwtZm9udC1zaXplOiByZW0oMTJweCkgIWRlZmF1bHQ7XG4kdGV4dC1mb250LXNpemU6IHJlbSgxNHB4KSAhZGVmYXVsdDtcbiR0ZXh0LWxhcmdlLWZvbnQtc2l6ZTogcmVtKDE2cHgpICFkZWZhdWx0O1xuXG4kdGV4dC1jb2xvcjogJGNvbG9yLWluayAhZGVmYXVsdDtcbiR0ZXh0LWludmVyc2UtY29sb3I6ICRjb2xvci13aGl0ZSAhZGVmYXVsdDtcbiR0ZXh0LXN0cm9uZy1jb2xvcjogJGNvbG9yLWluayAhZGVmYXVsdDtcblxuLy8gSGVhZGluZ3NcbiRoZWFkaW5nLWNvbG9yOiAkY29sb3ItaW5rLWRhcms7XG4kaGVhZGluZy1tYXJnaW46IDA7XG4kaGVhZGluZy1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LXNlbWlib2xkO1xuXG4kaDEtZm9udC1zaXplOiByZW0oMzZweCkgIWRlZmF1bHQ7XG4kaDItZm9udC1zaXplOiByZW0oMjhweCkgIWRlZmF1bHQ7XG4kaDMtZm9udC1zaXplOiByZW0oMjRweCkgIWRlZmF1bHQ7XG4kaDQtZm9udC1zaXplOiByZW0oMjBweCkgIWRlZmF1bHQ7XG4kaDUtZm9udC1zaXplOiByZW0oMThweCkgIWRlZmF1bHQ7XG4kaDYtZm9udC1zaXplOiByZW0oMTZweCkgIWRlZmF1bHQ7XG5cbi8vIFRyYW5zaXRpb25zXG4kdHQ6IDAuNHM7IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIiosICo6OmJlZm9yZSwgKjo6YWZ0ZXJ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKGJnLCAxKTtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcsIHN2Z3tcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogZ2V0LWNvbG9yKHByaW1hcnksIDIpO1xuICAmOmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgIGNvbG9yOiBnZXQtY29sb3IocHJpbWFyeSwgMik7XG4gIH1cbn1cblxuYWRkcmVzcyB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbnVsLCBvbCwgcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmpzLWFsbGNsaWNrLCAuanMtdG9nZ2xlIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSIsImh0bWwsIGJvZHkge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJvZHkge1xuICBjb2xvcjogJHRleHQtY29sb3I7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbn1cblxuLnRpbnl0ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiBtcygwKTtcbiAgJi0tc21hbGwge1xuICAgIGZvbnQtc2l6ZTogbXMoLTEpO1xuICB9XG5cbiAgPioge1xuICAgIG1hcmdpbi1ib3R0b206IHJlbSg0KiRzdSk7XG4gIH1cblxuICA+KjpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuXG4gID4qOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cblxuICBoMSwgaDIsIGgzLCBoNCB7XG4gICAgbWFyZ2luOiByZW0oMjBweCAwIDhweCk7XG4gIH1cblxuICB1bCBsaSB7XG4gICAgQGluY2x1ZGUgc2V0LWZvbnQ7XG4gIH1cblxuICBhIHtcbiAgICAmW2hyZWZePVwibWFpbHRvXCJdIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBAaW5jbHVkZSByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmctbGVmdDogcmVtKDI4cHgpO1xuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWFnZXMvc3ZnL2VudmVsb3BlLnN2ZycpIGNlbnRlciBsZWZ0IG5vLXJlcGVhdDtcbiAgICB9XG4gIH1cblxuICBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIH1cblxuICBlbSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG5cbiAgdWwsIG9sIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IHJlbSg1KiRzdSk7XG4gICAgbGkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5lbWJlZGRlZC1lbnRpdHkge1xuICAgIEBpbmNsdWRlIG1lZGlhKCc+PXNtJykge1xuICAgICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbjogMXJlbSAxcmVtIDFyZW0gMDtcbiAgICB9XG4gIH1cblxuICAmLS1zbWFsbCB7XG4gICAgZm9udC1zaXplOiBtcygtMSk7XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiBtcy1mdW5jdGlvbigkdjogMCwgJGJhc2U6IGZhbHNlLCAkcmF0aW86IGZhbHNlLCAkdGhyZWFkOiBmYWxzZSwgJHNldHRpbmdzOiAkbW9kdWxhcnNjYWxlKSB7XG5cbiAgLy8gUGFyc2Ugc2V0dGluZ3NcbiAgJG1zLXNldHRpbmdzOiBtcy1zZXR0aW5ncygkYmFzZSwkcmF0aW8sJHRocmVhZCwkc2V0dGluZ3MpO1xuICAkYmFzZTogbnRoKCRtcy1zZXR0aW5ncywgMSk7XG4gICRyYXRpbzogbnRoKCRtcy1zZXR0aW5ncywgMik7XG5cbiAgLy8gUmVuZGVyIHRhcmdldCB2YWx1ZXMgZnJvbSBzZXR0aW5ncy5cbiAgQGlmIHVuaXQoJHJhdGlvKSAhPSAnJyB7XG4gICAgJHJhdGlvOiBtcy10YXJnZXQoJHJhdGlvLCRiYXNlKVxuICB9XG5cbiAgLy8gRmFzdCBjYWxjIGlmIG5vdCBtdWx0aSBzdHJhbmRlZFxuICBAaWYobGVuZ3RoKCRiYXNlKSA9PSAxKSB7XG4gICAgQHJldHVybiBtcy1wb3coJHJhdGlvLCAkdikgKiAkYmFzZTtcbiAgfVxuXG4gIC8vIENyZWF0ZSBuZXcgYmFzZSBhcnJheVxuICAkbXMtYmFzZXM6IG50aCgkYmFzZSwxKTtcblxuICAvLyBOb3JtYWxpemUgYmFzZSB2YWx1ZXNcbiAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCBsZW5ndGgoJGJhc2UpIHtcbiAgICAvLyBpbml0aWFsIGJhc2UgdmFsdWVcbiAgICAkbXMtYmFzZTogbnRoKCRiYXNlLCRpKTtcbiAgICAvLyBJZiB0aGUgYmFzZSBpcyBiaWdnZXIgdGhhbiB0aGUgbWFpbiBiYXNlXG4gICAgQGlmKCRtcy1iYXNlID4gbnRoKCRiYXNlLDEpKSB7XG4gICAgICAvLyBkaXZpZGUgdGhlIHZhbHVlIHVudGlsIGl0IGFsaWducyB3aXRoIG1haW4gYmFzZS5cbiAgICAgIEB3aGlsZSgkbXMtYmFzZSA+IG50aCgkYmFzZSwxKSkge1xuICAgICAgICAkbXMtYmFzZTogJG1zLWJhc2UgLyAkcmF0aW87XG4gICAgICB9XG4gICAgICAkbXMtYmFzZTogJG1zLWJhc2UgKiAkcmF0aW87XG4gICAgfVxuICAgIC8vIElmIHRoZSBiYXNlIGlzIHNtYWxsZXIgdGhhbiB0aGUgbWFpbiBiYXNlLlxuICAgIEBlbHNlIGlmICgkbXMtYmFzZSA8IG50aCgkYmFzZSwxKSkge1xuICAgICAgLy8gcHVtcCB1cCB0aGUgdmFsdWUgdW50aWwgaXQgYWxpZ25zIHdpdGggbWFpbiBiYXNlLlxuICAgICAgQHdoaWxlICRtcy1iYXNlIDwgbnRoKCRiYXNlLDEpIHtcbiAgICAgICAgJG1zLWJhc2U6ICRtcy1iYXNlICogJHJhdGlvO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBQdXNoIGludG8gbmV3IGFycmF5XG4gICAgJG1zLWJhc2VzOiBhcHBlbmQoJG1zLWJhc2VzLCRtcy1iYXNlKTtcbiAgfVxuXG4gIC8vIFNvcnQgYXJyYXkgZnJvbSBzbWFsbGVzdCB0byBsYXJnZXN0LlxuICAkbXMtYmFzZXM6IG1zLXNvcnQoJG1zLWJhc2VzKTtcblxuICAvLyBGaW5kIHN0ZXAgdG8gdXNlIGluIGNhbGN1bGF0aW9uXG4gICR2dGVwOiBmbG9vcigkdiAvIGxlbmd0aCgkbXMtYmFzZXMpKTtcbiAgLy8gRmluZCBiYXNlIHRvIHVzZSBpbiBjYWxjdWxhdGlvblxuICAkbXMtYmFzZTogcm91bmQoKCR2IC8gbGVuZ3RoKCRtcy1iYXNlcykgLSAkdnRlcCkgKiBsZW5ndGgoJG1zLWJhc2VzKSkgKyAxO1xuXG4gIEByZXR1cm4gbXMtcG93KCRyYXRpbywgJHZ0ZXApICogbnRoKCRtcy1iYXNlcywkbXMtYmFzZSk7XG59IiwiJHJlbS1iYXNlbGluZTogMTZweCAhZGVmYXVsdDtcbiRyZW0tZmFsbGJhY2s6IGZhbHNlICFkZWZhdWx0O1xuJHJlbS1weC1vbmx5OiBmYWxzZSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIHJlbS1zZXBhcmF0b3IoJGxpc3QsICRzZXBhcmF0b3I6IGZhbHNlKSB7XG4gIEBpZiAkc2VwYXJhdG9yID09IFwiY29tbWFcIiBvciAkc2VwYXJhdG9yID09IFwic3BhY2VcIiB7XG4gICAgQHJldHVybiBhcHBlbmQoJGxpc3QsIG51bGwsICRzZXBhcmF0b3IpO1xuICB9IFxuICBcbiAgQGlmIGZ1bmN0aW9uLWV4aXN0cyhcImxpc3Qtc2VwYXJhdG9yXCIpID09IHRydWUge1xuICAgIEByZXR1cm4gbGlzdC1zZXBhcmF0b3IoJGxpc3QpO1xuICB9XG5cbiAgLy8gbGlzdC1zZXBhcmF0b3IgcG9seWZpbGwgYnkgSHVnbyBHaXJhdWRlbCAoaHR0cHM6Ly9zYXNzLWNvbXBhdGliaWxpdHkuZ2l0aHViLmlvLyNsaXN0X3NlcGFyYXRvcl9mdW5jdGlvbilcbiAgJHRlc3QtbGlzdDogKCk7XG4gIEBlYWNoICRpdGVtIGluICRsaXN0IHtcbiAgICAkdGVzdC1saXN0OiBhcHBlbmQoJHRlc3QtbGlzdCwgJGl0ZW0sIHNwYWNlKTtcbiAgfVxuXG4gIEByZXR1cm4gaWYoJHRlc3QtbGlzdCA9PSAkbGlzdCwgc3BhY2UsIGNvbW1hKTtcbn1cblxuQG1peGluIHJlbS1iYXNlbGluZSgkem9vbTogMTAwJSkge1xuICBmb250LXNpemU6ICR6b29tIC8gMTZweCAqICRyZW0tYmFzZWxpbmU7XG59XG5cbkBmdW5jdGlvbiByZW0tY29udmVydCgkdG8sICR2YWx1ZXMuLi4pIHtcbiAgJHJlc3VsdDogKCk7XG4gICRzZXBhcmF0b3I6IHJlbS1zZXBhcmF0b3IoJHZhbHVlcyk7XG4gIFxuICBAZWFjaCAkdmFsdWUgaW4gJHZhbHVlcyB7XG4gICAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcIm51bWJlclwiIGFuZCB1bml0KCR2YWx1ZSkgPT0gXCJyZW1cIiBhbmQgJHRvID09IFwicHhcIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlIC8gMXJlbSAqICRyZW0tYmFzZWxpbmUsICRzZXBhcmF0b3IpO1xuICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpID09IFwibnVtYmVyXCIgYW5kIHVuaXQoJHZhbHVlKSA9PSBcInB4XCIgYW5kICR0byA9PSBcInJlbVwiIHtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUgLyAkcmVtLWJhc2VsaW5lICogMXJlbSwgJHNlcGFyYXRvcik7XG4gICAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gXCJsaXN0XCIge1xuICAgICAgJHZhbHVlLXNlcGFyYXRvcjogcmVtLXNlcGFyYXRvcigkdmFsdWUpO1xuICAgICAgJHZhbHVlOiByZW0tY29udmVydCgkdG8sICR2YWx1ZS4uLik7XG4gICAgICAkdmFsdWU6IHJlbS1zZXBhcmF0b3IoJHZhbHVlLCAkdmFsdWUtc2VwYXJhdG9yKTtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUsICRzZXBhcmF0b3IpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSwgJHNlcGFyYXRvcik7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZihsZW5ndGgoJHJlc3VsdCkgPT0gMSwgbnRoKCRyZXN1bHQsIDEpLCAkcmVzdWx0KTtcbn1cblxuQGZ1bmN0aW9uIHJlbSgkdmFsdWVzLi4uKSB7XG4gIEBpZiAkcmVtLXB4LW9ubHkge1xuICAgIEByZXR1cm4gcmVtLWNvbnZlcnQocHgsICR2YWx1ZXMuLi4pO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuIHJlbS1jb252ZXJ0KHJlbSwgJHZhbHVlcy4uLik7XG4gIH1cbn1cblxuQG1peGluIHJlbSgkcHJvcGVydGllcywgJHZhbHVlcy4uLikge1xuICBAaWYgdHlwZS1vZigkcHJvcGVydGllcykgPT0gXCJtYXBcIiB7XG4gICAgQGVhY2ggJHByb3BlcnR5IGluIG1hcC1rZXlzKCRwcm9wZXJ0aWVzKSB7XG4gICAgICBAaW5jbHVkZSByZW0oJHByb3BlcnR5LCBtYXAtZ2V0KCRwcm9wZXJ0aWVzLCAkcHJvcGVydHkpKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlYWNoICRwcm9wZXJ0eSBpbiAkcHJvcGVydGllcyB7XG4gICAgICBAaWYgJHJlbS1mYWxsYmFjayBvciAkcmVtLXB4LW9ubHkge1xuICAgICAgICAjeyRwcm9wZXJ0eX06IHJlbS1jb252ZXJ0KHB4LCAkdmFsdWVzLi4uKTtcbiAgICAgIH1cbiAgICAgIEBpZiBub3QgJHJlbS1weC1vbmx5IHtcbiAgICAgICAgI3skcHJvcGVydHl9OiByZW0tY29udmVydChyZW0sICR2YWx1ZXMuLi4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLyAgICAgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cbi8vICAgIChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcbi8vICAgICBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuLy8gICAgfCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcbi8vICAgIHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcbi8vICAgIHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG4vL1xuLy8gICAgICBTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3Ncbi8vICAgICAgICAgICAgICAgICAgICAgICAgdjEuNC45XG4vL1xuLy8gICAgICAgICAgICAgICAgaHR0cDovL2luY2x1ZGUtbWVkaWEuY29tXG4vL1xuLy8gICAgICAgICBBdXRob3JzOiBFZHVhcmRvIEJvdWNhcyAoQGVkdWFyZG9ib3VjYXMpXG4vLyAgICAgICAgICAgICAgICAgIEh1Z28gR2lyYXVkZWwgKEBodWdvZ2lyYXVkZWwpXG4vL1xuLy8gICAgICBUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZVxuXG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIGxpYnJhcnkgcHVibGljIGNvbmZpZ3VyYXRpb25cbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuLy8vICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG4vLy9cbiRicmVha3BvaW50czogKFxuICAncGhvbmUnOiAzMjBweCxcbiAgJ3RhYmxldCc6IDc2OHB4LFxuICAnZGVza3RvcCc6IDEwMjRweFxuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4vLy8gICAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4vLy8gICk7XG4vLy9cbiRtZWRpYS1leHByZXNzaW9uczogKFxuICAnc2NyZWVuJzogJ3NjcmVlbicsXG4gICdwcmludCc6ICdwcmludCcsXG4gICdoYW5kaGVsZCc6ICdoYW5kaGVsZCcsXG4gICdsYW5kc2NhcGUnOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJyxcbiAgJ3BvcnRyYWl0JzogJyhvcmllbnRhdGlvbjogcG9ydHJhaXQpJyxcbiAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSksIChtaW4tcmVzb2x1dGlvbjogM2RwcHgpJ1xuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MTI4cHgnKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIwZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIuMHJlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuLy8vXG4kdW5pdC1pbnRlcnZhbHM6IChcbiAgJ3B4JzogMSxcbiAgJ2VtJzogMC4wMSxcbiAgJ3JlbSc6IDAuMSxcbiAgJyc6IDBcbikgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIERlZmluZXMgd2hldGhlciBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGF2YWlsYWJsZSwgdXNlZnVsIGZvciBjcmVhdGluZyBzZXBhcmF0ZSBzdHlsZXNoZWV0c1xuLy8vIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgbWVkaWEgcXVlcmllcy5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBEaXNhYmxlcyBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuJGltLW1lZGlhLXN1cHBvcnQ6IHRydWUgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggYnJlYWtwb2ludCB0byBlbXVsYXRlIHdoZW4gc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBkaXNhYmxlZC4gTWVkaWEgcXVlcmllcyB0aGF0IHN0YXJ0IGF0IG9yXG4vLy8gaW50ZXJjZXB0IHRoZSBicmVha3BvaW50IHdpbGwgYmUgZGlzcGxheWVkLCBhbnkgb3RoZXJzIHdpbGwgYmUgaWdub3JlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBkb2VzIG5vdCBpbnRlcmNlcHQgdGhlIGRlc2t0b3AgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAndGFibGV0Jztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49ZGVza3RvcCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCcgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggbWVkaWEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgaW4gYW4gZXhwcmVzc2lvbiBmb3IgaXQgdG8gYmUgdXNlZCB3aGVuIG1lZGlhIHF1ZXJpZXNcbi8vLyBhcmUgbm90IHN1cHBvcnRlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGFuZCBjb250YWlucyBvbmx5IGFjY2VwdGVkIG1lZGlhIGV4cHJlc3Npb25zXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAnc2NyZWVuJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAgLmZvbyB7XG4vLy8gICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYnV0IGNvbnRhaW5zIGEgbWVkaWEgZXhwcmVzc2lvbiB0aGF0IGlzIG5vdCBhY2NlcHRlZFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3JldGluYTJ4Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicsICdwb3J0cmFpdCcsICdsYW5kc2NhcGUnKSAhZGVmYXVsdDtcblxuLy8vL1xuLy8vIENyb3NzLWVuZ2luZSBsb2dnaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIExvZyBhIG1lc3NhZ2UgZWl0aGVyIHdpdGggYEBlcnJvcmAgaWYgc3VwcG9ydGVkXG4vLy8gZWxzZSB3aXRoIGBAd2FybmAsIHVzaW5nIGBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKWBcbi8vLyB0byBkZXRlY3Qgc3VwcG9ydC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBmdW5jdGlvbiBpbS1sb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpIHtcbiAgICBAZXJyb3IgJG1lc3NhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICRtZXNzYWdlO1xuICAgICRfOiBub29wKCk7XG4gIH1cblxuICBAcmV0dXJuICRtZXNzYWdlO1xufVxuXG5cbi8vL1xuLy8vIFdyYXBwZXIgbWl4aW4gZm9yIHRoZSBsb2cgZnVuY3Rpb24gc28gaXQgY2FuIGJlIHVzZWQgd2l0aCBhIG1vcmUgZnJpZW5kbHlcbi8vLyBBUEkgdGhhbiBgQGlmIGltLWxvZygnLi4nKSB7fWAgb3IgYCRfOiBpbS1sb2coJy4uJylgLiBCYXNpY2FsbHksIHVzZSB0aGUgZnVuY3Rpb25cbi8vLyB3aXRoaW4gZnVuY3Rpb25zIGJlY2F1c2UgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbiBhIGZ1bmN0aW9uXG4vLy8gYW5kIHVzZSB0aGUgbWl4aW4gZXZlcnl3aGVyZSBlbHNlIGJlY2F1c2UgaXQncyBtdWNoIG1vcmUgZWxlZ2FudC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBtaXhpbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGltLWxvZygkbWVzc2FnZSkge31cbn1cblxuXG4vLy9cbi8vLyBGdW5jdGlvbiB3aXRoIG5vIGBAcmV0dXJuYCBjYWxsZWQgbmV4dCB0byBgQHdhcm5gIGluIFNhc3MgMy4zXG4vLy8gdG8gdHJpZ2dlciBhIGNvbXBpbGluZyBlcnJvciBhbmQgc3RvcCB0aGUgcHJvY2Vzcy5cbi8vL1xuQGZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vLy9cbi8vLyBEZXRlcm1pbmVzIHdoZXRoZXIgYSBsaXN0IG9mIGNvbmRpdGlvbnMgaXMgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50LlxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEByZXR1cm4ge0Jvb2xlYW59IC0gUmV0dXJucyB0cnVlIGlmIHRoZSBjb25kaXRpb25zIGFyZSBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vL1xuQGZ1bmN0aW9uIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pIHtcbiAgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludCk7XG5cbiAgQGlmIG5vdCAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSB7XG4gICAgQGlmIGltLWxvZygnYCN7JGltLW5vLW1lZGlhLWJyZWFrcG9pbnR9YCBpcyBub3QgYSB2YWxpZCBicmVha3BvaW50LicpIHt9XG4gIH1cblxuICBAZWFjaCAkY29uZGl0aW9uIGluICRjb25kaXRpb25zIHtcbiAgICBAaWYgbm90IG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkY29uZGl0aW9uKTtcbiAgICAgICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAgICAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkY29uZGl0aW9uLCAkb3BlcmF0b3IpO1xuXG4gICAgICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBTcGFjZUFyb3VuZE9wZXJhdG9yXG4gICAgICBAaWYgKCRwcmVmaXggPT0gJ21heCcgYW5kICR2YWx1ZSA8PSAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkgb3JcbiAgICAgICAgICAoJHByZWZpeCA9PSAnbWluJyBhbmQgJHZhbHVlID4gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIHtcbiAgICAgICAgQHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG5vdCBpbmRleCgkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vXG4vLy8gUGFyc2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBHZXQgb3BlcmF0b3Igb2YgYW4gZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IG9wZXJhdG9yIGZyb21cbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBBbnkgb2YgYD49YCwgYD5gLCBgPD1gLCBgPGAsIGDiiaVgLCBg4omkYFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pIHtcbiAgQGVhY2ggJG9wZXJhdG9yIGluICgnPj0nLCAnPicsICc8PScsICc8JywgJ+KJpScsICfiiaQnKSB7XG4gICAgQGlmIHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICAgICBAcmV0dXJuICRvcGVyYXRvcjtcbiAgICB9XG4gIH1cblxuICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICRfOiBpbS1sb2coJ05vIG9wZXJhdG9yIGZvdW5kIGluIGAjeyRleHByZXNzaW9ufWAuJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgZGltZW5zaW9uIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYHdpZHRoYCBvciBgaGVpZ2h0YCAob3IgcG90ZW50aWFsbHkgYW55dGhpbmcgZWxzZSlcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcGFyc2VkLWRpbWVuc2lvbjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAwLCAkb3BlcmF0b3ItaW5kZXggLSAxKTtcbiAgJGRpbWVuc2lvbjogJ3dpZHRoJztcblxuICBAaWYgc3RyLWxlbmd0aCgkcGFyc2VkLWRpbWVuc2lvbikgPiAwIHtcbiAgICAkZGltZW5zaW9uOiAkcGFyc2VkLWRpbWVuc2lvbjtcbiAgfVxuXG4gIEByZXR1cm4gJGRpbWVuc2lvbjtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIHByZWZpeCBiYXNlZCBvbiBhbiBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYG1pbmAgb3IgYG1heGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpIHtcbiAgQHJldHVybiBpZihpbmRleCgoJzwnLCAnPD0nLCAn4omkJyksICRvcGVyYXRvciksICdtYXgnLCAnbWluJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IHZhbHVlIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCB2YWx1ZSBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIEEgbnVtZXJpYyB2YWx1ZVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sICRvcGVyYXRvci1pbmRleCArIHN0ci1sZW5ndGgoJG9wZXJhdG9yKSk7XG5cbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgJHZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKTtcbiAgfSBAZWxzZSB7XG4gICAgJHZhbHVlOiB0by1udW1iZXIoJHZhbHVlKTtcbiAgfVxuXG4gICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsIHVuaXQoJHZhbHVlKSk7XG5cbiAgQGlmIG5vdCAkaW50ZXJ2YWwge1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAgIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAgIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gICAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAgICRfOiBpbS1sb2coJ1Vua25vd24gdW5pdCBgI3t1bml0KCR2YWx1ZSl9YC4nKTtcbiAgfVxuXG4gIEBpZiAkb3BlcmF0b3IgPT0gJz4nIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSArICRpbnRlcnZhbDtcbiAgfSBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gJzwnIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSAtICRpbnRlcnZhbDtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuXG5cbi8vL1xuLy8vIFBhcnNlIGFuIGV4cHJlc3Npb24gdG8gcmV0dXJuIGEgdmFsaWQgbWVkaWEtcXVlcnkgZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBwYXJzZVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIFZhbGlkIG1lZGlhIHF1ZXJ5XG4vLy9cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKSB7XG4gIC8vIElmIGl0IGlzIHBhcnQgb2YgJG1lZGlhLWV4cHJlc3Npb25zLCBpdCBoYXMgbm8gb3BlcmF0b3JcbiAgLy8gdGhlbiB0aGVyZSBpcyBubyBuZWVkIHRvIGdvIGFueSBmdXJ0aGVyLCBqdXN0IHJldHVybiB0aGUgdmFsdWVcbiAgQGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbik7XG4gIH1cblxuICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKTtcbiAgJGRpbWVuc2lvbjogZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcblxuICBAcmV0dXJuICcoI3skcHJlZml4fS0jeyRkaW1lbnNpb259OiAjeyR2YWx1ZX0pJztcbn1cblxuLy8vXG4vLy8gU2xpY2UgYCRsaXN0YCBiZXR3ZWVuIGAkc3RhcnRgIGFuZCBgJGVuZGAgaW5kZXhlc1xuLy8vXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzbGljZVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc3RhcnQgWzFdIC0gU3RhcnQgaW5kZXhcbi8vLyBAcGFyYW0ge051bWJlcn0gJGVuZCBbbGVuZ3RoKCRsaXN0KV0gLSBFbmQgaW5kZXhcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9IFNsaWNlZCBsaXN0XG4vLy9cbkBmdW5jdGlvbiBzbGljZSgkbGlzdCwgJHN0YXJ0OiAxLCAkZW5kOiBsZW5ndGgoJGxpc3QpKSB7XG4gIEBpZiBsZW5ndGgoJGxpc3QpIDwgMSBvciAkc3RhcnQgPiAkZW5kIHtcbiAgICBAcmV0dXJuICgpO1xuICB9XG5cbiAgJHJlc3VsdDogKCk7XG5cbiAgQGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBudGgoJGxpc3QsICRpKSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vLy9cbi8vLyBTdHJpbmcgdG8gbnVtYmVyIGNvbnZlcnRlclxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIENhc3RzIGEgc3RyaW5nIGludG8gYSBudW1iZXJcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBiZSBwYXJzZWRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn1cbi8vL1xuQGZ1bmN0aW9uIHRvLW51bWJlcigkdmFsdWUpIHtcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpICE9ICdzdHJpbmcnIHtcbiAgICAkXzogaW0tbG9nKCdWYWx1ZSBmb3IgYHRvLW51bWJlcmAgc2hvdWxkIGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgJGZpcnN0LWNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgMSwgMSk7XG4gICRyZXN1bHQ6IDA7XG4gICRkaWdpdHM6IDA7XG4gICRtaW51czogKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKTtcbiAgJG51bWJlcnM6ICgnMCc6IDAsICcxJzogMSwgJzInOiAyLCAnMyc6IDMsICc0JzogNCwgJzUnOiA1LCAnNic6IDYsICc3JzogNywgJzgnOiA4LCAnOSc6IDkpO1xuXG4gIC8vIFJlbW92ZSArLy0gc2lnbiBpZiBwcmVzZW50IGF0IGZpcnN0IGNoYXJhY3RlclxuICBAaWYgKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJysnIG9yICRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKSB7XG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJHZhbHVlLCAyKTtcbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkdmFsdWUpIHtcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAkaSwgJGkpO1xuXG4gICAgQGlmIG5vdCAoaW5kZXgobWFwLWtleXMoJG51bWJlcnMpLCAkY2hhcmFjdGVyKSBvciAkY2hhcmFjdGVyID09ICcuJykge1xuICAgICAgQHJldHVybiB0by1sZW5ndGgoaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCksIHN0ci1zbGljZSgkdmFsdWUsICRpKSlcbiAgICB9XG5cbiAgICBAaWYgJGNoYXJhY3RlciA9PSAnLicge1xuICAgICAgJGRpZ2l0czogMTtcbiAgICB9IEBlbHNlIGlmICRkaWdpdHMgPT0gMCB7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTAgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSAvICRkaWdpdHM7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KTtcbn1cblxuXG4vLy9cbi8vLyBBZGQgYCR1bml0YCB0byBgJHZhbHVlYFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGFkZCB1bml0IHRvXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICR1bml0IC0gU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB1bml0XG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gYCR2YWx1ZWAgZXhwcmVzc2VkIGluIGAkdW5pdGBcbi8vL1xuQGZ1bmN0aW9uIHRvLWxlbmd0aCgkdmFsdWUsICR1bml0KSB7XG4gICR1bml0czogKCdweCc6IDFweCwgJ2NtJzogMWNtLCAnbW0nOiAxbW0sICclJzogMSUsICdjaCc6IDFjaCwgJ3BjJzogMXBjLCAnaW4nOiAxaW4sICdlbSc6IDFlbSwgJ3JlbSc6IDFyZW0sICdwdCc6IDFwdCwgJ2V4JzogMWV4LCAndncnOiAxdncsICd2aCc6IDF2aCwgJ3ZtaW4nOiAxdm1pbiwgJ3ZtYXgnOiAxdm1heCk7XG5cbiAgQGlmIG5vdCBpbmRleChtYXAta2V5cygkdW5pdHMpLCAkdW5pdCkge1xuICAgICRfOiBpbS1sb2coJ0ludmFsaWQgdW5pdCBgI3skdW5pdH1gLicpO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWUgKiBtYXAtZ2V0KCR1bml0cywgJHVuaXQpO1xufVxuXG4vLy9cbi8vLyBUaGlzIG1peGluIGFpbXMgYXQgcmVkZWZpbmluZyB0aGUgY29uZmlndXJhdGlvbiBqdXN0IGZvciB0aGUgc2NvcGUgb2Zcbi8vLyB0aGUgY2FsbC4gSXQgaXMgaGVscGZ1bCB3aGVuIGhhdmluZyBhIGNvbXBvbmVudCBuZWVkaW5nIGFuIGV4dGVuZGVkXG4vLy8gY29uZmlndXJhdGlvbiBzdWNoIGFzIGN1c3RvbSBicmVha3BvaW50cyAocmVmZXJyZWQgdG8gYXMgdHdlYWtwb2ludHMpXG4vLy8gZm9yIGluc3RhbmNlLlxuLy8vXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrcG9pbnRzIFsoKV0gLSBNYXAgb2YgdHdlYWtwb2ludHMgdG8gYmUgbWVyZ2VkIHdpdGggYCRicmVha3BvaW50c2Bcbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zIFsoKV0gLSBNYXAgb2YgdHdlYWtlZCBtZWRpYSBleHByZXNzaW9ucyB0byBiZSBtZXJnZWQgd2l0aCBgJG1lZGlhLWV4cHJlc3Npb25gXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgYnJlYWtwb2ludHMgd2l0aCBhIHR3ZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBtZWRpYSBleHByZXNzaW9ucyB3aXRoIGEgY3VzdG9tIG9uZVxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCBib3RoIGNvbmZpZ3VyYXRpb24gbWFwc1xuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpLCAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbkBtaXhpbiBtZWRpYS1jb250ZXh0KCR0d2Vha3BvaW50czogKCksICR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCkpIHtcbiAgLy8gU2F2ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkZ2xvYmFsLWJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHM7XG4gICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnM6ICRtZWRpYS1leHByZXNzaW9ucztcblxuICAvLyBVcGRhdGUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnRzLCAkdHdlYWtwb2ludHMpICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogbWFwLW1lcmdlKCRtZWRpYS1leHByZXNzaW9ucywgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zKSAhZ2xvYmFsO1xuXG4gIEBjb250ZW50O1xuXG4gIC8vIFJlc3RvcmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiAkZ2xvYmFsLWJyZWFrcG9pbnRzICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogJGdsb2JhbC1tZWRpYS1leHByZXNzaW9ucyAhZ2xvYmFsO1xufVxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBwdWJsaWMgZXhwb3NlZCBBUElcbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSBiYXNlZCBvbiBhIGxpc3Qgb2YgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc2luZ2xlIHNldCBicmVha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PXRhYmxldCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNThweCcsICc8ODUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5kZXNrdG9wJywgJzw9MTM1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCdyZXRpbmEyeCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIE1peGluZyBldmVyeXRoaW5nXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1MHB4JywgJzx0YWJsZXQnLCAncmV0aW5hM3gnKSB7IH1cbi8vL1xuQG1peGluIG1lZGlhKCRjb25kaXRpb25zLi4uKSB7XG4gIC8vIHNjc3MtbGludDpkaXNhYmxlIFNwYWNlQXJvdW5kT3BlcmF0b3JcbiAgQGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA9PSAwKSBvclxuICAgICAgKG5vdCAkaW0tbWVkaWEtc3VwcG9ydCBhbmQgaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikpIHtcbiAgICBAY29udGVudDtcbiAgfSBAZWxzZSBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPiAwKSB7XG4gICAgQG1lZGlhICN7dW5xdW90ZShwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgMSkpKX0ge1xuICAgICAgLy8gUmVjdXJzaXZlIGNhbGxcbiAgICAgIEBpbmNsdWRlIG1lZGlhKHNsaWNlKCRjb25kaXRpb25zLCAyKS4uLikge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi52aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbn1cblxuLmNvbnRlbnQtbGVmdCB7XG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbi5jb250ZW50LWNlbnRlciB7XG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG59XG4uY29udGVudC1yaWdodCB7XG4gID4gKiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59IiwiLmxlZnQtcGFuZWwge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDEpO1xuICBAaW5jbHVkZSBzaXplKDQ4MHB4LCAxMDB2aCk7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgQGluY2x1ZGUgc2l6ZSgxMDAlLCA1MHZoKTtcbiAgfVxuXG4gICZfX3dyYXBwZXIge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgfVxuXG4gICZfX2JvZHkge1xuICAgIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcbiAgICBAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuICB9XG5cbiAgJl9faGVhZGVyIHtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgZmxleC1mbG93KGNvbHVtbik7XG4gICAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG5cbiAgICBAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcbiAgICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgQGluY2x1ZGUgZmxleC1mbG93KHJvdyk7XG4gICAgICBAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgICAgQGluY2x1ZGUgZmxleC1mbG93KGNvbHVtbik7XG4gICAgICBwYWRkaW5nOiAwIDE1cHg7XG4gICAgfVxuXG4gICAgJl9fd3JhcHBlciB7XG4gICAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoZmxleC1zdGFydCk7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTMuNXJlbTtcblxuICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9bGcnKSB7XG5cbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJyZW07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fZm9vdGVyIHtcblxuICAgIC53ZWxjb21lIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA0cmVtO1xuXG4gICAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgfVxuXG4gICAgICAmX190aXRsZSB7XG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDIuNHJlbSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICN0aXQtdHlwZSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmJ0biB7XG4gICAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgICAgd2lkdGg6IDE3MHB4O1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuICAgICAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICB3aWR0aDogNDByZW07XG4gICAgICBwYWRkaW5nLWxlZnQ6IDZyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICB3aWR0aDogdW5zZXQ7XG4gICAgICBwYWRkaW5nLWxlZnQ6IHVuc2V0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgfVxufVxuIiwiLnJpZ2h0LXBhbmVsIHtcblx0d2lkdGg6IDQ3JTtcblx0bWFyZ2luOiAwIGF1dG87XG5cdFxuXHRAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcblx0XHRcdHdpZHRoOjEwMCU7XG5cdH1cbn0iLCIkc20taDogcmVtKDIwMHB4KTtcblxuLmxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgLy8gICBAaW5jbHVkZSBzaGFkb3ctbG9nbygpO1xuXG5cbiAgJi0tc21hbGwge1xuICAgIG1heC1oZWlnaHQ6IDkwcHg7XG4gIH1cblxufVxuIiwiLy8gdmFyc1xuJHA6IHJlbSg4LjNweCA0MHB4KTtcbiRiLXJhZDogOHB4O1xuJGxoOiAxLjY7XG4kaWNvLWRpbTogcmVtKDMycHgpO1xuXG4vLyBTdHJ1Y3R1cmUgQnV0dG9uXG4uYnRuIHtcbiAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAkc21hbGwtZm9udC1zaXplKTtcbiAgQGluY2x1ZGUgc2l6ZSgxMi42cmVtLCA0cmVtKTtcbiAgcGFkZGluZzogJHA7XG4gIGxpbmUtaGVpZ2h0OiAkbGg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICBib3JkZXI6bm9uZTtcbiAgYm9yZGVyLXJhZGl1czogJGItcmFkO1xuICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICB3aWR0aDogMTAwJVxuICB9XG4gIFxuICBzdmcge1xuICAgIEBpbmNsdWRlIHNpemUoJGljby1kaW0sICRpY28tZGltKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICB9XG5cbiAgJi0tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xuICAgIGNvbG9yOndoaXRlO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihwcmltYXJ5LCAwKTtcbiAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogZ2V0LWNvbG9yKHByaW1hcnksIDEpO1xuICAgICAgb3BhY2l0eTogLjk7XG4gICAgfVxuICAgICY6YWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjkyKTtcbiAgICB9XG4gIH1cblxuICAmLS1kYXJrIHtcbiAgICBAaW5jbHVkZSBidXR0b24tc3R5bGUod2hpdGUsIHdoaXRlLCBibGFjaywgIzI1MjUyOSwgd2hpdGUsIGJsYWNrKTtcbiAgICBAaW5jbHVkZSBzaXplKDE1cmVtLCA0cmVtKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBibGFjayA7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC45Mik7XG4gICAgfVx0XG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAmLS1nb29nbGUge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgd2hpdGUsIGdldC1jb2xvcihiZywgMyksIGdldC1jb2xvcihiZywgNiksIGdldC1jb2xvcihiZywgNiksIGdldC1jb2xvcihiZywgNikpO1xuICAgIHdpZHRoOiAzMjRweDtcbiAgICBib3JkZXItcmFkaXVzOiAkYi1yYWQ7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ2V0LWNvbG9yKGJnLCAzKTtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDMpO1xuICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjkyKTtcbiAgICB9XG4gICAgXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgIGkge1xuICAgICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gICAgICBtYXJnaW46IDAuMnJlbSAwLjJyZW07XG4gICAgfVxuICB9XG5cbiAgJi0tZmFjZWJvb2sge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgd2hpdGUsIGdldC1jb2xvcihiZywgNCksIGdldC1jb2xvcihiZywgNyksIGdldC1jb2xvcihiZywgNyksIGdldC1jb2xvcihiZywgNykpO1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICAgIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBnZXQtY29sb3IoYmcsIDQpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHR0O1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgNCk7XG4gICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSguOTIpO1xuICAgIH1cdFxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICB3aWR0aDogMTUlO1xuICAgIH1cbiAgfVxuXG4gICYtLWdyZXkge1xuICAgIEBpbmNsdWRlIGJ1dHRvbi1zdHlsZSh3aGl0ZSwgd2hpdGUsIGdldC1jb2xvcihiZywgNSksICM5NjlGQjAsIGdldC1jb2xvcihiZywgNSksIGdldC1jb2xvcihiZywgNSkpO1xuICAgIGJvcmRlci1yYWRpdXM6ICRiLXJhZDtcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IoYmcsIDUpO1xuICAgICAgY29sb3I6JGNvbG9yLXdoaXRlO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSguOTIpO1xuICAgIH1cbiAgfVxuXG5cbn1cblxuLmJ0bi1sYXJnZSB7XG4gIHdpZHRoOiAyMS40cmVtO1xuICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLy8gICBAaW5jbHVkZSB3aGVuLWluc2lkZSgnLicpIHtcbi8vICAgICBAaW5jbHVkZSBzaXplKDEwMCUsIGF1dG8pO1xuLy8gICB9IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTVBPTkVOVCB0b1RPUCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4udG9Ub3Age1xuICAgIEBpbmNsdWRlIHNpemUoYXV0bywgMy43MnJlbSk7XG4gICAgQGluY2x1ZGUgZml4ZWQodG9wIDg2JSByaWdodCAycmVtKTtcbiAgICB6LWluZGV4OiA5OTk5OTtcbiAgICBiYWNrZ3JvdW5kOiAjNGI0NjNlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwYWRkaW5nOiAxLjJyZW0gMXJlbTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICBcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsICR0dDtcbiAgICAgICAgb3BhY2l0eToxO1xuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCByZ2JhKDAsIDAsIDAsIDAuNik7XG4gICAgICAgIGNvbG9yOndoaXRlO1xuICAgIH1cbn0iLCJcdC5pbnB1dC1ub3JtYWwge1xuXHQgIGJhY2tncm91bmQ6IGdldC1jb2xvcihiZywgMCk7XG5cdCAgaGVpZ2h0OiA0cmVtO1xuXHQgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHQgIGJvcmRlci1yYWRpdXM6IDRweDtcblx0ICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDEuNnJlbSk7XG5cdCAgZGlzcGxheTogYmxvY2s7XG5cdH1cblxuXHQudWstaW5wdXQ6Zm9jdXMsXG5cdC51ay1zZWxlY3Q6Zm9jdXMsXG5cdC51ay10ZXh0YXJlYTpmb2N1cyB7XG5cdCAgYm9yZGVyOiAxcHggc29saWQgZ2V0LWNvbG9yKGJnLCAxKTtcblx0fVxuIiwiLmxpbmstdGV4dCB7XG4gIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMS40cmVtKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogZ2V0LWNvbG9yKHByaW1hcnksIDApO1xuXG4gICY6aG92ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAkdHQ7XG4gICAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAxKTtcbiAgfVxufVxuIiwiLmxvZ2luLWZvcm0ge1xuXHR3aWR0aDogNDAwcHg7XG5cdHBhZGRpbmctYm90dG9tOiAyLjRyZW07XG5cblx0QGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG5cdFx0d2lkdGg6MTAwJTtcblx0fVxuXHRcblx0bGFiZWwge1xuXHRcdEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCA2MDAsIG5vcm1hbCwgMS42cmVtKTtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0bWFyZ2luOjFyZW0gMDtcblx0fVxuXG5cdCZfX3Bhc3N3b3JkIHtcblx0XHRAaW5jbHVkZSBmbGV4Ym94KCk7XG5cdFx0QGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuXHRcdEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG5cdFx0bGFiZWw6bGFzdC1jaGlsZCB7XG5cdFx0XHR3aWR0aDogNDUlO1xuXHRcdH1cblx0fVxuXG5cdC5wcml2YWN5LXBvbGljeSB7XG5cdFx0QGluY2x1ZGUgZmxleGJveCgpO1xuXHRcdEBpbmNsdWRlIGFsaWduLWl0ZW1zKGJhc2VsaW5lKTtcblx0XHRsYWJlbCB7XG5cdFx0XHRAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsICRzbWFsbC1mb250LXNpemUpO1xuXHRcdFx0cGFkZGluZy1sZWZ0OiAxcmVtO1xuXHRcdH1cblxuXHR9XG59IiwiLmNoYW5nZS13b3JkcyB7XG4gIHdpZHRoOiA1MCU7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgZm9udC1zaXplOiAzZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0yLjdyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAyLjRyZW0pO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgfVxuXG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3BhY2l0eTogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLXdlYmtpdC1hbmltYXRpb246IGFuaW1hdGVXb3JkIDE4cyBsaW5lYXIgaW5maW5pdGUgMHM7XG4gIC1tcy1hbmltYXRpb246IGNoYW5nZVdvcmQgMThzIGxpbmVhciBpbmZpbml0ZSAwcztcbiAgYW5pbWF0aW9uOiBjaGFuZ2VXb3JkIDE4cyBsaW5lYXIgaW5maW5pdGUgMHM7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbjpudGgtY2hpbGQoMikge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogM3M7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDNzO1xuICBhbmltYXRpb24tZGVsYXk6IDNzO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbjpudGgtY2hpbGQoMykge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogNnM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDZzO1xuICBhbmltYXRpb24tZGVsYXk6IDZzO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbjpudGgtY2hpbGQoNCkge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogOXM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDlzO1xuICBhbmltYXRpb24tZGVsYXk6IDlzO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbjpudGgtY2hpbGQoNSkge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICAtbXMtYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogMTJzO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jaGFuZ2Utd29yZHMgc3BhbjpudGgtY2hpbGQoNikge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMXM7XG4gIC1tcy1hbmltYXRpb24tZGVsYXk6IDFzO1xuICBhbmltYXRpb24tZGVsYXk6IDFzO1xuICBjb2xvcjogd2hpdGU7XG59XG5cblxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgY2hhbmdlV29yZCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgMiUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTMwcHgpO1xuICB9XG5cbiAgNSUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgfVxuXG4gIDE3JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG5cbiAgMjAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwcHgpO1xuICB9XG5cbiAgODAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuIiwiLmNhcmRzLWNvbnRhaW5lciB7XG4gIC5jYXJkIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuXG4gICAgLnVrLWNhcmQtYm9keSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcGFkZGluZzogNDBweCAyMDBweDtcblxuICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9eGwnKSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMTIwcHg7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIG1lZGlhKCc8PWxnJykge1xuICAgICAgICBwYWRkaW5nOiAwIDgwcHg7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgICAgICBwYWRkaW5nOiAwIDQwcHg7XG4gICAgICB9XG5cbiAgICAgICN0aXQtdHlwZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICA7XG4gICAgICB9XG5cbiAgICAgIGgzIHtcbiAgICAgICAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCA0cmVtKTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAgICAgICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDIuNHJlbSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcCB7XG4gICAgICAgIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMnJlbSk7XG4gICAgICAgIGNvbG9yOiAkY29sb3ItaW5rLWxpZ2h0O1xuICAgICAgICBwYWRkaW5nOiAycmVtIDA7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICAgICAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAkYmFzZS1mb250LXNpemUpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICZfX2J1dHRvbnMge1xuICAgICAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChmbGV4LXN0YXJ0KTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICAgICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGEge1xuICAgICAgICAgIHBhZGRpbmc6IDJyZW0gMnJlbSAwIDA7XG5cbiAgICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDJyZW0gMCAwIDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuYmFuZC1mb290ZXIge1xuICBiYWNrZ3JvdW5kOiBnZXQtY29sb3IocHJpbWFyeSwgMCk7XG4gIEBpbmNsdWRlIHNpemUoMTAwJSwgMTAwJSk7XG4gIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG4gIEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG4gIHBhZGRpbmc6IDVyZW07XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgfVxuXG4gICZfX3dyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgICB9XG4gIH1cblxuICBwIHtcbiAgICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsIDQuMnJlbSk7XG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0cmVtO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICBmb250LXNpemU6IDMuMnJlbTtcbiAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICB9XG4gIH1cblxuICBidXR0b24ge1xuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgd2lkdGg6IDE5LjdyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi5sb2dpbiB7XG4gIEBpbmNsdWRlIHJlbGF0aXZlKCk7XG4gIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG4gIGhlaWdodDogMTAwJTtcblxuICBAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgIHdpZHRoOiA4NSU7XG4gIH1cblxuICAmX193cmFwcGVyIHtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgICBAaW5jbHVkZSBzaXplKDEwMCUsIDEwMHZoKTtcbiAgICBAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHVuc2V0O1xuICAgICAgaGVpZ2h0OiB1bnNldDtcbiAgICB9XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgd2lkdGg6IDQwcmVtO1xuICAgICAgcGFkZGluZzogMS40cmVtIDA7XG5cbiAgICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgICBwYWRkaW5nOiB1bnNldDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIC5idXNpbmVzcyB7XG4gICAgICAgIEBpbmNsdWRlIGFic29sdXRlKHRvcCA0cmVtIHJpZ2h0IDApO1xuICAgICAgICB3aWR0aDogMTIuNHJlbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJyZW07XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBoMSB7XG4gICAgICAgIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMy4ycmVtKTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgICAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAkc21hbGwtZm9udC1zaXplKTtcbiAgICAgICAgY29sb3I6IGdldC1jb2xvcihwcmltYXJ5LCAyKTtcbiAgICAgICAgcGFkZGluZzogMnJlbSAwO1xuICAgICAgfVxuXG4gICAgICAuc29jaWFsLXNpZ25pbiB7XG4gICAgICAgIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgICAgICAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KHNwYWNlLWJldHdlZW4pO1xuICAgICAgICBwYWRkaW5nOiAycmVtIDAgMCAwO1xuICAgICAgfVxuXG4gICAgICAudWstZGl2aWRlci1pY29uIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19mb290ZXIge1xuICAgIHdpZHRoOiA0MHJlbTtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgICBtYXJnaW4tdG9wOiAtNnJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHJlbTtcbiAgICBAaW5jbHVkZSBzZXQtZm9udCgkYmFzZS1mb250LWZhbWlseSwgbm9ybWFsLCBub3JtYWwsICRiYXNlLWZvbnQtc2l6ZSk7XG5cbiAgICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGZsZXgtc3RhcnQpO1xuICAgICAgcGFkZGluZzogMCAwIDIuNHJlbSAwO1xuICAgICAgbWFyZ2luOiB1bnNldDtcbiAgICAgIEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKGNvbHVtbik7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcbiAgICB9XG5cbiAgICAmX19hY2NvdW50IHtcbiAgICAgIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAuYnVzaW5lc3MtbW9iaWxlIHtcbiAgICAgIHBhZGRpbmctdG9wOiAycmVtO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoZmxleC1lbmQpO1xuXG4gICAgICBAaW5jbHVkZSBtZWRpYSgnPj1tZCcpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5wYXNzd29yZC1yZWNvdmVyeSB7XG4gIEBpbmNsdWRlIHJlbGF0aXZlKCk7XG4gIEBpbmNsdWRlIGZsZXhib3goKTtcbiAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KGNlbnRlcik7XG4gIGhlaWdodDogMTAwJTtcblxuICBAaW5jbHVkZSBtZWRpYSgnPD1sZycpIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cblxuICAmX193cmFwcGVyIHtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgICBAaW5jbHVkZSBzaXplKDEwMCUsIDEwMHZoKTtcbiAgICBAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHVuc2V0O1xuICAgICAgaGVpZ2h0OiB1bnNldDtcbiAgICB9XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgd2lkdGg6IDQwcmVtO1xuICAgICAgcGFkZGluZzogMS40cmVtIDA7XG5cbiAgICAgIEBpbmNsdWRlIG1lZGlhKCc8PXNtJykge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cblxuICAgICAgLmJ1c2luZXNzIHtcbiAgICAgICAgQGluY2x1ZGUgYWJzb2x1dGUodG9wIDRyZW0gcmlnaHQgMCk7XG4gICAgICAgIHdpZHRoOiAxMi40cmVtO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICBwb3NpdGlvbjogdW5zZXQ7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgICAgICB3aWR0aDogdW5zZXQ7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBoMSB7XG4gICAgICAgIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgMy4ycmVtKTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcCB7XG4gICAgICAgIEBpbmNsdWRlIHNldC1mb250KCRiYXNlLWZvbnQtZmFtaWx5LCBub3JtYWwsIG5vcm1hbCwgJHNtYWxsLWZvbnQtc2l6ZSk7XG4gICAgICAgIGNvbG9yOiBnZXQtY29sb3IocHJpbWFyeSwgMik7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19mb290ZXIge1xuICAgIHdpZHRoOiA0MHJlbTtcbiAgICBAaW5jbHVkZSBmbGV4Ym94KCk7XG4gICAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgICBtYXJnaW4tdG9wOiAtMTByZW07XG4gICAgcGFkZGluZy1ib3R0b206IDdyZW07XG4gICAgQGluY2x1ZGUgc2V0LWZvbnQoJGJhc2UtZm9udC1mYW1pbHksIG5vcm1hbCwgbm9ybWFsLCAkYmFzZS1mb250LXNpemUpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChmbGV4LXN0YXJ0KTtcbiAgICAgIHBhZGRpbmc6IDAgMCAyLjRyZW0gMDtcbiAgICAgIG1hcmdpbjogdW5zZXQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9c20nKSB7XG4gICAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vICRtYXgtdzogcmVtKDE5MjBweCk7XG4vLyAkaGVhZGVyLWg6IHJlbSg2MnB4KTtcblxuLnBhZ2Uge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iXX0= */
